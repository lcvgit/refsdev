{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":""},{"location":"byte-order/","title":"Byte Order","text":"<p><code>__STDC_ENDIAN_NATIVE__</code> <code>__STDC_ENDIAN_BIG__</code> <code>__STDC_ENDIAN_LITTLE__</code></p> <p>Defined in <code>&lt;stdbit.h&gt;</code> (since C23).</p> <p><code>__BYTE_ORDER__</code> <code>__ORDER_BIG_ENDIAN__</code> <code>__ORDER_LITTLE_ENDIAN__</code> <code>__ORDER_PDP_ENDIAN__</code></p> <p>Defined by GCC/Clang.</p> <p><code>__BYTE_ORDER</code> <code>__BIG_ENDIAN</code> <code>__LITTLE_ENDIAN</code> <code>__PDP_ENDIAN</code></p> <p>Defined in <code>&lt;endian.h&gt;</code>.</p> <p><code>BYTE_ORDER</code> <code>BIG_ENDIAN</code> <code>LITTLE_ENDIAN</code> <code>PDP_ENDIAN</code></p> <p>Defined in <code>&lt;machine/endian.h&gt;</code>.</p> <p><code>__FLOAT_WORD_ORDER__</code> <code>__ORDER_BIG_ENDIAN__</code> <code>__ORDER_LITTLE_ENDIAN__</code> <code>__ORDER_PDP_ENDIAN__</code></p> <p>Defined by GCC/Clang.</p> <p><code>__FLOAT_WORD_ORDER</code> <code>__BIG_ENDIAN</code> <code>__LITTLE_ENDIAN</code> <code>__PDP_ENDIAN</code></p> <p>Defined in <code>&lt;ieee754.h&gt;</code>.</p> <p><code>_BIG</code> <code>BIG_ENDIAN</code> <code>_BIG_ENDIAN</code> <code>__BIG_ENDIAN</code> <code>__BIGENDIAN__</code> <code>__BIG_ENDIAN__</code> <code>__big_endian__</code> <code>__THW_BIG_ENDIAN__</code></p> <p><code>__ARMEB__</code> <code>__ARM_BIG_ENDIAN</code> <code>__THUMBEB__</code> <code>__AARCH64EB__</code> <code>__MICROBLAZEEB__</code> <code>MIPSEB</code> <code>_MIPSEB</code> <code>__MIPSEB</code> <code>__MIPSEB__</code> <code>__BPF_BIG_ENDIAN__</code> <code>__ckcoreBE__</code> <code>__cskyBE__</code> <code>__cskybe__</code> <code>__CSKYBE__</code> <code>__MCOREBE__</code> <code>__MOXIE_BIG_ENDIAN__</code> <code>__NDS32_EB__</code> <code>nios2_big_endian</code> <code>__nios2_big_endian</code> <code>__nios2_big_endian__</code> <code>__RX_BIG_ENDIAN__</code> <code>__XTENSA_EB__</code></p> <ul> <li>HP/PA RISC</li> <li>M68000</li> <li>S/370</li> <li>S/3790</li> <li>SPARC</li> <li>System/Z</li> </ul> <p><code>_LIT</code> <code>LITTLE_ENDIAN</code> <code>_LITTLE_ENDIAN</code> <code>__LITTLE_ENDIAN</code> <code>__LITTLEENDIAN__</code> <code>__LITTLE_ENDIAN__</code> <code>__little_endian__</code></p> <p><code>__ARMEL__</code> <code>__THUMBEL__</code> <code>__AARCH64EL__</code> <code>__MICROBLAZEEL__</code> <code>MIPSEL</code> <code>_MIPSEL</code> <code>__MIPSEL</code> <code>__MIPSEL__</code> <code>__BPF_LITTLE_ENDIAN__</code> <code>__ckcoreLE__</code> <code>__cskyLE__</code> <code>__cskyle__</code> <code>__CSKYLE__</code> <code>__MCORELE__</code> <code>__MOXIE_LITTLE_ENDIAN__</code> <code>__NDS32_EL__</code> <code>nios2_little_endian</code> <code>__nios2_little_endian</code> <code>__nios2_little_endian__</code> <code>__RX_LITTLE_ENDIAN__</code> <code>__XTENSA_EL__</code></p> <ul> <li>AMD64</li> <li>Arm (Windows)</li> <li>Blackfin</li> <li>IA-64 (if <code>__BIG_ENDIAN__</code> is not defined)</li> <li>Elbrus 2000</li> <li>LoongArch</li> <li>MSP430</li> <li>RISC-V</li> <li>VAX</li> <li>x86</li> </ul> <p><code>__PDP_ENDIAN</code> <code>_PDP_ENDIAN</code> <code>PDP_ENDIAN</code> <code>__PDP_ENDIAN__</code></p> <ul> <li>PDP-11</li> </ul>"},{"location":"versioning/","title":"Versioning","text":""},{"location":"attribute/","title":"Attribute","text":"<ul> <li><code>abi_tag (\"tag\")</code><code>abi_tag (\"tag\", ...)</code></li> <li><code>absdata</code></li> <li><code>access (access-mode, ref-index)</code><code>access (access-mode, ref-index, size-index)</code></li> <li><code>address (addr)</code></li> <li><code>alias (\"target\")</code></li> <li><code>aligned</code><code>aligned (alignment)</code></li> <li><code>alloc_align (position)</code></li> <li><code>alloc_size (position)</code><code>alloc_size (position-1, position-2)</code></li> <li><code>altivec (arg)</code></li> <li><code>always_inline</code></li> <li><code>amdgpu_hsa_kernel (...)</code></li> <li><code>artificial</code></li> <li><code>assume (expression)</code></li> <li><code>assume_aligned (alignment)</code><code>assume_aligned (alignment, offset)</code></li> <li><code>aux</code></li> <li><code>bank_switch</code></li> <li><code>below100</code></li> <li><code>break_handler</code></li> <li><code>brk_interrupt</code></li> <li><code>callee_pop_aggregate_return (number)</code></li> <li><code>cdecl</code></li> <li><code>cf_check</code></li> <li><code>cleanup (cleanup-function)</code></li> <li><code>code_readable</code><code>code_readable (choice)</code></li> <li><code>cold</code></li> <li><code>common</code></li> <li><code>const</code></li> <li><code>constructor</code><code>constructor (priority)</code></li> <li><code>copy</code><code>copy (function)</code><code>copy (type)</code><code>copy (variable)</code></li> <li><code>counted_by (count)</code></li> <li><code>critical</code></li> <li><code>deprecated</code><code>deprecated (\"msg\")</code></li> <li><code>designated_init</code></li> <li><code>destructor</code><code>destructor (priority)</code></li> <li><code>disinterrupt</code></li> <li><code>dllexport</code></li> <li><code>dllimport</code></li> <li><code>eightbit_data</code></li> <li><code>either</code></li> <li><code>error (\"msg\")</code></li> <li><code>exception</code></li> <li><code>exception_handler</code></li> <li><code>expected_throw</code></li> <li><code>externally_visible</code></li> <li><code>fallthrough</code></li> <li><code>far</code></li> <li><code>fast_interrupt</code></li> <li><code>fastcall</code></li> <li><code>fd_arg</code><code>fd_arg (fd-index)</code></li> <li><code>fd_arg_read</code><code>fd_arg_read (fd-index)</code></li> <li><code>fd_arg_write</code><code>fd_arg_write (fd-index)</code></li> <li><code>fentry_name (\"name\")</code></li> <li><code>fentry_section (\"name\")</code></li> <li><code>flag_enum</code></li> <li><code>flatten</code></li> <li><code>force_align_arg_pointer</code></li> <li><code>format (archetype, string-index, first-to-check)</code></li> <li><code>format_arg (string-index)</code></li> <li><code>forwarder_section</code></li> <li><code>function_return (\"choice\")</code></li> <li><code>function_vector</code></li> <li><code>gcc_struct</code></li> <li><code>gnu_inline</code></li> <li><code>hardbool</code><code>hardbool (false-value)</code><code>hardbool (false-value, true-value)</code></li> <li><code>hot</code></li> <li><code>hotpatch (halfwords-before-function-label, halfwords-after-function-label)</code></li> <li>`<code>func (\"resolver\")</code></li> <li><code>indirect_branch (\"choice\")</code></li> <li><code>indirect_return</code></li> <li><code>init_priority (priority)</code></li> <li><code>interrupt</code></li> <li><code>interrupt_handler</code></li> <li><code>interrupt_thread</code></li> <li><code>io</code><code>io (addr)</code></li> <li><code>io_low</code><code>io_low (addr)</code></li> <li><code>isr</code></li> <li><code>jli_always</code></li> <li><code>jli_fixed</code></li> <li><code>kernel</code></li> <li><code>kernel_helper (arg)</code></li> <li><code>kspisusp</code></li> <li><code>l1_data</code></li> <li><code>l1_data_A</code></li> <li><code>l1_data_B</code></li> <li><code>l1_text</code></li> <li><code>l2</code></li> <li><code>leaf</code></li> <li><code>long_call</code></li> <li><code>longcall</code></li> <li><code>lower</code></li> <li><code>malloc</code><code>malloc (deallocator)</code><code>malloc (deallocator, ptr-index)</code></li> <li><code>may_alias</code></li> <li><code>medium_call</code></li> <li><code>micromips</code></li> <li><code>mips16</code></li> <li><code>mode (mode)</code></li> <li><code>model (model-name)</code></li> <li><code>ms_abi</code></li> <li><code>ms_hook_prologue</code></li> <li><code>ms_struct</code></li> <li><code>musttail</code></li> <li><code>naked</code></li> <li><code>near</code></li> <li><code>nesting</code></li> <li><code>nmi_handler</code></li> <li><code>no_address_safety_analysis</code></li> <li><code>no_callee_saved_registers</code></li> <li><code>no_caller_saved_registers</code></li> <li><code>no_dangling</code></li> <li><code>no_gccisr</code></li> <li><code>no_icf</code></li> <li><code>no_instrument_function</code></li> <li><code>no_profile_instrument_function</code></li> <li><code>no_reorder</code></li> <li><code>no_sanitize (\"sanitize-options\")</code><code>no_sanitize (\"sanitize-option\", ...)</code></li> <li><code>no_sanitize_address</code></li> <li><code>no_sanitize_coverage</code></li> <li><code>no_sanitize_thread</code></li> <li><code>no_sanitize_undefined</code></li> <li><code>no_split_stack</code></li> <li><code>no_stack_limit</code></li> <li><code>no_stack_protector</code></li> <li><code>noblock</code></li> <li><code>nocf_check</code></li> <li><code>noclone</code></li> <li><code>nocommon</code></li> <li><code>nocompression</code></li> <li><code>nodirect_extern_access</code></li> <li><code>noinit</code></li> <li><code>noinline</code></li> <li><code>noipa</code></li> <li><code>nomicromips</code></li> <li><code>nomips16</code></li> <li><code>nonnull</code><code>nonnull (arg-index, ...)</code></li> <li><code>nonstring</code></li> <li><code>noplt</code></li> <li><code>noreturn</code></li> <li><code>nosave_low_regs</code></li> <li><code>nothrow</code></li> <li><code>notshared</code></li> <li><code>null_terminated_string_arg</code><code>null_terminated_string_arg (argument-index)</code></li> <li><code>objc_nullability (_nullability-kind_)</code></li> <li><code>objc_root_class</code></li> <li><code>optimize (level)</code><code>optimize (\"string\")</code><code>optimize (level, ...)</code><code>optimize (\"string\", ...)</code></li> <li><code>OS_main</code></li> <li><code>OS_task</code></li> <li><code>packed</code></li> <li><code>patchable_function_entry</code></li> <li><code>pcs</code></li> <li><code>persistent</code></li> <li><code>preserve_access_index</code></li> <li><code>progmem</code></li> <li><code>pure</code></li> <li><code>reentrant</code></li> <li><code>regparm (number)</code></li> <li><code>renesas</code></li> <li><code>reproducible</code></li> <li><code>resbank</code></li> <li><code>reset</code></li> <li><code>retain</code></li> <li><code>returns_nonnull</code></li> <li><code>returns_twice</code></li> <li><code>riscv_vector_cc</code></li> <li><code>saddr</code></li> <li><code>save_volatiles</code></li> <li><code>saveall</code></li> <li><code>scalar_storage_order (\"endianness\")</code></li> <li><code>sda</code></li> <li><code>section (\"section-name\")</code></li> <li><code>secure_call</code></li> <li><code>selectany</code></li> <li><code>sentinel</code><code>sentinel (position)</code></li> <li><code>shared</code></li> <li><code>short_call</code></li> <li><code>shortcall</code></li> <li><code>signal</code></li> <li><code>simd</code><code>simd (\"mask\")</code></li> <li><code>sp_switch</code></li> <li><code>sseregparm</code></li> <li><code>stack_protect</code></li> <li><code>stdcall</code></li> <li><code>strict_flex_array (level)</code></li> <li><code>strub</code><code>strub (\"mode\")</code></li> <li><code>symver (\"name2@nodename\")</code></li> <li><code>syscall_linkage</code></li> <li><code>sysv_abi</code></li> <li><code>tainted_args</code></li> <li><code>target (\"options\")</code><code>target (\"option\", ...)</code></li> <li><code>target_clones (options)</code></li> <li><code>tda</code></li> <li><code>thiscall</code></li> <li><code>tiny_data</code></li> <li><code>tls_model (\"tls_model\")</code></li> <li><code>transparent_union</code></li> <li><code>trap_exit</code></li> <li><code>trapa_handler</code></li> <li><code>unavailable</code><code>unavailable (\"msg\")</code></li> <li><code>uncached</code></li> <li><code>uninitialized</code></li> <li><code>unsequenced</code></li> <li><code>unused</code></li> <li><code>upper</code></li> <li><code>use_hazard_barrier_return</code></li> <li><code>used</code></li> <li><code>vector</code></li> <li><code>vector_size (bytes)</code></li> <li><code>version_id</code></li> <li><code>visibility (visibility-type)</code></li> <li><code>wakeup</code></li> <li><code>warn_if_not_aligned (alignment)</code></li> <li><code>warn_unused</code></li> <li><code>warn_unused_result</code></li> <li><code>warning (\"msg\")</code></li> <li><code>weak</code></li> <li><code>weakref</code><code>weakref (\"target\")</code></li> <li><code>zda</code></li> <li><code>zero_call_used_regs (\"choice\")</code></li> </ul>"},{"location":"compiler/","title":"Compiler","text":"<ul> <li>ACC (David Ashley's C Compiler)</li> <li>Amsterdam Compiler Kit</li> <li>AMD Optimizing C/C++ Compiler (AOCC)</li> <li>Analog Devices Compilers<ul> <li>CrossCore</li> <li>VisualDSP++</li> </ul> </li> <li>Apple Clang</li> <li>Arm Compilers<ul> <li>Arm Compiler for Embedded (RealView)</li> <li>Arm Compiler for Linux</li> <li>ARM GCC</li> <li>ARM LLVM</li> </ul> </li> <li>Aztec C Compiler</li> <li>BD Software C Compiler</li> <li>Borland C/C++ (Embarcadero / Turbo)</li> <li>cc65 Cross-Compiler Suite</li> <li>CEIBO Compilers</li> <li>CenterLine-C++ Compilation System</li> <li>CEVA</li> <li>CFront</li> <li>CINT C++ Interpreter</li> <li>Clang (LLVM)</li> <li>CodeSourcery</li> <li>Comeau</li> <li>Compaq</li> <li>CompCert</li> <li>Convex</li> <li>Cosmic Compilers</li> <li>Coverity Static Analyzer</li> <li>Cray</li> <li>Crescent Bay Software</li> <li>Crossware Compilers</li> <li>Custom Computer Services</li> <li>Diab / Wind River Systems</li> <li>DICE C</li> <li>Digital Mars / Symantec / Zortech</li> <li>Digital Research</li> <li>Dignus</li> <li>DJGPP</li> <li>Dunfield Development Systems</li> <li>Edison Design Group</li> <li>Eiffel Software</li> <li>EKOPath</li> <li>Fabius</li> <li>Forth</li> <li>Franklin</li> <li>FreeScale Compilers</li> <li>Fujitsu Compilers</li> <li>GHS (Green Hill Systems)</li> <li>GNU Compilers</li> <li>GNU Compiler Collection (gcc/g++)</li> <li>GNU Compiler Collection for Embedded (gcce)</li> <li>GCC for Tricore</li> <li>HCL Technologies</li> <li>Hexagon</li> <li>Hi-Tech Compilers</li> <li>HP Compilers<ul> <li>HP aC++</li> <li>HP C/ANSI C</li> </ul> </li> <li>IAR Compilers</li> <li>IBM Compilers<ul> <li>IBM Open XL</li> <li>IBM XL</li> <li>IBM z/OS XL</li> </ul> </li> <li>ImageCraft</li> <li>Intel Compilers<ul> <li>Intel OneAPI DPC/C++</li> <li>Intel C++ Compiler Classic (icc)</li> <li>Intel C++ Compiler (icx)</li> <li>Intel Parallel Studio XE</li> <li>Intel System Studio</li> </ul> </li> <li>Interstron C++ Compiler</li> <li>KAI</li> <li>Keil Compilers<ul> <li>Keil C166</li> <li>Keil C251</li> <li>Keil C51/Cx51</li> <li>Keil CARM</li> </ul> </li> <li>Lattice C</li> <li>LCC</li> <li>Liant</li> <li>MCP (Unisys)</li> <li>MCST eLbrus Compiler Collection</li> <li>MetaWare</li> <li>Microchip Compilers</li> <li>Microsoft Compilers<ul> <li>Microsoft QuickC</li> <li>Microsoft Visual Studio</li> </ul> </li> <li>Microtec</li> <li>Microway NDP</li> <li>mikroC Compilers (Mikroelektronika)<ul> <li>mikroC AI for ARM</li> <li>mikroC AI for AVR</li> <li>mikroC AI for dsPIC/PIC24</li> <li>mikroC AI for PIC</li> <li>mikroC AI for PIC32</li> <li>mikroC PRO for 8051</li> <li>mikroC PRO for ARM</li> <li>mikroC PRO for AVR</li> <li>mikroC PRO for dsPIC/PIC24</li> <li>mikroC PRO for FT90x</li> <li>mikroC PRO for PIC</li> <li>mikroC PRO for PIC32</li> </ul> </li> <li>MinGW Compilers</li> <li>MIPSpro</li> <li>Miracle C</li> <li>MPW</li> <li>MWC</li> <li>MetroWerks<ul> <li>MetroWerks CodeWarrior</li> <li>MetroWerks DesignWare ARC MetaWare</li> </ul> </li> <li>National Instruments Compilers<ul> <li>National Instruments LabWindows/CVI Compiler</li> <li>National Instruments LabWindows/CVI Clang C/C++ Compiler</li> <li>National Instruments C/C++ Development Tools for NI Linux Real-Time</li> </ul> </li> <li>Norcroft C</li> <li>Nullstone</li> <li>Nvidia Compilers<ul> <li>NVCC</li> <li>NVHPC</li> </ul> </li> <li>NWCC</li> <li>Open64</li> <li>Oracle Compilers<ul> <li>Oracle Pro  - C</li> <li>Oracle SunPro / Solaris Studio</li> </ul> </li> <li>Orange C</li> <li>Palm</li> <li>Pelles</li> <li>Personal C Compiler (DeSmet)</li> <li>PGI</li> <li>QNX Compilers</li> <li>Raisonance Compilers</li> <li>Reliant CDS</li> <li>Renesas/Hitachi Compilers<ul> <li>Renesas C Compiler Package for RH850 Family</li> <li>Renesas C Compiler Package for RL78 Family</li> <li>Renesas C/C++ Compiler Package for RX Family</li> <li>Renesas C/C++ Compiler Package for SuperH</li> </ul> </li> <li>Rigel</li> <li>Salford C++ (Silverfrost)</li> <li>SAS/C</li> <li>SCO<ul> <li>SCO OpenServer</li> </ul> </li> <li>SCORE C/C++ (DDC-I)</li> <li>SDCC (Small Device C Compiler)</li> <li>SEGGER Compilers</li> <li>SGI (Silicon Graphics Inc)</li> <li>Simple C</li> <li>SN</li> <li>Softools Inc</li> <li>Softune Compilers<ul> <li>Softune C Compiler FR/F2MC</li> <li>Softune C Compiler F2MC-8L/8FX</li> <li>Softune C Compiler F2MC-16</li> <li>Softune C/C++ Compiler FR</li> </ul> </li> <li>Stratus VOS</li> <li>SubC Compiler</li> <li>Symbolics C</li> <li>Tandem C/C++</li> <li>TASKING compilers<ul> <li>TASKING C51</li> <li>TASKING C850</li> <li>TASKING C-to-Hardware</li> <li>TASKING MicroBlaze</li> <li>TASKING PCP</li> <li>TASKING TriCore/AURIX</li> <li>TASKING VX</li> </ul> </li> <li>TenDRA</li> <li>THINK C / Lightspeed C</li> <li>Texas Instruments Compiler<ul> <li>Texas Instruments ARM Compiler</li> <li>Texas Instruments ARM Clang Compiler</li> <li>Texas Instruments C2000 Compiler</li> <li>Texas Instruments C29x Clang Compiler</li> <li>Texas Instruments C54x/C5400 Compiler</li> <li>Texas Instruments C55x/C5500 Compiler</li> <li>Texas Instruments C6000 Compiler</li> <li>Texas Instruments C7000 Compiler</li> <li>Texas Instruments PRU Compiler</li> </ul> </li> <li>TinyC</li> <li>Ultimate C</li> <li>USL</li> <li>VBCC</li> <li>VectorC (Codeplay)</li> <li>Watcom Compilers<ul> <li>Watcom</li> <li>OpenWatcom</li> </ul> </li> <li>Zig Compilers<ul> <li>zig C++</li> <li>zig cc</li> </ul> </li> </ul>"},{"location":"compiler/#others","title":"Others","text":"<ul> <li>Acorn C/C++ Compiler</li> <li>Alan Snyder's Portable C Compiler</li> <li>Ch (Interpreter)</li> <li>Deep Blue C</li> <li>Mark Williams C Compiler</li> <li>MISOSYS C Compiler</li> <li>Small-C Compiler</li> <li>Symbolics C</li> </ul>"},{"location":"compiler/acc/","title":"ACC","text":"","tags":["ACC","Ashley's C Compiler","David Ashley","David Ashley's C Compiler","MACC","MenuetOS"]},{"location":"compiler/acc/#identification","title":"Identification","text":"<code>_ACC_</code> <p>Identifies the compiler as ACC.</p>","tags":["ACC","Ashley's C Compiler","David Ashley","David Ashley's C Compiler","MACC","MenuetOS"]},{"location":"compiler/acc/#references","title":"References","text":"<ul> <li>ACC SourceForge</li> <li>MenuetOS ACC</li> </ul>","tags":["ACC","Ashley's C Compiler","David Ashley","David Ashley's C Compiler","MACC","MenuetOS"]},{"location":"compiler/ack/","title":"Amsterdam Compiler Kit","text":"","tags":["ACK","Amsterdam Compiler Kit","David Given","MINIX"]},{"location":"compiler/ack/#identification","title":"Identification","text":"<code>__ACK</code> <p>Identifies the compiler as the Amsterdam Compiler Kit.</p> <code>__ACK__</code> <p>Identifies the compiler as the Amsterdam Compiler Kit.</p>","tags":["ACK","Amsterdam Compiler Kit","David Given","MINIX"]},{"location":"compiler/ack/#references","title":"References","text":"<ul> <li>ACK - Wikipedia</li> <li>ACK - SourceForge</li> <li>ACK - GitHub</li> <li>ANSIfied ACK - GitHub</li> </ul>","tags":["ACK","Amsterdam Compiler Kit","David Given","MINIX"]},{"location":"compiler/aocc/","title":"AMD Optimizing C/C++ Compiler","text":"<p>The AOCC compiler is based on LLVM and has enhanced support for AMD Zen processors (e.g., Epyc, Ryzen).  For dialects of C/C++, AOCC is based on LLVM Clang.  AOCC also supports Fortran and is now based on LLVM Flang (since AOCC 1.2.0); while, earlier versions were based on DragonEgg with GCC 4.8.2.</p>"},{"location":"compiler/aocc/#identification","title":"Identification","text":"<code>__aocc__</code> <p>Identifies the compiler as AOCC.</p> <p>Added in 4.1.0.</p>"},{"location":"compiler/aocc/#versioning","title":"Versioning","text":"<code>__aocc_major__</code> <p>An integer for the major version of AOCC.</p> <p>Added in 4.1.0.</p> <code>__aocc_minor__</code> <p>An integer for the major version of AOCC.</p> <p>Added in 4.1.0.</p> <code>__aocc_patchlevel__</code> <p>An integer for the major version of AOCC.</p> <p>Added in 4.1.0.</p> AOCC LLVM 1.0.0(2017-05-01) 4.0.0 1.1.0(2017-12-15) 6.0.0-trunk(2017-11-30) 1.2.0(2018-04-11) 6.0.0(2018-03-08) 1.2.1(2018-06-12) 6.0.0(2018-03-08) 2.0.0(2019-08-07) 8.0.0(2019-03-20) 2.1.0(2019-11-22) 9.0.0(2019-09-19) 2.2.0(2020-06-30) 10.0.0(2020-03-24) 2.3.0(2020-12-03) 11.0.0(2020-10-12) 3.0.0(2021-03-15) 12.0.0-trunk(2020-10-22) 3.1.0(2021-07-19) 12.0.0(2021-04-14) 3.2.0(2021-12-10) 13.0.0(2021-10-04) 4.0.0(2022-11-10) 14.0.6(2022-06-24) 4.1.0(2023-08-04) 16.0.3(2023-05-03) 4.2.0(2024-02-27) 16.0.3(2023-05-03) 5.0.0(2024-10-10) 17.0.6(2023-11-28)"},{"location":"compiler/aocc/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/AMD_Optimizing_C/C%2B%2B_Compiler</li> <li>https://www.amd.com/en/developer/aocc.html</li> <li>AOCC Archives</li> <li>AOCC Archives - 3.1.0</li> <li>AOCC Archives - 3.3.0</li> <li>AOCC Archives - 4.0.0</li> <li>AOCC 1.0.0</li> <li>AOCC 1.2.0</li> <li>AOCC 1.2.1</li> <li>AOCC 1.2.1 Patched</li> <li>AOCC 2.1.0</li> <li>AOCC 2.2.0</li> <li>AOCC 2.3.0</li> <li>AOCC 3.0.0</li> <li>AOCC 3.1.0</li> <li>AOCC 3.2.0</li> <li>AOCC 4.0.0</li> <li>AOCC 4.0.0</li> </ul>"},{"location":"compiler/apple-clang/","title":"Apple Clang","text":"","tags":["Apple Clang","XCode"]},{"location":"compiler/apple-clang/#identification","title":"Identification","text":"<code>__apple_build_version__</code> and <code>__clang__</code> <p>Identifies the compiler as Apple Clang.</p>","tags":["Apple Clang","XCode"]},{"location":"compiler/apple-clang/#versioning","title":"Versioning","text":"<code>__apple_build_version__</code> <p>An integer for the build version of Apple Clang.</p>","tags":["Apple Clang","XCode"]},{"location":"compiler/apple-clang/#references","title":"References","text":"<ul> <li>https://xcodereleases.com/</li> <li>https://en.wikipedia.org/wiki/Xcode#Toolchain_versions</li> <li>https://gist.github.com/yamaya/2924292</li> <li>https://trac.macports.org/wiki/XcodeVersionInfo</li> </ul>","tags":["Apple Clang","XCode"]},{"location":"compiler/aztec/","title":"Aztec C Compiler","text":""},{"location":"compiler/aztec/#identification","title":"Identification","text":"<code>AZTEC_C</code> <code>__AZTEC_C__</code> <p>Identifies the compiler as Aztec C.</p>"},{"location":"compiler/aztec/#versioning","title":"Versioning","text":"<code>VERSION</code> <code>__VERSION</code> <p>An integer for the version of Aztec C, encoded as a decimal integer with the general form of <code>&lt;ABB&gt;</code>, where:</p> <ul> <li><code>&lt;A&gt;</code> is the major version; and</li> <li><code>&lt;BB&gt;</code> is the minor version.</li> </ul>"},{"location":"compiler/aztec/#references","title":"References","text":""},{"location":"compiler/bds/","title":"BD Software C Compiler","text":""},{"location":"compiler/bds/#identification","title":"Identification","text":"<code>BDSC</code> <p>Identifies the compiler as BDS C.</p> <p>Defined in <code>&lt;stdio.h&gt;</code>.</p>"},{"location":"compiler/bds/#references","title":"References","text":""},{"location":"compiler/borland/","title":"Borland","text":""},{"location":"compiler/borland/#identification","title":"Identification","text":"<p><code>__BORLANDC__</code> <code>__CODEGEARC__</code> <code>__TURBOC__</code></p>"},{"location":"compiler/borland/#versioning","title":"Versioning","text":"<code>__CODEGEARC_VERSION__</code> <p>An integer for the version of Borland.</p> <p>&lt;AABBCCCC&gt;<sub>16</sub></p> <code>__BORLANDC__</code> <p>An integer for the version of Borland.</p> <p>&lt;AABB&gt;<sub>16</sub></p> <code>__CODEGEARC__</code> <p>An integer for the version of Borland.</p> <p>&lt;AABB&gt;<sub>16</sub></p> <code>__TURBOC__</code> <p>An integer for the version of Borland.</p> <p>&lt;AABB&gt;<sub>16</sub></p>"},{"location":"compiler/borland/#references","title":"References","text":""},{"location":"compiler/cc65/","title":"cc65 Compiler Collection","text":""},{"location":"compiler/cc65/#identification","title":"Identification","text":"<code>__CC65__</code> <p>Identifies the compiler as cc65.</p>"},{"location":"compiler/cc65/#versioning","title":"Versioning","text":"<p>Bug</p> <p>There is a minor bug in the encoding of <code>__CC65__</code> for versions 2.16, 2.17, 2.18, and 2.19.</p> <code>__CC65__</code> <p>An integer for the version of cc65, which is encoded as follows:</p> <p>For versions \u2265 2.19-git, encoded as a hexadecimal integer with the general form of &lt;ABB&gt;<sub>16</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>16</sub> is the major version; and</li> <li>&lt;BB&gt;<sub>16</sub> is the minor version.</li> </ul> <p>For versions \u2264 2.15, encoded as a hexadecimal integer with the general form of &lt;AB0&gt;<sub>16</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>16</sub> is the major version; and</li> <li>&lt;B&gt;<sub>16</sub> is the minor version.</li> </ul> <p>Exact values for versions 2.16, 2.17, 2.18, and 2.19 are listed below.</p> Version <code>__CC65__</code> \u2265 2.19-git &lt;ABB&gt;<sub>16</sub> 2.19-git <code>0x213</code> 2.19 <code>0x330</code> 2.18 <code>0x320</code> 2.17 <code>0x310</code> 2.16 <code>0x300</code> 2.15 <code>0x2F0</code> \u2264 2.15 &lt;AB0&gt;<sub>16</sub>"},{"location":"compiler/cc65/#references","title":"References","text":"<ul> <li>cc65</li> <li>cc65 - Documentation</li> <li>cc65 - GitHub</li> <li>cc65/src/common/version.c</li> </ul>"},{"location":"compiler/centerline/","title":"CenterLine-C++ Compilation System","text":""},{"location":"compiler/centerline/#identification","title":"Identification","text":"<code>__CENTERLINE__</code> <p>Identifies the compiler as CenterLine.</p> <code>CENTERLINE_CLPP</code> <p>Identifies the compiler as CenterLine.</p>"},{"location":"compiler/centerline/#references","title":"References","text":"<ul> <li>CenterLine 2.1.1 Programmer's Guide and Reference</li> <li>CodeCenter 4.1.1 Reference</li> </ul>"},{"location":"compiler/comeau/","title":"Comeau C/C++","text":"","tags":["Comeau","Como","EDG"]},{"location":"compiler/comeau/#identification","title":"Identification","text":"<code>__COMO__</code> <p>Identifies the compiler as Comeau C/C++.</p>","tags":["Comeau","Como","EDG"]},{"location":"compiler/comeau/#versioning","title":"Versioning","text":"<code>__COMO_VERSION__</code> <p>An integer for the version of Comeau C/C++, which is encoded as a decimal integer with the general form of &lt;ABB&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version; and</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version.</li> </ul> <pre><code>__COMO_VERSION__ := ((&lt;major&gt; * 100) + &lt;minor&gt;)\n</code></pre>","tags":["Comeau","Como","EDG"]},{"location":"compiler/comeau/#references","title":"References","text":"<ul> <li>Comeau C/C++ - Wikipedia</li> <li>Comeau C/C++ Online Documentation</li> <li>Comeau C/C++ - Predefined Macros</li> <li>Comeau C/C++ 4.2.40 Features</li> <li>Comeau C/C++ 4.2.44 Features</li> <li>Comeau C/C++ 4.3.3 Features</li> </ul>","tags":["Comeau","Como","EDG"]},{"location":"compiler/compaq/","title":"Compaq","text":""},{"location":"compiler/compaq/#identification","title":"Identification","text":"<p><code>__DECC</code> <code>__DECCXX</code> <code>__vaxc</code> <code>VAXC</code> <code>__VAXC</code></p>"},{"location":"compiler/compaq/#versioning","title":"Versioning","text":"<code>__DECC_VER</code> <p>&lt;AABB0CCCC&gt;<sub>10</sub></p> <code>__DECCXX_VER</code> <p>&lt;AABB0CCCC&gt;<sub>10</sub></p>"},{"location":"compiler/compaq/#references","title":"References","text":"<ul> <li>http://odl.sysworks.biz/disk$axpdocsep992/progtool/deccv60/5492p023.htm</li> </ul>"},{"location":"compiler/compcert/","title":"CompCert C","text":""},{"location":"compiler/compcert/#identification","title":"Identification","text":"<code>__COMPCERT__</code> <p>Identifies the compiler as CompCert C.</p>"},{"location":"compiler/compcert/#versioning","title":"Versioning","text":"<code>__COMPCERT_VERSION__</code> <p>&lt;ABB&gt;<sub>10</sub></p> <code>__COMPCERT_MAJOR__</code> <p>An integer for the major version of CompCert.</p> <code>__COMPCERT_MINOR__</code> <p>An integer for the minor version of CompCert.</p>"},{"location":"compiler/compcert/#references","title":"References","text":"<ul> <li>https://compcert.org</li> <li>https://compcert.org/man/manual.pdf</li> </ul>"},{"location":"compiler/convex/","title":"CONVEX C","text":""},{"location":"compiler/convex/#identification","title":"Identification","text":"<code>__convexc__</code> <p>Identifies the compiler as CONVEX C.</p>"},{"location":"compiler/convex/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Convex_Computer</li> </ul>"},{"location":"compiler/cosmic/","title":"Cosmic Compilers","text":"<ul> <li>Cosmic HC05</li> <li>Cosmic HC08</li> <li>Cosmic HC11</li> <li>Cosmic HC12</li> <li>Cosmic HC16</li> <li>Cosmic 68300</li> <li>Cosmic ST7</li> <li>Cosmic ST10/C166</li> </ul>"},{"location":"compiler/cosmic/#identification","title":"Identification","text":"<code>__CSMC__</code> <p>Identifies the compiler as a Cosmic compiler.</p>"},{"location":"compiler/cosmic/#references","title":"References","text":"<ul> <li>https://cosmic-software.com/</li> <li>https://www.cosmicsoftware.com/manuals.php</li> </ul>"},{"location":"compiler/coverity/","title":"Coverity Static Analyzer","text":""},{"location":"compiler/coverity/#identification","title":"Identification","text":"<code>__COVERITY__</code> <p>Identifies the Coverity Static Analyzer.</p>"},{"location":"compiler/coverity/#references","title":"References","text":"<ul> <li>https://coverity.com/</li> </ul>"},{"location":"compiler/cray/","title":"Cray","text":""},{"location":"compiler/cray/#identification","title":"Identification","text":"<code>_CRAYC</code> <p>Identifies the compiler as the Cray C/C++ Compiler.</p>"},{"location":"compiler/cray/#versioning","title":"Versioning","text":"<code>_RELEASE_MAJOR</code> <p>An integer for the major version of the Cray C/C++ Compiler.</p> <code>_RELEASE_MINOR</code> <p>An integer for the minor version of the Cray C/C++ Compiler.</p> <code>_RELEASE_PATCHLEVEL</code> <p>An integer for the patch version of the Cray C/C++ Compiler.</p> <code>_RELEASE_STRING</code> <p>A string for the version of the Cray C/C++ Compiler.</p>"},{"location":"compiler/cray/#references","title":"References","text":"<ul> <li>https://support.hpe.com/hpesc/public/docDisplay?docId=a00115116en_us&amp;docLocale=en_US&amp;page=Predefined_Macro_Use.html</li> </ul>"},{"location":"compiler/diab/","title":"Diab","text":"","tags":["Diab","Wind River Systems"]},{"location":"compiler/diab/#identification","title":"Identification","text":"<p><code>__DCC__</code> <code>__DCPLUSPLUS__</code></p>","tags":["Diab","Wind River Systems"]},{"location":"compiler/diab/#versioning","title":"Versioning","text":"<code>__VERSION_NUMBER__</code> <p>`&lt;ABCC&gt;<sub>10</sub></p>","tags":["Diab","Wind River Systems"]},{"location":"compiler/diab/#references","title":"References","text":"<ul> <li>http://bitsavers.informatik.uni-stuttgart.de/pdf/windRiver/Compiler_5.4_2007/</li> <li>http://bitsavers.informatik.uni-stuttgart.de/pdf/windRiver/Compiler_5.4_2007/wr_compiler_users_guide_mcor_5.4.pdf</li> <li>http://www.bitsavers.org/pdf/windRiver/Compiler_5.4_2007/wr_compiler_users_guide_mips_5.4.pdf</li> <li>http://www.bitsavers.org/pdf/windRiver/Compiler_5.4_2007/wr_compiler_users_guide_arm_xscale_5.4.pdf</li> </ul>","tags":["Diab","Wind River Systems"]},{"location":"compiler/dice/","title":"DICE C","text":""},{"location":"compiler/dice/#identification","title":"Identification","text":"<code>_DCC</code> <p>Identifies the compiler as DICE C.</p> <code>_DICE</code> <p>Identifies the compiler as DICE C.</p> <p>Note</p> <p>This predefined macro is unverified.</p>"},{"location":"compiler/dice/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/DICE_%28compiler%29</li> <li>https://web.archive.org/web/20120527060120/http://www.obviously.com/dice/</li> </ul>"},{"location":"compiler/digital-mars/","title":"Digital Mars","text":"","tags":["DMC","Digital Mars","Symantec","Zorlite","Zortech"]},{"location":"compiler/digital-mars/#identification","title":"Identification","text":"<code>__DMC__</code> <code>__SC__</code> <code>__ZTC__</code> <p>Identifies the compiler as Digital Mars.</p>","tags":["DMC","Digital Mars","Symantec","Zorlite","Zortech"]},{"location":"compiler/digital-mars/#versioning","title":"Versioning","text":"<code>__DMC__</code> <code>__SC__</code> <code>__ZTC__</code> <p>&lt;ABC&gt;<sub>16</sub></p>","tags":["DMC","Digital Mars","Symantec","Zorlite","Zortech"]},{"location":"compiler/digital-mars/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Digital_Mars</li> <li>https://www.digitalmars.com/</li> <li>https://www.digitalmars.com/ctg/predefined.html</li> <li>https://github.com/DigitalMars/dmc</li> </ul>","tags":["DMC","Digital Mars","Symantec","Zorlite","Zortech"]},{"location":"compiler/dignus/","title":"Dignus","text":""},{"location":"compiler/dignus/#identification","title":"Identification","text":"<p><code>__SYSC__</code></p>"},{"location":"compiler/dignus/#versioning","title":"Versioning","text":"<code>__SYSC_VER__</code> <p>&lt;ABBCC&gt;<sub>10</sub></p> <p>Warning</p> <p>The documentation for Dignus System C/C++ states that <code>__SYSC_VER__</code> is a string.</p>"},{"location":"compiler/dignus/#references","title":"References","text":""},{"location":"compiler/djgpp/","title":"DJGPP","text":""},{"location":"compiler/djgpp/#identification","title":"Identification","text":"<code>DJGPP</code> <code>__DJGPP</code> <code>__DJGPP__</code> <p>Identifies the compiler as DJGPP.</p>"},{"location":"compiler/djgpp/#versioning","title":"Versioning","text":"<code>DJGPP</code> <code>__DJGPP</code> <code>__DJGPP__</code> <p>An integer for the major version of DJGPP.</p> <code>DJGPP_MINOR</code> <code>__DJGPP_MINOR</code> <code>__DJGPP_MINOR__</code> <p>An integer for the minor version of DJGPP.</p>"},{"location":"compiler/djgpp/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/DJGPP</li> <li>https://www.delorie.com/djgpp/</li> </ul>"},{"location":"compiler/edg/","title":"Edison Design Group","text":""},{"location":"compiler/edg/#identification","title":"Identification","text":"<code>__EDG__</code> <p>Identifies the compiler as EDG.</p>"},{"location":"compiler/edg/#versioning","title":"Versioning","text":"<code>__EDG_VERSION__</code> <p>An integer for the version of the EDG compiler, which is encoded as a decimal integer with the general form of &lt;ABB&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version; and</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version.</li> </ul>"},{"location":"compiler/edg/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Edison_Design_Group</li> <li>https://www.edg.com/c</li> <li>https://www.edg.com/c/features</li> <li>https://www.edg.com/docs/edg_cpp.pdf</li> </ul>"},{"location":"compiler/ekopath/","title":"EKOPath","text":""},{"location":"compiler/ekopath/#identification","title":"Identification","text":"<p><code>__PATHCC__</code></p>"},{"location":"compiler/ekopath/#versioning","title":"Versioning","text":"<code>__PATHCC__</code> <p>An integer for the major version of EKOPath.</p> <code>__PATHCC_MINOR__</code> <p>An integer for the minor version of EKOPath.</p> <code>__PATHCC_PATCHLEVEL__</code> <p>An integer for the patch version of EKOPath.</p>"},{"location":"compiler/ekopath/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/PathScale</li> <li>https://www.scc.kit.edu/scc/docs/HP-XC/pathscale/UserGuide.pdf</li> <li>https://web.archive.org/web/20160403200425/http://www.pathscale.com/EKOPath-User-Guide</li> </ul>"},{"location":"compiler/fujitsu/","title":"Fujitsu","text":""},{"location":"compiler/fujitsu/#identification","title":"Identification","text":"<code>__CLANG_FUJITSU</code> <p>Identifies the compiler as Fujitsu Clang.</p> <code>__FUJITSU</code> <p>Identifies the compiler as Fujitsu.</p>"},{"location":"compiler/fujitsu/#versioning","title":"Versioning","text":"<code>__FCC_major__</code> <p>An integer for the major version of the Fujitsu compiler.</p> <code>__FCC_minor__</code> <p>An integer for the minor version of the Fujitsu compiler.</p> <code>__FCC_patchlevel__</code> <p>An integer for the patch version of the Fujitsu compiler.</p> <code>__FCC_version__</code> <p>A string for the version of the Fujitsu compiler.</p>"},{"location":"compiler/fujitsu/#references","title":"References","text":"<ul> <li>https://software.fujitsu.com/jp/manual/manualfiles/m230003/j2ul2477/02enz012/j2ul-2477-02enz0.pdf</li> <li>https://software.fujitsu.com/jp/manual/manualfiles/m220004/j2ul2583/03enz001/j2ul-2583-03enz0.pdf</li> <li>https://git.uibk.ac.at/csav7451/uibk-parallelization-23/-/blob/3a456973830a868580bc4d9a6a6898e7e312e945/assignments/03/build/CMakeFiles/3.24.3/CompilerIdCXX/CMakeCXXCompilerId.cpp</li> <li>https://github.com/OpenMathLib/OpenBLAS/issues/3692</li> <li>https://gitlab.cosma.dur.ac.uk/swift/swiftsim/-/blob/zoom_tcollect/m4/ax_compiler_version.m4?ref_type=heads</li> <li>https://lists.mcs.anl.gov/pipermail/petsc-dev/2021-April/027331.html</li> </ul>"},{"location":"compiler/ghs/","title":"Green Hill Systems","text":""},{"location":"compiler/ghs/#identification","title":"Identification","text":"<code>__ghs__</code> <p>Identifies the compiler as GHS.</p>"},{"location":"compiler/ghs/#versioning","title":"Versioning","text":"<code>__GHS_VERSION_NUMBER</code> <p>An integer for the version of the GHS compiler, which is encoded as a decimal integer with the general form of &lt;ABC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version;</li> <li>&lt;B&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;C&gt;<sub>10</sub> is the patch version.</li> </ul> <code>__GHS_VERSION_NUMBER__</code> <p>An integer for the version of the GHS compiler, which is encoded as a decimal integer with the general form of &lt;ABC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version;</li> <li>&lt;B&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;C&gt;<sub>10</sub> is the patch version.</li> </ul> <code>__GHS_REVISION_DATE__</code> <p>An integer for the Epoch time of the GHS compiler version.</p>"},{"location":"compiler/ghs/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Green_Hills_Software</li> <li>https://www.ghs.com/products/compiler.html</li> <li>https://github.com/Kitware/CMake/blob/master/Modules/Compiler/GHS-DetermineCompiler.cmake</li> </ul>"},{"location":"compiler/imagecraft/","title":"Imagecraft","text":""},{"location":"compiler/imagecraft/#identification","title":"Identification","text":"<code>__IMAGECRAFT__</code> <p>Identifies the compiler as Imagecraft.</p>"},{"location":"compiler/imagecraft/#versioning","title":"Versioning","text":"<code>__ICC_VERSION</code> <p>An integer for the version of the Imagecraft compiler, which is encoded as a decimal integer with the general form of &lt;ABBCC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version;</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;CC&gt;<sub>10</sub> is the patch version.</li> </ul> <p>Note</p> <p>Earlier versions encode <code>__ICC_VERSION</code> as &lt;ABB&gt;<sub>10</sub>.</p> <code>__ICC_VERSION__</code> <p>A string for the version of the Imagecraft compiler.</p> <code>__BUILD</code> <p>An integer for the build of the Imagecraft compiler.</p>"},{"location":"compiler/imagecraft/#references","title":"References","text":"<ul> <li>https://imagecraft.com/</li> <li>https://elmicro.com/files/icc/iccv8cortex_manual.pdf</li> <li>https://www.pumpkininc.com/content/doc/manual/rm-iccavr.pdf</li> </ul>"},{"location":"compiler/kai/","title":"KAI C++","text":""},{"location":"compiler/kai/#identification","title":"Identification","text":"<p><code>__KCC</code></p>"},{"location":"compiler/kai/#versioning","title":"Versioning","text":"<code>__KCC_VERSION</code> <p>An integer for the version of the KAI C++ compiler, which is encoded as a hexadecimal integer with the general form of &lt;ABCC&gt;<sub>16</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>16</sub> is the major version;</li> <li>&lt;B&gt;<sub>16</sub> is the minor version; and</li> <li>&lt;CC&gt;<sub>16</sub> is the patch version.</li> </ul>"},{"location":"compiler/kai/#references","title":"References","text":"<ul> <li>https://www.star.bnl.gov/public/comp/train/KAI/doc/index.html</li> <li>https://www.star.bnl.gov/public/comp/train/KAI/doc/Current/doc/UserGuide/faq.html</li> <li>https://www.star.bnl.gov/public/comp/train/KAI/doc/v3.4/doc/man_page/index.html</li> <li>https://www.star.bnl.gov/public/comp/train/KAI/doc/v3.4/doc/UserGuide/index.html</li> </ul>"},{"location":"compiler/lcc/","title":"LCC","text":""},{"location":"compiler/lcc/#identification","title":"Identification","text":"<code>__LCC__</code> <p>Identifies the compiler as LCC.</p> <p>Warning</p> <p>The predefined macro <code>__LCC__</code> is also defined by the MCST eLbrus Compiler Collection.</p>"},{"location":"compiler/lcc/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Local_C_compiler</li> <li>https://drh.github.io/lcc/</li> <li>https://github.com/drh/lcc</li> </ul>"},{"location":"compiler/mcst-lcc/","title":"MCST eLbrus Compiler Collection","text":""},{"location":"compiler/mcst-lcc/#identification","title":"Identification","text":"<code>__LCC__</code> <p>Identifies the compiler as MCST LCC.</p> <p>Warning</p> <p>The predefined macro <code>__LCC__</code> is also defined by the Local C Compiler.</p> <code>__MCST__</code> <p>Identifies the compiler as MCST LCC.</p> <p>Added in 1.25.0.</p>"},{"location":"compiler/mcst-lcc/#versioning","title":"Versioning","text":"<code>__LCC__</code> <p>An integer for the version of the MCST LCC compiler, which is encoded as a decimal integer with the general form of &lt;ABB&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version; and</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version.</li> </ul> <code>__LCC_MINOR__</code> <p>An integer for the major version of the MCST LCC compiler.</p>"},{"location":"compiler/mcst-lcc/#references","title":"References","text":"<ul> <li>http://mcst.ru/lcc</li> </ul>"},{"location":"compiler/microtec/","title":"Microtec C/C++","text":""},{"location":"compiler/microtec/#identification","title":"Identification","text":"<code>_MRI</code> <p>Identifies the compiler as Microtec C/C++.</p>"},{"location":"compiler/microtec/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Mentor_Graphics</li> <li>https://web.archive.org/web/20041010202116/http://www.mentor.com/microtec/</li> </ul>"},{"location":"compiler/microway-ndp/","title":"Microway NDP","text":"<code>__NDPC__</code> <p>Identifies the compiler as Microway NDP.</p> <code>__NDPX__</code> <p>Identifies the compiler as Microway NDP.</p>"},{"location":"compiler/microway-ndp/#references","title":"References","text":"<ul> <li>https://www.microway.com/about/history/</li> <li>http://www.edm2.com/index.php/Microway</li> </ul>"},{"location":"compiler/mingw/","title":"MinGW","text":""},{"location":"compiler/mingw/#identification","title":"Identification","text":"<p><code>__MINGW32__</code> <code>__MINGW64__</code></p>"},{"location":"compiler/mingw/#versioning","title":"Versioning","text":"<p><code>__MINGW32_MAJOR_VERSION</code> <code>__MINGW32_MINOR_VERSION</code> <code>__MINGW64_VERSION_MAJOR</code> <code>__MINGW64_VERSION_MINOR</code></p>"},{"location":"compiler/mingw/#references","title":"References","text":"<ul> <li>http://www.mingw.org/</li> <li>http://mingw-w64.sourceforge.net/</li> </ul>"},{"location":"compiler/mipspro/","title":"MIPSpro","text":""},{"location":"compiler/mipspro/#identification","title":"Identification","text":"<code>sgi</code> <code>__sgi</code> <p>Identifies the compiler as MIPSpro.</p>"},{"location":"compiler/mipspro/#versioning","title":"Versioning","text":"<code>_COMPILER_VERSION</code> <p>An integer for the version of the MIPSpro compiler, which is encoded as a decimal integer with the general form of &lt;ABC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;ABC&gt;<sub>10</sub> is the major version;</li> <li>&lt;ABC&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;ABC&gt;<sub>10</sub> is the patch version.</li> </ul> <code>_SGI_COMPILER_VERSION</code> <p>An integer for the version of the MIPSpro compiler, which is encoded as a decimal integer with the general form of &lt;ABC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;ABC&gt;<sub>10</sub> is the major version;</li> <li>&lt;ABC&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;ABC&gt;<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/mipspro/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/MIPSpro</li> </ul>"},{"location":"compiler/miracle/","title":"Miracle C","text":""},{"location":"compiler/miracle/#identification","title":"Identification","text":"<code>MIRACLE</code> <p>Identifies the compiler as Miracle C.</p>"},{"location":"compiler/miracle/#references","title":"References","text":"<ul> <li>https://web.archive.org/web/20140703121031/http://www.c-compiler.com/</li> </ul>"},{"location":"compiler/mpw/","title":"Macintosh Programmer's Workshop","text":""},{"location":"compiler/mpw/#identification","title":"Identification","text":"<code>__MRC__</code> <p>Identifies the compiler as MPW.</p> <code>MPW_C</code> <p>Identifies the compiler as MPW.</p> <code>MPW_CPLUS</code> <p>Identifies the compiler as MPW.</p>"},{"location":"compiler/mpw/#versioning","title":"Versioning","text":"<code>__MRC__</code> <p>An integer for the version of the MPW compiler, which is encoded as a hexadecimal integer with the general form of &lt;AABB&gt;<sub>16</sub>, where:</p> <ul> <li>&lt;AA&gt;<sub>16</sub> is the major version; and</li> <li>&lt;BB&gt;<sub>16</sub> is the minor version.</li> </ul>"},{"location":"compiler/mpw/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Macintosh_Programmer%27s_Workshop</li> </ul>"},{"location":"compiler/msvc/","title":"Microsoft Visual Studio","text":""},{"location":"compiler/msvc/#identification","title":"Identification","text":"<code>_MSC_VER</code> <p>Identifies the compiler as Microsoft Visual Studio.</p>"},{"location":"compiler/msvc/#versioning","title":"Versioning","text":"<code>_MSC_VER</code> <p>An integer for the version of the Microsoft Visual Studio compiler, which is encoded as a decimal integer with the general form of &lt;AABB&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;AA&gt;<sub>10</sub> is the major version; and</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version.</li> </ul> <code>_MSC_FULL_VER</code> <p>An integer for the version of the Microsoft Visual Studio compiler, which is encoded as a decimal integer with the general form of either &lt;__AABBCCCC_&gt;<sub>10</sub> or &lt;AABBCCCCC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;AA&gt;<sub>10</sub> is the major version;</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;CCCC(C)&gt;<sub>10</sub> is the patch version.</li> </ul> <code>_MSC_BUILD</code> <p>An integer for the build version of the Microsoft Visual Studio compiler.</p>"},{"location":"compiler/msvc/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Visual_studio</li> </ul>"},{"location":"compiler/norcroft/","title":"Norcroft","text":"<code>__CC_NORCROFT</code> <p>Identifies the compiler as Norcroft.</p>","tags":["Codemist","Norcroft"]},{"location":"compiler/norcroft/#references","title":"References","text":"<ul> <li>http://www.codemist.co.uk/ncc/index.html</li> <li>http://www.ee.ic.ac.uk/pcheung/teaching/ee2_computing/arm/refman2v2.pdf</li> <li>http://www.transputer.net/prog/72-tds-487-00/otds4ref.pdf</li> <li>https://www.transputer.net/prog/72-tds-224-00/ctdsusr.pdf</li> </ul>","tags":["Codemist","Norcroft"]},{"location":"compiler/nwcc/","title":"nwcc","text":""},{"location":"compiler/nwcc/#identification","title":"Identification","text":"<code>__NWCC__</code> <p>Identifies the compiler as nwcc.</p>"},{"location":"compiler/nwcc/#references","title":"References","text":"<ul> <li>http://nwcc.sourceforge.net/</li> </ul>"},{"location":"compiler/open64/","title":"Open64","text":"<code>__OPEN64__</code> <p>Identifies the compiler as Open64.</p> <code>__OPENCC__</code> <p>Identifies the compiler as Open64.</p>"},{"location":"compiler/open64/#versioning","title":"Versioning","text":"<code>__OPEN64__</code> <p>A string for the version of the Open64 compiler.</p> <code>__OPENCC__</code> <p>An integer for the major version of the Open64 compiler.</p> <code>__OPENCC_MINOR__</code> <p>An integer for the major version of the Open64 compiler.</p> <code>__OPENCC_PATCHLEVEL__</code> <p>A floating-point number for the patch version and build version of the Open64 compiler.</p> <p>Warning</p> <p><code>__OPENCC_PATCHLEVEL__</code> cannot be safely used in the preprocessor.</p>"},{"location":"compiler/open64/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Open64</li> <li>https://sourceforge.net/projects/open64/</li> <li>https://github.com/open64-compiler/open64</li> </ul>"},{"location":"compiler/orange/","title":"Orange C","text":""},{"location":"compiler/orange/#identification","title":"Identification","text":"<code>__ORANGEC__</code> <p>Identifies the compiler as Orange C.</p>"},{"location":"compiler/orange/#versioning","title":"Versioning","text":"<code>__ORANGEC_MAJOR__</code> <p>An integer for the major version of the Orange C compiler.</p> <code>__ORANGEC_MINOR__</code> <p>An integer for the minor version of the Orange C compiler.</p> <code>__ORANGEC_PATCHLEVEL__</code> <p>An integer for the patch version of the Orange C compiler.</p> <code>__VERSION__</code> <p>A string for the version of the Orange C compiler.</p>"},{"location":"compiler/orange/#references","title":"References","text":"<ul> <li>https://github.com/LADSoft/OrangeC</li> <li>https://ladsoft.tripod.com/orange_c_compiler.html</li> <li>https://orangec.readthedocs.io/en/latest/</li> </ul>"},{"location":"compiler/pacific/","title":"Pacific","text":""},{"location":"compiler/pacific/#identification","title":"Identification","text":"<code>__PACIFIC__</code> <p>Identifies the compiler as Pacific C.</p>"},{"location":"compiler/pacific/#references","title":"References","text":"<ul> <li>https://ia902306.us.archive.org/26/items/pacificc-v7.51-shareware-debug/pacman.pdf</li> <li>https://archive.org/details/pacificc-v7.51-shareware-debug</li> </ul>"},{"location":"compiler/palm/","title":"Palm","text":""},{"location":"compiler/palm/#identification","title":"Identification","text":"<code>_PACC_VER</code> <p>Identifies the compiler as Palm.</p>"},{"location":"compiler/palm/#versioning","title":"Versioning","text":"<code>_PACC_VER</code> <p>An integer for the version of the Palm compiler, which is encoded as a hexadecimal integer with the general form of &lt;ABBCCDDD&gt;<sub>16</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>16</sub> is the major version;</li> <li>&lt;BB&gt;<sub>16</sub> is the minor version;</li> <li>&lt;CC&gt;<sub>16</sub> is the patch version; and</li> <li>&lt;DDD&gt;<sub>16</sub> is the build version.</li> </ul>"},{"location":"compiler/palm/#references","title":"References","text":"<ul> <li>http://apitechwriter.com/Samples/PalmSource/PalmOS_API_Compiler_Ref.pdf</li> </ul>"},{"location":"compiler/pelles/","title":"Pelles","text":""},{"location":"compiler/pelles/#identification","title":"Identification","text":"<code>__POCC__</code> <p>Identifies the compiler as Pelles.</p>"},{"location":"compiler/pelles/#versioning","title":"Versioning","text":"<code>__POCC__</code> <p>An integer for the version of the Pelles compiler, which is encoded as a decimal integer with the general form of &lt;ABB&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version; and</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version.</li> </ul>"},{"location":"compiler/pelles/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Pelles_C</li> <li>https://forum.pellesc.de/index.php?topic=5855.0</li> <li>https://forum.pellesc.de/index.php?topic=8015.0</li> </ul>"},{"location":"compiler/pgi/","title":"PGI","text":""},{"location":"compiler/pgi/#identification","title":"Identification","text":"<code>__PGI</code> <p>Identifies the compiler as PGI.</p>"},{"location":"compiler/pgi/#versioning","title":"Versioning","text":"<code>__PGIC__</code> <p>An integer for the major version of the PGI compiler.</p> <code>__PGIC_MINOR__</code> <p>An integer for the major version of the PGI compiler.</p> <code>__PGIC_PATCHLEVEL__</code> <p>An integer for the major version of the PGI compiler.</p>"},{"location":"compiler/pgi/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/The_Portland_Group</li> <li>https://docs.nvidia.com/hpc-sdk/pgi-compilers/20.4/x86/pgi-user-guide/index.htm</li> <li>https://docs.nvidia.com/hpc-sdk/pgi-compilers/20.4/x86/pgi-ref-guide/index.htm</li> <li>https://forums.developer.nvidia.com/t/preprocessor-macro-identifying-pgi/132247</li> <li>https://forums.developer.nvidia.com/t/list-of-macros-option-for-nvfortran-like-for-nvc/307790</li> </ul>"},{"location":"compiler/reliant/","title":"Reliant CDS","text":""},{"location":"compiler/sas/","title":"SAS/C","text":""},{"location":"compiler/sas/#identification","title":"Identification","text":"<code>SASC</code> <code>__SASC</code> <code>__SASC__</code> <p>Identifies the compiler as SAS/C.</p>"},{"location":"compiler/sas/#versioning","title":"Versioning","text":"<p><code>__VERSION__</code> <code>__REVISION__</code> <code>__SASC__</code></p>"},{"location":"compiler/sas/#references","title":"References","text":"<ul> <li>http://www.sas.com/products/sasc/</li> </ul>"},{"location":"compiler/sdcc/","title":"Small Device C Compiler","text":""},{"location":"compiler/sdcc/#identification","title":"Identification","text":"<code>SDCC</code> <code>__SDCC</code> <p>Identifies the compiler as SDCC.</p>"},{"location":"compiler/sdcc/#versioning","title":"Versioning","text":"<code>__SDCC_VERSION_MAJOR</code> <p>An integer for the major version of the SDCC compiler.</p> <code>__SDCC_VERSION_MINOR</code> <p>An integer for the major version of the SDCC compiler.</p> <code>__SDCC_VERSION_PATCH</code> <p>An integer for the major version of the SDCC compiler.</p> <code>__SDCC_REVISION</code> <p>An integer for the SVN revision number of the SDCC compiler.</p> <code>SDCC</code> <p>An integer for the version of the SDCC compiler, which is encoded as a decimal integer with the general form of &lt;ABC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;ABC&gt;<sub>10</sub> is the major version;</li> <li>&lt;ABC&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;ABC&gt;<sub>10</sub> is the patch version.</li> </ul> <p>Note</p> <p><code>SDCC</code> has been deprecated.</p>"},{"location":"compiler/sdcc/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Small_Device_C_Compiler</li> </ul>"},{"location":"compiler/sn/","title":"SN","text":""},{"location":"compiler/sn/#identification","title":"Identification","text":"<code>__SNC__</code> <p>Identifies the compiler as SN.</p>"},{"location":"compiler/sn/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/SN_Systems</li> </ul>"},{"location":"compiler/stratus-vos/","title":"Stratus VOS","text":""},{"location":"compiler/stratus-vos/#identification","title":"Identification","text":"<p><code>__VOSC__</code></p>"},{"location":"compiler/stratus-vos/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Stratus_VOS</li> </ul>"},{"location":"compiler/tendra/","title":"TenDRA","text":""},{"location":"compiler/tendra/#identification","title":"Identification","text":"<code>__TenDRA__</code> <p>Identifies the compiler as TenDRA.</p>"},{"location":"compiler/tendra/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/TenDRA_Compiler</li> </ul>"},{"location":"compiler/thinkc/","title":"THINK C","text":""},{"location":"compiler/thinkc/#identification","title":"Identification","text":"<p><code>THINKC3</code> <code>THINKC4</code></p>"},{"location":"compiler/thinkc/#versioning","title":"Versioning","text":"<p><code>THINKC3</code> <code>THINKC4</code></p>"},{"location":"compiler/thinkc/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/THINK_C</li> </ul>"},{"location":"compiler/tinyc/","title":"Tiny C","text":""},{"location":"compiler/tinyc/#identification","title":"Identification","text":"<p><code>__TINYC__</code></p>"},{"location":"compiler/tinyc/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Tiny_C_Compiler</li> </ul>"},{"location":"compiler/ultimate/","title":"Ultimate","text":""},{"location":"compiler/ultimate/#identification","title":"Identification","text":"<p><code>_UCC</code></p>"},{"location":"compiler/ultimate/#versioning","title":"Versioning","text":"<p><code>_MAJOR_REV</code> <code>_MINOR_REV</code></p>"},{"location":"compiler/vbcc/","title":"VBCC","text":""},{"location":"compiler/vbcc/#identification","title":"Identification","text":"<p><code>__VBCC__</code></p>"},{"location":"compiler/vbcc/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Vbcc</li> </ul>"},{"location":"compiler/watcom/","title":"Watcom","text":""},{"location":"compiler/watcom/#identification","title":"Identification","text":"<p><code>__WATCOMC__</code></p>"},{"location":"compiler/watcom/#versioning","title":"Versioning","text":"<code>__WATCOMC__</code> <p>&lt;AABB&gt;<sub>10</sub></p>"},{"location":"compiler/watcom/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Watcom</li> </ul>"},{"location":"compiler/z88dk/","title":"Z88DK","text":"<p><code>SCCZ80</code> <code>__SCCZ80</code></p> <p><code>__SDCC</code></p>"},{"location":"compiler/z88dk/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Z88DK</li> </ul>"},{"location":"compiler/zig/","title":"Zig","text":""},{"location":"compiler/zig/#references","title":"References","text":"<ul> <li>https://ziglang.org/</li> <li>https://github.com/ziglang/zig</li> </ul>"},{"location":"compiler/analog/cces/","title":"CrossCore Embedded Studios","text":""},{"location":"compiler/analog/cces/#identification","title":"Identification","text":"<code>__CCESVERSION__</code> <p>Identifies the compiler as CCES.</p>"},{"location":"compiler/analog/cces/#versioning","title":"Versioning","text":"<code>__CCESVERSION__</code> <p>An integer for the version of CCES, which is encoded as a hexadecimal integer with the general form of AABBCC00<sub>16</sub>, where:</p> <ul> <li>AA<sub>16</sub> is the major version;</li> <li>BB<sub>16</sub> is the minor version; and</li> <li>CC<sub>16</sub> is the patch version.</li> </ul>"},{"location":"compiler/analog/cces/#references","title":"References","text":"<ul> <li>https://www.analog.com/en/resources/evaluation-hardware-and-software/software/adswt-cces.html</li> <li>https://www.analog.com/media/en/dsp-documentation/software-manuals/cces2-2-0_BlackfinCompilerAndLib_mn_rev1-6.pdf</li> <li>https://www.analog.com/media/en/dsp-documentation/software-manuals/cces-blackfincompiler-library-manual.pdf</li> <li>https://www.analog.com/media/en/dsp-documentation/software-manuals/cces-sharccompiler-manual.pdf</li> </ul>"},{"location":"compiler/analog/visualdsp/","title":"VisualDSP++","text":""},{"location":"compiler/analog/visualdsp/#identification","title":"Identification","text":"<code>__VISUALDSPVERSION__</code> <p>Identifies the compiler as VisualDSP++.</p>"},{"location":"compiler/analog/visualdsp/#versioning","title":"Versioning","text":"<code>__VISUALDSPVERSION__</code> <p>An integer for the version of VisualDSP++, which is encoded as a hexadecimal integer with the general form of AABBCC00<sub>16</sub>, where:</p> <ul> <li>AA<sub>16</sub> is the major version;</li> <li>BB<sub>16</sub> is the minor version; and</li> <li>CC<sub>16</sub> is the patch version.</li> </ul>"},{"location":"compiler/analog/visualdsp/#references","title":"References","text":"<ul> <li>https://www.analog.com/en/resources/evaluation-hardware-and-software/software/vdsp-bf-sh-ts.html</li> <li>https://www.analog.com/media/en/dsp-documentation/software-manuals/50_21k_cc_mn_rev_1.5.pdf</li> <li>https://www.analog.com/media/en/dsp-documentation/software-manuals/50_ts_cc_man.4.1.pdf</li> <li>https://www.analog.com/media/en/dsp-documentation/software-manuals/50_bf_cc_rtl_mn_rev_5.4.pdf</li> <li>https://www.analog.com/media/en/dsp-documentation/software-manuals/3373758395617365168036092258835_cc_218xbook.pdf</li> <li>https://www.analog.com/media/en/dsp-documentation/software-manuals/33880585295412540302924935_cc_219xbook.pdf</li> <li>https://www.analog.com/media/en/dsp-documentation/software-manuals/3404058624616355148536243790135_aspp_21xxbook.pdf</li> </ul>"},{"location":"compiler/arm/acfe/","title":"Arm Compiler for Embedded","text":""},{"location":"compiler/arm/acfe/#identification","title":"Identification","text":"<code>__ARMCOMPILER_VERSION</code> <p>Identifies the compiler as Arm Compiler for Embedded.</p> <code>__ARMCC_VERSION</code> <p>Identifies the compiler as Arm Compiler for Embedded.</p>"},{"location":"compiler/arm/acfe/#versioning","title":"Versioning","text":"<code>__ARMCOMPILER_VERSION</code> <p>An integer for the version of Arm Compiler for Embedded, which is encoded as a decimal integer with the general form of &lt;ABBCCDD&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version;</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version;</li> <li>&lt;CC&gt;<sub>10</sub> is the patch version; and</li> <li>&lt;DD&gt;<sub>10</sub> is reserved.</li> </ul> <code>__ARMCC_VERSION</code> <p>An integer for the version of Arm Compiler for Embedded, which is encoded as a decimal integer with the general form of &lt;ABCCCC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version;</li> <li>&lt;B&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;CCCC&gt;<sub>10</sub> is the patch version.</li> </ul> <p>Note</p> <p>If <code>__ARMCOMPILER_VERSION</code> is defined, then <code>__ARMCC_VERSION</code> is defined as <code>__ARMCOMPILER_VERSION</code>.</p> <p>Warning</p> <p>If <code>__CC_NORCROFT</code> is defined, then <code>__ARMCC_VERSION</code> may be a floating-point number which is not suitable for preprocessor arithmetic.</p>"},{"location":"compiler/arm/acfe/#references","title":"References","text":"<ul> <li>Arm Compiler 6.23 Reference Guide (pdf)</li> <li>Arm Compiler 5.06 User Guide (pdf)</li> <li>Arm Compiler 4.1 Reference Guide (pdf)</li> <li>http://www.ee.ic.ac.uk/pcheung/teaching/ee2_computing/arm/refman2v2.pdf</li> </ul>"},{"location":"compiler/arm/acfl/","title":"Arm Compiler for Linux","text":""},{"location":"compiler/arm/acfl/#identification","title":"Identification","text":"<p><code>__ARM_LINUX_COMPILER__</code></p>"},{"location":"compiler/arm/acfl/#versioning","title":"Versioning","text":"<p><code>__armclang_major__</code> <code>__armclang_minor__</code> <code>__ARM_LINUX_COMPILER_BUILD__</code></p>"},{"location":"compiler/crossware/xc51/","title":"Crossware 8051 C Compiler","text":"","tags":["C8051NT","Crossware 8051 C Compiler","XC51"]},{"location":"compiler/crossware/xc51/#identification","title":"Identification","text":"<code>_XC51_VER</code> <p>Identifies the compiler as Crossware 8051 C.</p>","tags":["C8051NT","Crossware 8051 C Compiler","XC51"]},{"location":"compiler/crossware/xc51/#versioning","title":"Versioning","text":"<code>_XC51_VER</code>: <p>An integer for the version of the Crossware 8051 C compiler, which is encoded as a decimal integer with the general form of ABB<sub>10</sub>, where:</p> <ul> <li>ABB<sub>10</sub> is the major version; and</li> <li>ABB<sub>10</sub> is the minor version.</li> </ul>","tags":["C8051NT","Crossware 8051 C Compiler","XC51"]},{"location":"compiler/crossware/xc51/#references","title":"References","text":"<ul> <li>https://www.crossware.com/i8051/Compiler</li> <li>http://www.crossware.com/smanuals/c8051/index.html</li> <li>https://www.crossware.com/smanuals/c8051/predef_8051.html</li> </ul>","tags":["C8051NT","Crossware 8051 C Compiler","XC51"]},{"location":"compiler/crossware/xc68k/","title":"Crossware 68xxx C Compiler","text":"","tags":["680X0 C Compiler","C680X0","C680X0NT","Crossware 68xxx C Compiler","XC68K"]},{"location":"compiler/crossware/xc68k/#identification","title":"Identification","text":"<code>_XC68K_VER</code> <p>Identifies the compiler as Crossware 68xxx C.</p>","tags":["680X0 C Compiler","C680X0","C680X0NT","Crossware 68xxx C Compiler","XC68K"]},{"location":"compiler/crossware/xc68k/#versioning","title":"Versioning","text":"<code>_XC68K_VER</code>: <p>An integer for the version of the Crossware 68xxx C compiler, which is encoded as a decimal integer with the general form of ABB<sub>10</sub>, where:</p> <ul> <li>ABB<sub>10</sub> is the major version; and</li> <li>ABB<sub>10</sub> is the minor version.</li> </ul>","tags":["680X0 C Compiler","C680X0","C680X0NT","Crossware 68xxx C Compiler","XC68K"]},{"location":"compiler/crossware/xc68k/#references","title":"References","text":"<ul> <li>https://www.crossware.com/m68xxx</li> <li>http://www.crossware.com/smanuals/c680x0/index.html</li> <li>https://www.crossware.com/smanuals/c680x0/predef_680x0.html</li> </ul>","tags":["680X0 C Compiler","C680X0","C680X0NT","Crossware 68xxx C Compiler","XC68K"]},{"location":"compiler/crossware/xcarm/","title":"Crossware ARM C/C++ Compiler","text":"","tags":["Crossware ARM C/C++ Compiler","XCARM"]},{"location":"compiler/crossware/xcarm/#identification","title":"Identification","text":"<code>_XCARM_VER</code> <p>Identifies the compiler as Crossware ARM C/C++.</p>","tags":["Crossware ARM C/C++ Compiler","XCARM"]},{"location":"compiler/crossware/xcarm/#versioning","title":"Versioning","text":"<code>_XCARM_VER</code> <p>An integer for the version of the Crossware ARM C/C++ compiler, which is encoded as a decimal integer with the general form of ABB<sub>10</sub>, where:</p> <ul> <li>ABB<sub>10</sub> is the major version; and</li> <li>ABB<sub>10</sub> is the minor version.</li> </ul>","tags":["Crossware ARM C/C++ Compiler","XCARM"]},{"location":"compiler/crossware/xcarm/#references","title":"References","text":"<ul> <li>https://www.crossware.com/arm/compiler</li> <li>http://www.crossware.com/smanuals/cpparm/index.html</li> <li>https://www.crossware.com/smanuals/cpparm/predef_arm.html</li> </ul>","tags":["Crossware ARM C/C++ Compiler","XCARM"]},{"location":"compiler/crossware/xccf/","title":"Crossware ColdFire C/C++ Compiler","text":"","tags":["Crossware ColdFire C/C++ Compiler","XCCF"]},{"location":"compiler/crossware/xccf/#identification","title":"Identification","text":"<code>_XCCF_VER</code> <p>Identifies the compiler as Crossware ColdFire C/C++.</p>","tags":["Crossware ColdFire C/C++ Compiler","XCCF"]},{"location":"compiler/crossware/xccf/#versioning","title":"Versioning","text":"<code>_XCCF_VER</code>: <p>An integer for the version of the Crossware ColdFire C/C++ compiler, which is encoded as a decimal integer with the general form of ABB<sub>10</sub>, where:</p> <ul> <li>ABB<sub>10</sub> is the major version; and</li> <li>ABB<sub>10</sub> is the minor version.</li> </ul>","tags":["Crossware ColdFire C/C++ Compiler","XCCF"]},{"location":"compiler/crossware/xccf/#references","title":"References","text":"<ul> <li>https://www.crossware.com/ColdFire/Compiler</li> <li>https://www.crossware.com/smanuals/cppcoldfire/index.html</li> <li>https://www.crossware.com/smanuals/cppcoldfire/predef_coldfire.html</li> </ul>","tags":["Crossware ColdFire C/C++ Compiler","XCCF"]},{"location":"compiler/gnu/","title":"GNU","text":""},{"location":"compiler/hp/acc/","title":"HP aCC","text":""},{"location":"compiler/hp/cc/","title":"HP ANSI C/C","text":""},{"location":"compiler/ibm/open-xl/","title":"IBM Open XL C/C++ Compiler","text":""},{"location":"compiler/ibm/visual-age/","title":"IBM Visual Age","text":""},{"location":"compiler/ibm/xl/","title":"IBM XL C/C++ Compiler","text":""},{"location":"compiler/ibm/zos-xl/","title":"IBM z/OS XL C/C++ Compiler","text":""},{"location":"compiler/intel/dpc/","title":"Intel OneAPI DPC/C++ Compiler (dpc)","text":""},{"location":"compiler/intel/icc/","title":"Intel C/C++ Compiler Classic (icc)","text":""},{"location":"compiler/intel/icx/","title":"Intel C/C++ Compiler (icx)","text":""},{"location":"compiler/keil/c166/","title":"Keil C166","text":""},{"location":"compiler/keil/c251/","title":"Keil C251","text":""},{"location":"compiler/keil/c51/","title":"Keil C51","text":""},{"location":"compiler/keil/c51/#identification","title":"Identification","text":"<p><code>__C51__</code> <code>__CX51__</code> <code>__KEIL__</code></p>"},{"location":"compiler/keil/c51/#references","title":"References","text":"<ul> <li>Cx51 User's Guide</li> </ul>"},{"location":"compiler/keil/carm/","title":"Keil CARM","text":""},{"location":"compiler/llvm/clang/","title":"Clang","text":""},{"location":"compiler/llvm/flang/","title":"Flang","text":""},{"location":"compiler/llvm/flang/#identification","title":"Identification","text":"<code>__flang__</code> <p>Identifies the compiler as Flang.</p> <code>__FLANG</code> <p>Identifies the compiler as Flang.</p> <code>__PGLLVM__</code> <p>Identifies the compiler as Flang.</p>"},{"location":"compiler/llvm/flang/#versioning","title":"Versioning","text":"<code>__flang_major__</code> <p>An integer for the major version of the Flang compiler.</p> <code>__flang_minor__</code> <p>An integer for the minor version of the Flang compiler.</p> <code>__flang_patchlevel__</code> <p>An integer for the patch version of the Flang compiler.</p> <code>__FLANG_MAJOR__</code> <p>An integer for the major version of the Flang compiler.</p> <code>__FLANG_MINOR__</code> <p>An integer for the minor version of the Flang compiler.</p> <code>__FLANG_PATCHLEVEL__</code> <p>An integer for the patch version of the Flang compiler.</p>"},{"location":"compiler/llvm/flang/#references","title":"References","text":"<ul> <li>https://github.com/ROCm/llvm-project/blob/57b3d44fd613446a5ec0a535794715872057b4dc/clang/lib/Driver/ToolChains/AMDFlang.cpp#L711</li> <li>https://community.amd.com/t5/server-processors/how-to-identify-the-flang-compiler/td-p/590712</li> <li>https://git.cels.anl.gov/ksalapenades/llvm-project/-/blob/7841f557ea3df1987ceb1c033e458790f5828795/flang/test/Driver/predefined-macros-compiler-version.F90</li> </ul>"},{"location":"compiler/metaware/highc/","title":"HIGH C","text":""},{"location":"compiler/metrowerks/codewarrior/","title":"CodeWarrior","text":""},{"location":"compiler/metrowerks/codewarrior/#identification","title":"Identification","text":"<code>__MWERKS__</code> <p>Identifies the compiler as CodeWarrior.</p> <code>__CWCC__</code> <p>Identifies the compiler as CodeWarrior.</p>"},{"location":"compiler/metrowerks/codewarrior/#versioning","title":"Versioning","text":"<code>__MWERKS__</code> <p>An integer for the version of CodeWarrior compiler, which is encoded as a hexadecimal integer with the general form of &lt;ABCC&gt;<sub>16</sub>, where:</p> <ul> <li>&lt;ABCC&gt;<sub>16</sub> is the major version;</li> <li>&lt;ABCC&gt;<sub>16</sub> is the minor version; and</li> <li>&lt;ABCC&gt;<sub>16</sub> is the patch version.</li> </ul> <p>Note</p> <p>Prior to CodeWarrior 7, <code>__MWERKS__</code> was defined as <code>1</code>.</p> <code>__CWCC__</code> <p>An integer for the version of CodeWarrior compiler, which is encoded as a hexadecimal integer with the general form of &lt;ABCC&gt;<sub>16</sub>, where:</p> <ul> <li>&lt;ABCC&gt;<sub>16</sub> is the major version;</li> <li>&lt;ABCC&gt;<sub>16</sub> is the minor version; and</li> <li>&lt;ABCC&gt;<sub>16</sub> is the patch version.</li> </ul> <p>Note</p> <p>Prior to CodeWarrior 4.2.0, <code>__CWCC__</code> was defined as <code>1</code>.</p>"},{"location":"compiler/metrowerks/codewarrior/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/CodeWarrior</li> </ul>"},{"location":"compiler/microchip/xc16/","title":"Microchip MPLAB XC16","text":""},{"location":"compiler/microchip/xc16/#identification","title":"Identification","text":"<code>XC16</code> <code>__XC16</code> <code>__XC16__</code> <p>Identifies the compiler as Microchip MPLAB XC16.</p> <code>C30</code> <code>__C30</code> <code>__C30__</code> <p>Identifies the compiler as Microchip MPLAB XC16.</p> <code>dsPICC30</code> <code>__dsPICC30</code> <code>__dsPICC30__</code> <p>Identifies the compiler as Microchip MPLAB XC16.</p>"},{"location":"compiler/microchip/xc16/#versioning","title":"Versioning","text":"<code>__XC16_VERSION__</code> <p>An integer for the version of the Microchip MPLAB XC16 compiler, which is encoded as a decimal integer with the general form of ABBC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BB<sub>10</sub> is the minor version; and</li> <li>C<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/microchip/xc16/#references","title":"References","text":"<ul> <li>https://www.microchip.com/en-us/tools-resources/develop/mplab-xc-compilers/xc16</li> <li>https://ww1.microchip.com/downloads/aemDocuments/documents/DEV/ProductDocuments/UserGuides/50002071.pdf</li> </ul>"},{"location":"compiler/microchip/xc32/","title":"Microchip MPLAB XC32","text":""},{"location":"compiler/microchip/xc32/#identification","title":"Identification","text":"<code>__XC32</code> <p>Identifies the compiler as Microchip MPLAB XC32.</p>"},{"location":"compiler/microchip/xc32/#versioning","title":"Versioning","text":"<code>__C32_VERSION__</code> <p>An integer for the version of the Microchip MPLAB XC32 compiler, which is encoded as a decimal integer with the general form of ABBC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BB<sub>10</sub> is the minor version; and</li> <li>C<sub>10</sub> is the patch version.</li> </ul> <code>__XC32_VERSION</code> <p>An integer for the version of the Microchip MPLAB XC32 compiler, which is encoded as a decimal integer with the general form of ABBC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BB<sub>10</sub> is the minor version; and</li> <li>C<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/microchip/xc32/#references","title":"References","text":"<ul> <li>https://www.microchip.com/en-us/tools-resources/develop/mplab-xc-compilers/xc32</li> <li>https://ww1.microchip.com/downloads/aemDocuments/documents/DEV/ProductDocuments/UserGuides/MPLABXC32_UserGuide_PIC32C_SAM_50002895.pdf</li> <li>https://ww1.microchip.com/downloads/aemDocuments/documents/DEV/ProductDocuments/UserGuides/MPLABXC32_UserGuide_PIC32M_50002799.pdf</li> </ul>"},{"location":"compiler/microchip/xc8/","title":"Microchip MPLAB XC8","text":""},{"location":"compiler/microchip/xc8/#identification","title":"Identification","text":"<code>__XC8</code> <p>Identifies the compiler as Microchip MPLAB XC8.</p>"},{"location":"compiler/microchip/xc8/#versioning","title":"Versioning","text":"<code>__XC8_VERSION</code> <p>An integer for the version of the Microchip MPLAB XC8 compiler, which is encoded as a decimal integer with the general form of ABBC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BB<sub>10</sub> is the minor version; and</li> <li>C<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/microchip/xc8/#references","title":"References","text":"<ul> <li>https://www.microchip.com/en-us/tools-resources/develop/mplab-xc-compilers/xc8</li> <li>https://ww1.microchip.com/downloads/aemDocuments/documents/DEV/ProductDocuments/UserGuides/MPLAB-XC8-C-Compiler-Users-Guide-for-PIC-DS50002737.pdf</li> <li>https://ww1.microchip.com/downloads/aemDocuments/documents/DEV/ProductDocuments/UserGuides/MPLAB-XC8-C-Compiler-Legacy-Users-Guide-DS50002053J.pdf</li> </ul>"},{"location":"compiler/microchip/xc_dsc/","title":"Microchip MPLAB XC-DSC","text":""},{"location":"compiler/microchip/xc_dsc/#identification","title":"Identification","text":"<code>XC_DSC</code> <code>__XC_DSC</code> <code>__XC_DSC__</code> <p>Identifies the compiler as Microchip MPLAB XC-DSC.</p>"},{"location":"compiler/microchip/xc_dsc/#versioning","title":"Versioning","text":"<code>__XC_DSC_VERSION__</code> <p>An integer for the version of the Microchip MPLAB XC-DSC compiler, which is encoded as a decimal integer with the general form of ABBC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BB<sub>10</sub> is the minor version; and</li> <li>C<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/microchip/xc_dsc/#references","title":"References","text":"<ul> <li>https://www.microchip.com/en-us/tools-resources/develop/mplab-xc-compilers/xc-dsc</li> <li>https://ww1.microchip.com/downloads/aemDocuments/documents/DEV/ProductDocuments/UserGuides/MPLAB-XC-DSC-C-Compiler-User-Guide-DS50003589.pdf</li> </ul>"},{"location":"compiler/mikroc/ai-arm/","title":"mikroC AI for ARM","text":""},{"location":"compiler/mikroc/ai-arm/#identification","title":"Identification","text":""},{"location":"compiler/mikroc/ai-arm/#versioning","title":"Versioning","text":""},{"location":"compiler/mikroc/ai-arm/#references","title":"References","text":""},{"location":"compiler/mikroc/ai-avr/","title":"mikroC AI for AVR","text":""},{"location":"compiler/mikroc/ai-avr/#identification","title":"Identification","text":""},{"location":"compiler/mikroc/ai-avr/#versioning","title":"Versioning","text":""},{"location":"compiler/mikroc/ai-avr/#references","title":"References","text":""},{"location":"compiler/mikroc/ai-pic/","title":"mikroC AI for PIC","text":""},{"location":"compiler/mikroc/ai-pic/#identification","title":"Identification","text":""},{"location":"compiler/mikroc/ai-pic/#versioning","title":"Versioning","text":""},{"location":"compiler/mikroc/ai-pic/#references","title":"References","text":""},{"location":"compiler/mikroc/ai-pic32/","title":"mikroC AI for PIC32","text":""},{"location":"compiler/mikroc/ai-pic32/#identification","title":"Identification","text":""},{"location":"compiler/mikroc/ai-pic32/#versioning","title":"Versioning","text":""},{"location":"compiler/mikroc/ai-pic32/#references","title":"References","text":""},{"location":"compiler/mikroc/pro-arm/","title":"mikroC PRO for ARM","text":""},{"location":"compiler/mikroc/pro-arm/#identification","title":"Identification","text":""},{"location":"compiler/mikroc/pro-arm/#versioning","title":"Versioning","text":""},{"location":"compiler/mikroc/pro-arm/#references","title":"References","text":""},{"location":"compiler/mikroc/pro-avr/","title":"mikroC PRO for AVR","text":""},{"location":"compiler/mikroc/pro-avr/#identification","title":"Identification","text":""},{"location":"compiler/mikroc/pro-avr/#versioning","title":"Versioning","text":""},{"location":"compiler/mikroc/pro-avr/#references","title":"References","text":""},{"location":"compiler/national-instruments/","title":"National Instruments Compilers","text":""},{"location":"compiler/national-instruments/cvi/","title":"NI LabWindows/CVI","text":""},{"location":"compiler/national-instruments/cvi/#identification","title":"Identification","text":"<code>_CVI_</code> <p>Identifies the compiler as NI LabWindows/CVI.</p>"},{"location":"compiler/national-instruments/cvi/#versioning","title":"Versioning","text":"<code>_CVI_</code> <p>An integer for the version of NI LabWindows/CVI, which is encoded as a decimal integer with the general form of ABC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>B<sub>10</sub> is the minor version; and</li> <li>C<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/national-instruments/cvi/#references","title":"References","text":"<ul> <li>https://www.ni.com/docs/en-US/bundle/labwindows-cvi/page/cvi/usermanual/prjpredefinedmacros.htm</li> <li>https://www.ni.com/docs/en-US/bundle/labwindows-cvi/page/cvi/cviversioning.htm</li> </ul>"},{"location":"compiler/nvidia/nvcc/","title":"NVCC","text":""},{"location":"compiler/nvidia/nvcc/#identification","title":"Identification","text":""},{"location":"compiler/nvidia/nvcc/#references","title":"References","text":""},{"location":"compiler/nvidia/nvhpc/","title":"NVHPC","text":""},{"location":"compiler/nvidia/nvhpc/#identification","title":"Identification","text":"<p><code>__NVCOMPILER</code></p>"},{"location":"compiler/nvidia/nvhpc/#references","title":"References","text":"<ul> <li>https://developer.nvidia.com/hpc-sdk</li> </ul>"},{"location":"compiler/oracle/proc/","title":"Oracle Pro*C Static Analyzer","text":""},{"location":"compiler/oracle/proc/#identification","title":"Identification","text":"<p><code>ORA_PROC</code></p>"},{"location":"compiler/oracle/proc/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Pro*C</li> </ul>"},{"location":"compiler/oracle/sunpro/","title":"SunPro / Solaris Studio","text":""},{"location":"compiler/oracle/sunpro/#identification","title":"Identification","text":"<code>__SUNPRO_C</code> <p>Identifies the compiler as SunPro / Solaris Studio.</p> <code>__SUNPRO_CC</code> <p>Identifies the compiler as SunPro / Solaris Studio.</p>"},{"location":"compiler/oracle/sunpro/#versioning","title":"Versioning","text":"<code>__SUNPRO_C</code> <p>&lt;ABBC&gt;<sub>16</sub> &lt;ABC&gt;<sub>16</sub></p> <code>__SUNPRO_CC</code> <p>&lt;ABBC&gt;<sub>16</sub> &lt;ABC&gt;<sub>16</sub></p>"},{"location":"compiler/oracle/sunpro/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Oracle_Solaris_Studio</li> </ul>"},{"location":"compiler/raisonance/","title":"Raisonance Compilers","text":"<p><code>__RC51__</code> <code>__RAISONANCE__</code></p>"},{"location":"compiler/renesas/","title":"Renesas Compilers","text":""},{"location":"compiler/renesas/ca78k0r/","title":"Renesas C Compiler Package for the RL78 and 78K Families","text":"<p><code>__CA78K0</code> <code>__CA78K0__</code></p> <p><code>__K0</code> <code>__K0__</code></p> <ul> <li>https://www.renesas.com/en/software-tool/c-compiler-package-rl78-and-78k-families</li> <li>https://www.renesas.com/en/document/mat/cubesuite-v20100-integrated-development-environment-users-manual-rl78-78k0r-coding-rev100</li> <li>https://www.renesas.com/en/document/mat/cubesuite-v10300-integrated-development-environment-users-manual-78k0-coding</li> </ul>"},{"location":"compiler/renesas/h8/","title":"Renesas C/C++ Compiler Package for H8SX, H8S, H8 Family","text":""},{"location":"compiler/renesas/h8/#identification","title":"Identification","text":"<p><code>__H8__</code> <code>__RENESAS__</code> <code>__HITACHI__</code></p>"},{"location":"compiler/renesas/h8/#versioning","title":"Versioning","text":"<code>__RENESAS_VERSION__</code> <p>AABB<sub>16</sub></p> <code>__HITACHI_VERSION__</code> <p>AABB<sub>16</sub></p>"},{"location":"compiler/renesas/h8/#references","title":"References","text":"<ul> <li>https://www.renesas.com/en/software-tool/cc-compiler-package-h8sx-h8s-h8-family</li> <li>https://www.renesas.com/en/document/mat/h8s-h8300-series-cc-compiler-package-ver700-users-manual<ul> <li>Predefined macros are found in section 7.2.</li> </ul> </li> </ul>"},{"location":"compiler/renesas/m16c/","title":"Renesas C/C++ Compiler Package for M16C Series and R8C Family","text":"<ul> <li>https://www.renesas.com/en/software-tool/cc-compiler-package-m16c-series-and-r8c-family-m3t-nc30wa</li> </ul>"},{"location":"compiler/renesas/m32c/","title":"Renesas C Compiler Package for M32C Series","text":"<p><code>NC308</code></p> <ul> <li>https://www.renesas.com/en/software-tool/c-compiler-package-m32c-series-m3t-nc308wa</li> <li>https://www.renesas.com/en/document/mat/m3t-nc308wa-v542-c-compiler-users-manual-c-compiler-package-m32c-series</li> </ul>"},{"location":"compiler/renesas/m32r/","title":"Renesas C/C++ Compiler Package for M32R Family","text":"<ul> <li>https://www.renesas.com/en/software-tool/cc-compiler-package-m32r-family-m3t-cc32r</li> <li>https://www.renesas.com/en/document/mat/cc-compiler-package-m32r-family-v500-cc-compiler-users-manual?r=1169491</li> <li>https://www.renesas.com/en/document/mat/cc-compiler-package-m32r-family-v500-cc-compiler-users-manual?r=1169491</li> </ul>"},{"location":"compiler/renesas/r32c/","title":"Renesas C Compiler Package for R32C Series","text":"<p><code>NC100</code> <code>R32C100</code></p> <ul> <li>https://www.renesas.com/en/software-tool/c-compiler-package-r32c-series</li> <li>https://www.renesas.com/en/document/mat/r32c100-series-c-compiler-package-v102-c-compiler-users-manual</li> </ul>"},{"location":"compiler/renesas/r8c/","title":"Renesas C/C++ Compiler Package for R8C and M16C Families","text":"<ul> <li>https://www.renesas.com/en/software-tool/cc-compiler-package-r8c-and-m16c-families</li> </ul>"},{"location":"compiler/renesas/rh/","title":"Renesas C Compiler Package for RH850 Family","text":""},{"location":"compiler/renesas/rh/#identification","title":"Identification","text":"<p><code>__CCRH</code> <code>__CCRH__</code></p> <p><code>__RH850</code> <code>__RH850__</code></p> <p><code>__v850e3v5</code> <code>__v850e3v5__</code></p> <p><code>__RENESAS__</code></p>"},{"location":"compiler/renesas/rh/#versioning","title":"Versioning","text":"<code>__RENESAS_VERSION__</code> <p>AABBCC00<sub>16</sub></p>"},{"location":"compiler/renesas/rh/#references","title":"References","text":"<ul> <li>https://www.renesas.com/en/software-tool/c-compiler-package-rh850-family</li> <li>https://www.renesas.com/en/document/mat/cc-rh-compiler-users-manual<ul> <li>Predefined macros are in section 4.2.2.</li> </ul> </li> </ul>"},{"location":"compiler/renesas/rl78/","title":"Renesas C Compiler Package for RL78 Family","text":""},{"location":"compiler/renesas/rl78/#identification","title":"Identification","text":"<p><code>__CCRL</code> <code>__CCRL__</code></p> <p><code>__RENESAS__</code></p>"},{"location":"compiler/renesas/rl78/#versioning","title":"Versioning","text":"<code>__RENESAS_VERSION__</code> <p>AABBCC00<sub>16</sub></p>"},{"location":"compiler/renesas/rl78/#references","title":"References","text":"<ul> <li>https://www.renesas.com/en/software-tool/c-compiler-package-rl78-family</li> <li>https://www.renesas.com/en/document/mat/cc-rl-c-users-manual?r=488776</li> <li>https://www.renesas.com/en/document/mat/cc-rl-compiler-users-manual?r=488776</li> </ul>"},{"location":"compiler/renesas/rx/","title":"Renesas C/C++ Compiler Package for RX Family","text":"<ul> <li>https://www.renesas.com/en/software-tool/cc-compiler-package-rx-family</li> </ul>"},{"location":"compiler/renesas/sh/","title":"Renesas C/C++ Compiler Package for SuperH","text":""},{"location":"compiler/renesas/sh/#identification","title":"Identification","text":"<p><code>_SH</code> <code>__RENESAS__</code> <code>__HITACHI__</code></p>"},{"location":"compiler/renesas/sh/#versioning","title":"Versioning","text":"<code>__RENESAS_VERSION__</code> <p>AABB<sub>16</sub></p> <code>__HITACHI_VERSION__</code> <p>AABB<sub>16</sub></p>"},{"location":"compiler/renesas/sh/#references","title":"References","text":"<ul> <li>https://www.renesas.com/en/software-tool/cc-compiler-package-superh-family</li> <li>https://www.renesas.com/en/document/mat/superh-cc-compiler-package-v904-users-manual<ul> <li>Predefined macros are found in section 7.2.</li> </ul> </li> </ul>"},{"location":"compiler/renesas/v850/","title":"Renesas C Compiler Package for V850 Family","text":"<p><code>__CA850</code> <code>__CA850__</code></p> <p><code>__v800__</code> <code>__v850__</code></p> <ul> <li>https://www.renesas.com/en/software-tool/c-compiler-package-v850-family</li> <li>https://www.renesas.com/en/document/mat/cubesuite-v20000-integrated-development-environment-users-manual-coding-cx-compiler</li> <li>https://www.renesas.com/en/document/mat/cubesuite-v10300-integrated-development-environment-users-manual-coding-cx-compiler</li> <li>https://www.renesas.com/en/document/mat/cubesuite-v10000-integrated-development-environment-users-manual-v850-coding</li> </ul>"},{"location":"compiler/sco/openserver/","title":"SCO OpenServer","text":""},{"location":"compiler/sco/usl/","title":"USL","text":""},{"location":"compiler/sco/usl/#identification","title":"Identification","text":"<p><code>__USLC__</code></p>"},{"location":"compiler/sco/usl/#versioning","title":"Versioning","text":"<code>__SCO_VERSION__</code> <p>&lt;ABByyyymm&gt;<sub>10</sub></p>"},{"location":"compiler/sco/usl/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Unix_System_Laboratories</li> </ul>"},{"location":"compiler/segger/","title":"Segger Compilers","text":""},{"location":"compiler/softune/f2mc-16/","title":"Softune F<sup>2</sup>MC-16","text":""},{"location":"compiler/softune/f2mc-16/#identification","title":"Identification","text":"<code>__COMPILER_FCC907__</code> <p>Identifies the compiler as Softune F<sup>2</sup>MC-16.</p> <code>__COMPILER_FCC907S__</code> <p>Identifies the compiler as Softune F<sup>2</sup>MC-16.</p>"},{"location":"compiler/softune/f2mc-16/#references","title":"References","text":"<ul> <li>https://www.infineon.com/cms/en/product/gated-document/f2mc-16-family-softune-c-compiler-manual-8ac78c8c7d0d8da4017d0f7915e86b71/</li> <li>https://archive.org/details/manualzilla-id-5733608</li> </ul>"},{"location":"compiler/softune/f2mc-8l-8fx/","title":"Softune F<sup>2</sup>MC-8L/8FX","text":""},{"location":"compiler/softune/f2mc-8l-8fx/#identification","title":"Identification","text":"<code>__COMPILER_FCC896__</code> <p>Identifies the compiler as Softune F<sup>2</sup>MC-8L/8FX.</p> <code>__COMPILER_FCC896S__</code> <p>Identifies the compiler as Softune F<sup>2</sup>MC-8L/8FX.</p>"},{"location":"compiler/softune/f2mc-8l-8fx/#references","title":"References","text":"<ul> <li>https://www.infineon.com/dgdl/Infineon-F2MC-8L_8FX_Family_8-Bit_Microcontroller_SOFTUNE_TM_C_Compiler_Manual-Software-v02_00-EN.pdf?fileId=8ac78c8c7d0d8da4017d0eeb271a750a&amp;da=t</li> <li>https://archive.org/details/manualzilla-id-5733608</li> </ul>"},{"location":"compiler/softune/fr/","title":"Softune FR","text":""},{"location":"compiler/softune/fr/#identification","title":"Identification","text":"<code>__COMPILER_FCC911__</code> <p>Identifies the compiler as Softune FR.</p> <code>__COMPILER_FCC911S__</code> <p>Identifies the compiler as Softune FR.</p>"},{"location":"compiler/softune/fr/#references","title":"References","text":"<ul> <li>https://www.infineon.com/dgdl/Infineon-FR_Family_SOFTUNE_C_C++_Compiler_Manual_for_V6-Software-v02_00-EN.pdf?fileId=8ac78c8c7d0d8da4017d0eeb45347543&amp;da=t</li> <li>https://archive.org/details/manualzilla-id-5733608</li> </ul>"},{"location":"compiler/tasking/","title":"TASKING Compilers","text":""},{"location":"compiler/tasking/#identification","title":"Identification","text":"<code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version.</p> <p>Warning</p> <p>Value may be negative (alpha, beta, etc.).</p>"},{"location":"compiler/tasking/c166/","title":"TASKING for C166","text":""},{"location":"compiler/tasking/c166/#identification","title":"Identification","text":"<code>__C166__</code> <p>Identifies the compiler as TASKING for C166.</p> <code>__CP166__</code> <p>Identifies the compiler as TASKING for C166.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/c166/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING for C166 compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/c166/#references","title":"References","text":""},{"location":"compiler/tasking/c51/","title":"TASKING 8051","text":""},{"location":"compiler/tasking/c51/#identification","title":"Identification","text":"<code>__C51__</code> <p>Identifies the compiler as the TASKING 8051 C Compiler.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/c51/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING 8051 compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/c51/#references","title":"References","text":""},{"location":"compiler/tasking/carm/","title":"TASKING for ARM","text":""},{"location":"compiler/tasking/carm/#identification","title":"Identification","text":"<code>__ARM__</code> <p>Identifies the compiler as TASKING for ARM.</p> <code>__CARM__</code> <p>Identifies the compiler as TASKING for ARM.</p> <code>__CPARM__</code> <p>Identifies the compiler as TASKING for ARM.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/carm/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING for ARM compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/carm/#references","title":"References","text":""},{"location":"compiler/tasking/chc/","title":"TASKING C-to-Hardware","text":""},{"location":"compiler/tasking/chc/#identification","title":"Identification","text":"<code>__CHC__</code> <p>Identifies the compiler as TASKING C-to-Hardware.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/chc/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING C-to-Hardware compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/chc/#references","title":"References","text":""},{"location":"compiler/tasking/cm16c/","title":"TASKING for M16C","text":""},{"location":"compiler/tasking/cm16c/#identification","title":"Identification","text":"<code>__CM16C__</code> <p>Identifies the compiler as TASKING for M16C.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/cm16c/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING for M16C compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/cm16c/#references","title":"References","text":""},{"location":"compiler/tasking/cmb/","title":"TASKING MicroBlaze","text":""},{"location":"compiler/tasking/cmb/#identification","title":"Identification","text":"<code>__CMB__</code> <p>Identifies the compiler as TASKING MicroBlaze.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as Altium TASKING.</p>"},{"location":"compiler/tasking/cmb/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING MicroBlaze compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/cmb/#references","title":"References","text":""},{"location":"compiler/tasking/cmcs/","title":"TASKING for MCS","text":""},{"location":"compiler/tasking/cmcs/#identification","title":"Identification","text":"<code>__CMCS__</code> <p>Identifies the compiler as TASKING for MCS.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/cmcs/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING for MCS compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/cmcs/#references","title":"References","text":""},{"location":"compiler/tasking/cnios/","title":"TASKING for Nios II","text":""},{"location":"compiler/tasking/cnios/#identification","title":"Identification","text":"<code>__CNIOS__</code> <p>Identifies the compiler as TASKING for Nios II.</p> <code>__CPNIOS__</code> <p>Identifies the compiler as TASKING for Nios II.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/cnios/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING for Nios II compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version of the TASKING Nios II compiler.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/cnios/#references","title":"References","text":"<ul> <li>https://valhalla.altium.com/Learning-Guides/TR0130%20Nios%20II%20Embedded%20Tools%20Reference.pdf</li> <li>https://valhalla.altium.com/Learning-Guides/GU0115%20Using%20the%20Nios%20II%20Embedded%20Tools.pdf</li> </ul>"},{"location":"compiler/tasking/cp166/","title":"TASKING for C166/ST10","text":"<code>__TSW_CPP__</code> <p>Identifies the compiler as TASKING for C166/ST10.</p> <code>__TSW_CPP_VERSION__</code> <p>An integer for the version of the TASKING for C166/ST10 compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul>"},{"location":"compiler/tasking/cppc/","title":"TASKING for POWER","text":""},{"location":"compiler/tasking/cppc/#identification","title":"Identification","text":"<code>__CPPC__</code> <p>Identifies the compiler as TASKING for ARM.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/cppc/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING for POWER compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/cppc/#references","title":"References","text":""},{"location":"compiler/tasking/ctc/","title":"TASKING for Tricore","text":""},{"location":"compiler/tasking/ctc/#identification","title":"Identification","text":"<code>__CTC__</code> <p>Identifies the compiler as TASKING for Tricore.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/ctc/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING for Tricore compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version of the TASKING for Tricore compiler.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/ctc/#references","title":"References","text":""},{"location":"compiler/tasking/cz80/","title":"TASKING TSK80x","text":""},{"location":"compiler/tasking/cz80/#identification","title":"Identification","text":"<code>__CZ80__</code> <p>Identifies the compiler as TASKING TSK80x.</p> <code>__TASKING__</code> <p>Identifies the compiler vendor as TASKING.</p>"},{"location":"compiler/tasking/cz80/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING TSK80x compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version of the TASKING TSK80x compiler.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/cz80/#references","title":"References","text":""},{"location":"compiler/tasking/tsk3000/","title":"TASKING TSK3000","text":""},{"location":"compiler/tasking/tsk3000/#identification","title":"Identification","text":"<p><code>__C3000__</code></p> <p><code>__CP3000__</code></p> <p><code>__TSK3000__</code></p> <p><code>__TASKING__</code></p>"},{"location":"compiler/tasking/tsk3000/#versioning","title":"Versioning","text":"<code>__VERSION__</code> <p>An integer for the version of the TASKING TSK3000 compiler, which is encoded as a decimal integer with the general form of ABBB<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version; and</li> <li>BBB<sub>10</sub> is the minor version.</li> </ul> <code>__REVISION__</code> <p>An integer for the patch version.</p> <p>Warning</p> <p>The value of <code>__REVISION__</code> is <code>-1</code> for alphas, betas, and prototypes.</p>"},{"location":"compiler/tasking/tsk3000/#references","title":"References","text":"<ul> <li>https://valhalla.altium.com/Learning-Guides/TR0109+TSK3000+Embedded+Tools+Reference.pdf</li> <li>https://valhalla.altium.com/Learning-Guides/GU0111%20Using%20the%20TSK3000%20Embedded%20Tools.pdf</li> </ul>"},{"location":"compiler/texas-instruments/","title":"Texas Instruments Compilers","text":""},{"location":"compiler/texas-instruments/ti-arm-clang/","title":"TI ARM Clang C/C++ Compiler","text":""},{"location":"compiler/texas-instruments/ti-arm-clang/#identification","title":"Identification","text":"<code>__arm__</code> <p>Identifies the target architecture as Arm.</p> <code>__ti__</code> <p>Identifies the compiler vendor as Texas Instruments.</p>"},{"location":"compiler/texas-instruments/ti-arm-clang/#versioning","title":"Versioning","text":"<code>__ti_major__</code> <p>An integer for the major version of the TI Arm Clang compiler.</p> <code>__ti_minor__</code> <p>An integer for the minor version of the TI Arm Clang compiler.</p> <code>__ti_patchlevel__</code> <p>An integer for the patch version of the TI Arm Clang compiler.</p> <code>__ti_version__</code> <p>An integer for the version of the TI Arm Clang compiler, which is encoded as a decimal integer with the general form of ABBCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BB<sub>10</sub> is the minor version; and</li> <li>CC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-arm-clang/#other","title":"Other","text":"<code>__TI_EABI__</code> <p>Indicates that the output format is EABI.</p>"},{"location":"compiler/texas-instruments/ti-arm-clang/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/download/ARM-CGT-CLANG/4.0.0.LTS</li> <li>https://software-dl.ti.com/codegen/docs/tiarmclang/rel4_0_0_LTS/</li> <li>https://software-dl.ti.com/codegen/docs/tiarmclang/rel4_0_0_LTS/compiler_manual/c_cpp_language_implementation/pre_defined_macro_symbols/index.html</li> </ul>"},{"location":"compiler/texas-instruments/ti-arm/","title":"TI ARM","text":""},{"location":"compiler/texas-instruments/ti-arm/#identification","title":"Identification","text":"<code>__TI_ARM__</code> <p>Identifies the compiler as TI ARM (CGT).</p> <code>__TI_COMPILER_VERSION__</code> <p>Identifies the compiler vendor as Texas Instruments.</p>"},{"location":"compiler/texas-instruments/ti-arm/#versioning","title":"Versioning","text":"<code>__TI_COMPILER_VERSION__</code> <p>An integer for the version of the TI ARM compiler, which is encoded as a decimal integer with the general form of ABBBCCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BBB<sub>10</sub> is the minor version; and</li> <li>CCC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-arm/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/ARM-CGT</li> </ul>"},{"location":"compiler/texas-instruments/ti-c2000-clang/","title":"TI C29x Clang Compiler","text":""},{"location":"compiler/texas-instruments/ti-c2000-clang/#identification","title":"Identification","text":"<code>__C29__</code> <p>Identifies the target architecture as TMS320C29XXX.</p> <code>__ti__</code> <p>Identifies the compiler vendor as Texas Instruments.</p>"},{"location":"compiler/texas-instruments/ti-c2000-clang/#versioning","title":"Versioning","text":"<code>__ti_major__</code> <p>An integer for the major version of the TI C29x Clang compiler.</p> <code>__ti_minor__</code> <p>An integer for the minor version of the TI C29x Clang compiler.</p> <code>__ti_patchlevel__</code> <p>An integer for the patch version of the TI C29x Clang compiler.</p> <code>__ti_version__</code> <p>An integer for the version of the TI C29x Clang compiler, which is encoded as a decimal integer with the general form of ABBCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BB<sub>10</sub> is the minor version; and</li> <li>CC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-c2000-clang/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/C2000-CGT</li> <li>https://software-dl.ti.com/codegen/docs/c29clang/rel0_1_0_STS/</li> <li>https://software-dl.ti.com/codegen/docs/c29clang/rel0_1_0_STS/compiler_manual/c_cpp_language_implementation/pre_defined_macro_symbols/index.html</li> </ul>"},{"location":"compiler/texas-instruments/ti-c2000/","title":"TI C2000","text":""},{"location":"compiler/texas-instruments/ti-c2000/#identification","title":"Identification","text":"<code>__TI_COMPILER_VERSION__</code> <p>Identifies the compiler vendor as Texas Instruments.</p> <p><code>__TMS320C2000__</code></p> <p><code>__TMS320C28XX__</code></p>"},{"location":"compiler/texas-instruments/ti-c2000/#versioning","title":"Versioning","text":"<code>__TI_COMPILER_VERSION__</code> <p>An integer for the version of the TI C2000 compiler, which is encoded as a decimal integer with the general form of ABBBCCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BBB<sub>10</sub> is the minor version; and</li> <li>CCC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-c2000/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/C2000-CGT</li> </ul>"},{"location":"compiler/texas-instruments/ti-c5400/","title":"TI C5400","text":""},{"location":"compiler/texas-instruments/ti-c5400/#identification","title":"Identification","text":"<code>__TI_COMPILER_VERSION__</code> <p>Identifies the compiler vendor as Texas Instruments.</p> <p><code>_TMS320C5XX</code></p>"},{"location":"compiler/texas-instruments/ti-c5400/#versioning","title":"Versioning","text":"<code>__TI_COMPILER_VERSION__</code> <p>An integer for the version of the TI C5400 compiler, which is encoded as a decimal integer with the general form of ABBBCCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BBB<sub>10</sub> is the minor version; and</li> <li>CCC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-c5400/#references","title":"References","text":"<ul> <li>https://software-dl.ti.com/codegen/non-esd/downloads/download_archive.htm#C5400</li> </ul>"},{"location":"compiler/texas-instruments/ti-c5500/","title":"TI C5500","text":""},{"location":"compiler/texas-instruments/ti-c5500/#identification","title":"Identification","text":"<code>__TI_COMPILER_VERSION__</code> <p>Identifies the compiler vendor as Texas Instruments.</p> <p><code>__TMS320C55X__</code></p>"},{"location":"compiler/texas-instruments/ti-c5500/#versioning","title":"Versioning","text":"<code>__TI_COMPILER_VERSION__</code> <p>An integer for the version of the TI C5500 compiler, which is encoded as a decimal integer with the general form of ABBBCCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BBB<sub>10</sub> is the minor version; and</li> <li>CCC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-c5500/#references","title":"References","text":"<ul> <li>https://software-dl.ti.com/codegen/non-esd/downloads/download_archive.htm#C5500</li> </ul>"},{"location":"compiler/texas-instruments/ti-c6000/","title":"TI C6000","text":""},{"location":"compiler/texas-instruments/ti-c6000/#identification","title":"Identification","text":"<code>__TI_COMPILER_VERSION__</code> <p>Identifies the compiler vendor as Texas Instruments.</p> <code>_TMS320C6X</code> <p>Identifies the target architecture as TMS320C6XXX.</p>"},{"location":"compiler/texas-instruments/ti-c6000/#versioning","title":"Versioning","text":"<code>__TI_COMPILER_VERSION__</code> <p>An integer for the version of the TI C6000 compiler, which is encoded as a decimal integer with the general form of ABBBCCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BBB<sub>10</sub> is the minor version; and</li> <li>CCC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-c6000/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/C6000-CGT</li> </ul>"},{"location":"compiler/texas-instruments/ti-c7000/","title":"TI C7000","text":""},{"location":"compiler/texas-instruments/ti-c7000/#identification","title":"Identification","text":"<p><code>__C7000__</code></p> <code>__TI_COMPILER_VERSION__</code> <p>Identifies the compiler vendor as Texas Instruments.</p>"},{"location":"compiler/texas-instruments/ti-c7000/#versioning","title":"Versioning","text":"<code>__TI_COMPILER_VERSION__</code> <p>An integer for the version of the TI C7000 compiler, which is encoded as a decimal integer with the general form of ABBBCCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BBB<sub>10</sub> is the minor version; and</li> <li>CCC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-c7000/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/C7000-CGT</li> </ul>"},{"location":"compiler/texas-instruments/ti-cgt/","title":"TI Code Generation Tools","text":""},{"location":"compiler/texas-instruments/ti-cgt/#identification","title":"Identification","text":"<p><code>__TI_COMPILER_VERSION__</code></p>"},{"location":"compiler/texas-instruments/ti-cgt/#versioning","title":"Versioning","text":"<code>__TI_COMPILER_VERSION__</code> <p>An integer for the TI C2000 compiler version, which is encoded as a decimal integer with the general form of ABBBCCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BBB<sub>10</sub> is the minor version; and</li> <li>CCC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-cgt/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/TI-CGT</li> </ul>"},{"location":"compiler/texas-instruments/ti-clang/","title":"TI Clang","text":""},{"location":"compiler/texas-instruments/ti-clang/#identification","title":"Identification","text":"<code>__clang__</code> <p>Identifies the compiler as Clang.</p> <code>__ti__</code> <p>Identifies the compiler vendor as Texas Instruments.</p>"},{"location":"compiler/texas-instruments/ti-clang/#versioning","title":"Versioning","text":"<code>__ti_major__</code> <p>An integer for the major version of the TI Clang compiler.</p> <code>__ti_minor__</code> <p>An integer for the minor version of the TI Clang compiler.</p> <code>__ti_patchlevel__</code> <p>An integer for the patch version of the TI Clang compiler.</p> <code>__ti_version__</code> <p>An integer for the version of the TI Clang compiler, which is encoded as a decimal integer with the general form of ABBCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BB<sub>10</sub> is the minor version; and</li> <li>CC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-clang/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/download/ARM-CGT-CLANG/4.0.0.LTS</li> <li>https://software-dl.ti.com/codegen/docs/c29clang/rel0_1_0_STS/</li> <li>https://software-dl.ti.com/codegen/docs/c29clang/rel0_1_0_STS/compiler_manual/c_cpp_language_implementation/pre_defined_macro_symbols/index.html</li> <li>https://software-dl.ti.com/codegen/docs/tiarmclang/rel4_0_0_LTS/</li> <li>https://software-dl.ti.com/codegen/docs/tiarmclang/rel4_0_0_LTS/compiler_manual/c_cpp_language_implementation/pre_defined_macro_symbols/index.html</li> </ul>"},{"location":"compiler/texas-instruments/ti-msp430-gcc/","title":"TI MSP430 GCC","text":""},{"location":"compiler/texas-instruments/ti-msp430-gcc/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/MSP430-GCC-OPENSOURCE</li> </ul>"},{"location":"compiler/texas-instruments/ti-msp430/","title":"TI MSP430","text":""},{"location":"compiler/texas-instruments/ti-msp430/#identification","title":"Identification","text":"<code>__MSP430__</code> <p>Identifies the target architecture as MSP430.</p> <code>__TI_COMPILER_VERSION__</code> <p>Identifies the compiler vendor as Texas Instruments.</p>"},{"location":"compiler/texas-instruments/ti-msp430/#versioning","title":"Versioning","text":"<code>__TI_COMPILER_VERSION__</code> <p>An integer for the version of the TI MSP430 compiler, which is encoded as a decimal integer with the general form of ABBBCCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BBB<sub>10</sub> is the minor version; and</li> <li>CCC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-msp430/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/MSP-CGT</li> </ul>"},{"location":"compiler/texas-instruments/ti-msp432-gcc/","title":"TI MSP432 GCC","text":""},{"location":"compiler/texas-instruments/ti-msp432-gcc/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/download/MSP432-GCC-OPENSOURCE</li> <li>https://software-dl.ti.com/msp430/msp430_public_sw/mcu/msp430/MSP432GCC/latest/index_FDS.html</li> </ul>"},{"location":"compiler/texas-instruments/ti-pru/","title":"TI PRU","text":""},{"location":"compiler/texas-instruments/ti-pru/#identification","title":"Identification","text":"<code>__PRU__</code> <p>Identifies the target architecture as PRU.</p> <code>__TI_COMPILER_VERSION__</code> <p>Identifies the compiler vendor as Texas Instruments.</p>"},{"location":"compiler/texas-instruments/ti-pru/#versioning","title":"Versioning","text":"<code>__TI_COMPILER_VERSION__</code> <p>An integer for the version of the TI PRU compiler, which is encoded as a decimal integer with the general form of ABBBCCC<sub>10</sub>, where:</p> <ul> <li>A<sub>10</sub> is the major version;</li> <li>BBB<sub>10</sub> is the minor version; and</li> <li>CCC<sub>10</sub> is the patch version.</li> </ul>"},{"location":"compiler/texas-instruments/ti-pru/#references","title":"References","text":"<ul> <li>https://www.ti.com/tool/PRU-CGT</li> </ul>"},{"location":"cpu/aarch64/","title":"AArch64","text":"","tags":["AArch64","ARM64"]},{"location":"cpu/aarch64/#identification","title":"Identification","text":"<code>__aarch64__</code> <p>Identifies the target processor as AArch64.</p> <code>_M_ARM64</code> <p>Identifies the target processor as AArch64.</p>","tags":["AArch64","ARM64"]},{"location":"cpu/amd-am29k/","title":"AMD Am29000","text":""},{"location":"cpu/amd-am29k/#identification","title":"Identification","text":"<code>_AM29K</code> <code>__AMD29K__</code> <p>Identifies the target CPU as the AMD Am29000.</p> <code>_AM29000</code> <code>__AM29000__</code> <p>Identifies the target CPU as the AMD Am29000.</p>"},{"location":"cpu/amd-am29k/#references","title":"References","text":"<ul> <li>AMD Am29000 - Wikipedia</li> <li>GCC 3.1 - AM29K Options</li> </ul>"},{"location":"cpu/amd-gcn/","title":"AMD GCN","text":"<code>__AMDGCN__</code> <p>Identifies the target architecture as AMD GCN.</p>","tags":["AMD GCN","AMD Graphics Core Next","AMDGCN"]},{"location":"cpu/arc/","title":"ARC","text":"","tags":["ARC","Argonaut RISC Core"]},{"location":"cpu/arc/#identification","title":"Identification","text":"<p><code>__arc__</code></p>","tags":["ARC","Argonaut RISC Core"]},{"location":"cpu/arc/#references","title":"References","text":"<ul> <li>GCC - ARC Options</li> </ul>","tags":["ARC","Argonaut RISC Core"]},{"location":"cpu/arm/","title":"Arm","text":""},{"location":"cpu/arm/#identification","title":"Identification","text":"<code>_ARM</code> <p>Identifies the target architecture as Arm.</p> <code>__arm</code> <code>__arm__</code> <p>Identifies the target architecture as Arm.</p> <code>_M_ARM</code> <p>Identifies the target architecture as Arm.</p> <code>_M_ARMT</code> <p>Identifies the target architecture as Arm in Thumb mode.</p> <code>__thumb__</code> <p>Identifies the target architecture as Arm in Thumb mode.</p> <code>__TARGET_ARCH_ARM</code> <p>Identifies the target architecture as Arm.</p>"},{"location":"cpu/arm/#versioning","title":"Versioning","text":""},{"location":"cpu/arm/#references","title":"References","text":""},{"location":"cpu/avr/","title":"AVR","text":""},{"location":"cpu/avr/#identification","title":"Identification","text":"<code>AVR</code> <code>__AVR</code> <code>__AVR__</code> <p>Identifies the target architecture as AVR.</p> <code>__avr32__</code> <p>Identifies the target architecture as AVR.</p> <code>__AVR_ARCH__</code> <p>Identifies the target architecture as AVR.</p>"},{"location":"cpu/avr/#versioning","title":"Versioning","text":"<code>__AVR_ARCH__</code> <p>An integer for the version of AVR.</p>"},{"location":"cpu/avr/#references","title":"References","text":""},{"location":"cpu/blackfin/","title":"Blackfin","text":""},{"location":"cpu/blackfin/#identification","title":"Identification","text":"<code>__ADSPBLACKFIN__</code> <code>__ADSPLPBLACKFIN__</code> <p>Identifies the target processor as a Blackfin processor.</p> <code>bfin</code> <code>__bfin</code> <code>__bfin__</code> <p>Identifies the target processor as a Blackfin processor.</p> <code>BFIN</code> <code>__BFIN</code> <code>__BFIN__</code> <p>Identifies the target processor as a Blackfin processor.</p>"},{"location":"cpu/blackfin/#versioning","title":"Versioning","text":"Model Macro Generic Macros Version ADSP-BF504 <code>__ADSPBF504__</code> <code>__ADSPBF50x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF506F_FAMILY__</code> 5.0.400 ADSP-BF504F <code>__ADSPBF504F__</code> <code>__ADSPBF50x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF506F_FAMILY__</code> 5.0.470 ADSP-BF506F <code>__ADSPBF506F__</code> <code>__ADSPBF50x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF506F_FAMILY__</code> 5.0.670 ADSP-BF512 <code>__ADSPBF512__</code> <code>__ADSPBF51x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF518_FAMILY__</code> 5.1.200 ADSP-BF514 <code>__ADSPBF514__</code> <code>__ADSPBF51x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF518_FAMILY__</code> 5.1.400 ADSP-BF516 <code>__ADSPBF516__</code> <code>__ADSPBF51x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF518_FAMILY__</code> 5.1.600 ADSP-BF518 <code>__ADSPBF518__</code> <code>__ADSPBF51x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF518_FAMILY__</code> 5.1.800 ADSP-BF522 <code>__ADSPBF522__</code> <code>__ADSPBF52x__</code><code>__ADSPBF52xLP__</code><code>__ADSPBF5xx__</code><code>__ADSPBF526_FAMILY__</code> 5.2.200 ADSP-BF523 <code>__ADSPBF523__</code> <code>__ADSPBF52x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF527_FAMILY__</code> 5.2.300 ADSP-BF524 <code>__ADSPBF524__</code> <code>__ADSPBF52x__</code><code>__ADSPBF52xLP__</code><code>__ADSPBF5xx__</code><code>__ADSPBF526_FAMILY__</code> 5.2.400 ADSP-BF525 <code>__ADSPBF525__</code> <code>__ADSPBF52x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF527_FAMILY__</code> 5.2.500 ADSP-BF526 <code>__ADSPBF526__</code> <code>__ADSPBF52x__</code><code>__ADSPBF52xLP__</code><code>__ADSPBF5xx__</code><code>__ADSPBF526_FAMILY__</code> 5.2.600 ADSP-BF527 <code>__ADSPBF527__</code> <code>__ADSPBF52x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF527_FAMILY__</code> 5.2.700 ADSP-BF531 <code>__ADSPBF531__</code> <code>__ADSPBF53x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF533_FAMILY__</code> 5.3.100 ADSP-BF532 <code>__ADSPBF532__</code> <code>__ADSPBF53x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF533_FAMILY__</code> 5.3.200 ADSP-BF533 <code>__ADSPBF533__</code> <code>__ADSPBF53x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF533_FAMILY__</code> 5.3.300 ADSP-BF534 <code>__ADSPBF534__</code> <code>__ADSPBF53x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF537_FAMILY__</code> 5.3.400 ADSP-BF536 <code>__ADSPBF536__</code> <code>__ADSPBF53x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF537_FAMILY__</code> 5.3.600 ADSP-BF537 <code>__ADSPBF537__</code> <code>__ADSPBF53x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF537_FAMILY__</code> 5.3.700 ADSP-BF538 <code>__ADSPBF538__</code> <code>__ADSPBF53x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF538_FAMILY__</code> 5.3.800 ADSP-BF539 <code>__ADSPBF539__</code> <code>__ADSPBF53x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF538_FAMILY__</code> 5.3.900 ADSP-BF542 <code>__ADSPBF542__</code> <code>__ADSPBF54x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF548_FAMILY__</code> 5.4.200 ADSP-BF542M <code>__ADSPBF542M__</code> <code>__ADSPBF548M_FAMILY__</code> 5.4.277 ADSP-BF544 <code>__ADSPBF544__</code> <code>__ADSPBF54x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF548_FAMILY__</code> 5.4.400 ADSP-BF544M <code>__ADSPBF544M__</code> <code>__ADSPBF548M_FAMILY__</code> 5.4.477 ADSP-BF547 <code>__ADSPBF547__</code> <code>__ADSPBF54x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF548_FAMILY__</code> 5.4.700 ADSP-BF547M <code>__ADSPBF547M__</code> <code>__ADSPBF548M_FAMILY__</code> 5.4.777 ADSP-BF548 <code>__ADSPBF548__</code> <code>__ADSPBF54x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF548_FAMILY__</code> 5.4.800 ADSP-BF548M <code>__ADSPBF548M__</code> <code>__ADSPBF548M_FAMILY__</code> 5.4.877 ADSP-BF549 <code>__ADSPBF549__</code> <code>__ADSPBF54x__</code><code>__ADSPBF5xx__</code><code>__ADSPBF548_FAMILY__</code> 5.4.900 ADSP-BF549M <code>__ADSPBF549M__</code> <code>__ADSPBF548M_FAMILY__</code> 5.4.977 ADSP-BF561 <code>__ADSPBF561__</code> <code>__ADSPBF56x__</code><code>__ADSPBF5xx__</code> 5.6.100 ADSP-BF592-A <code>__ADSPBF592A__</code> <code>__ADSPBF59x__</code><code>__ADSPBF5xx__</code> 5.9.265 ADSP-BF606 <code>__ADSPBF606__</code> <code>__ADSPBF60x__</code><code>__ADSPBF6xx__</code><code>__ADSPBF609_FAMILY__</code> 6.0.600 ADSP-BF607 <code>__ADSPBF607__</code> <code>__ADSPBF60x__</code><code>__ADSPBF6xx__</code><code>__ADSPBF609_FAMILY__</code> 6.0.700 ADSP-BF608 <code>__ADSPBF608__</code> <code>__ADSPBF60x__</code><code>__ADSPBF6xx__</code><code>__ADSPBF609_FAMILY__</code> 6.0.800 ADSP-BF609 <code>__ADSPBF609__</code> <code>__ADSPBF60x__</code><code>__ADSPBF6xx__</code><code>__ADSPBF609_FAMILY__</code> 6.0.900 ADSP-BF700 <code>__ADSPBF700__</code> <code>__ADSPBF70x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF707_FAMILY__</code> 7.0.0 ADSP-BF701 <code>__ADSPBF701__</code> <code>__ADSPBF70x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF707_FAMILY__</code> 7.0.100 ADSP-BF702 <code>__ADSPBF702__</code> <code>__ADSPBF70x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF707_FAMILY__</code> 7.0.200 ADSP-BF703 <code>__ADSPBF703__</code> <code>__ADSPBF70x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF707_FAMILY__</code> 7.0.300 ADSP-BF704 <code>__ADSPBF704__</code> <code>__ADSPBF70x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF707_FAMILY__</code> 7.0.400 ADSP-BF705 <code>__ADSPBF705__</code> <code>__ADSPBF70x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF707_FAMILY__</code> 7.0.500 ADSP-BF706 <code>__ADSPBF706__</code> <code>__ADSPBF70x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF707_FAMILY__</code> 7.0.600 ADSP-BF707 <code>__ADSPBF707__</code> <code>__ADSPBF70x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF707_FAMILY__</code> 7.0.700 ADSP-BF715 <code>__ADSPBF715__</code> <code>__ADSPBF71x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF716_FAMILY__</code> 7.1.500 ADSP-BF716 <code>__ADSPBF716__</code> <code>__ADSPBF71x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF716_FAMILY__</code> 7.1.600 ADSP-BF718 <code>__ADSPBF718__</code> <code>__ADSPBF71x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF716_FAMILY__</code> 7.1.800 ADSP-BF719 <code>__ADSPBF719__</code> <code>__ADSPBF71x__</code><code>__ADSPBF7xx__</code><code>__ADSPBF716_FAMILY__</code> 7.1.900 <code>__ADSPBF50x__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF504, ADSP-BF504F, or ADSP-BF506F processor.</p> <code>__ADSPBF51x__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF512, ADSP-BF514, ADSP-BF516, or ADSP-BF518 processor.</p> <code>__ADSPBF52x__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF522, ADSP-BF524, ADSP-BF526, ADSP-BF523, ADSP-BF525, or ADSP-BF527 processor.</p> <code>__ADSPBF52xLP__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF522, ADSP-BF524, or ADSP-BF526 processor.</p> <code>__ADSPBF53x__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF531, ADSP-BF532, ADSP-BF533, ADSP-BF534, ADSP-BF536, ADSP-BF537, ADSP-BF538, or ADSP-BF539 processor.</p> <code>__ADSPBF54x__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF542, ADSP-BF544, ADSP-BF547, ADSP-BF548, or ADSP-BF549 processor.</p> <code>__ADSPBF56x__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF561 processor.</p> <code>__ADSPBF59x__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF592-A processor.</p> <code>__ADSPBF5xx__</code> <p>Defined to <code>1</code> when building for any of the ADSP-BF5xx parts, equivalent to:</p> <pre><code>( defined(__ADSPBF50x__) || defined(__ADSPBF51x__) ||\n  defined(__ADSPBF52x__) || defined(__ADSPBF53x__) ||\n  defined(__ADSPBF54x__) || defined(__ADSPBF56x__) ||\n  defined(__ADSPBF59x__) )\n</code></pre> <code>__ADSPBF60x__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF606, ADSP-BF607, ADSP-BF608 or ADSP-BF609 processor.</p> <code>__ADSPBF6xx__</code> <p>Equivalent to <code>__ADSPBF60x__</code>.</p> <code>__ADSPBF70x__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF700, ADSP-BF701, ADSP-BF702, ADSP-BF703, ADSP-BF704, ADSP-BF705, ADSP-BF706 or ADSP-BF707 processor.</p> <code>__ADSPBF71x__</code> <p>Defined as <code>1</code> when the target processor is the ADSP-BF715, ADSP-BF716, ADSP-BF718 or ADSP-BF719 processor.</p> <code>__ADSPBF7xx__</code> <p>Defined to <code>1</code> when building for any of the ADSP-BF7xx parts, equivalent to: </p> <pre><code>(defined(__ADSPBF70x__) || defined(__ADSPBF71x__))\n</code></pre> <code>__ADSPBF506F_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF504, ADSP-BF504F, or ADSP-BF506F.</p> <code>__ADSPBF518_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF512, ADSP-BF514, ADSP-BF516, or ADSP-BF518.</p> <code>__ADSPBF526_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF522, ADSP-BF524, ADSP-BF526, ADSP-BF523, ADSP-BF525, or ADSP-BF527.</p> <code>__ADSPBF527_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF523, ADSP-BF525, or ADSP-BF527.</p> <code>__ADSPBF533_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF531, ADSP-BF532, or ADSP-BF533.</p> <code>__ADSPBF537_FAMILY__</code> <p>Indicates that the processor is the  ADSP-BF534, ADSP-BF536 or ADSP-BF537.</p> <code>__ADSPBF538_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF538 or ADSP-BF539.</p> <code>__ADSPBF548_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF542, ADSP-BF544, ADSP-BF547, ADSP-BF548, or ADSP-BF549.</p> <code>__ADSPBF548M_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF542M, ADSP-BF544M, ADSP-BF547M, ADSP-BF548M, or ADSP-BF549M.</p> <code>__ADSPBF609_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF606, ADSP-BF607, ADSP-BF608 or ADSP-BF609 processor.</p> <code>__ADSPBF707_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF700, ADSP-BF701, ADSP-BF702, ADSP-BF703, ADSP-BF704, ADSP-BF705, ADSP-BF706 or ADSP-BF707.</p> <code>__ADSPBF716_FAMILY__</code> <p>Indicates that the processor is the ADSP-BF715, ADSP-BF716, ADSP-BF718 or ADSP-BF719.</p> <code>__SILICON_REVISION__</code> <p>ccblkfn defines <code>__SILICON_REVISION__</code> to a hexadecimal constant corresponding to the target processor revision; may also be set by the <code>-si-revision</code> option.</p>"},{"location":"cpu/blackfin/#references","title":"References","text":"<ul> <li>CCES Blackfin Manual</li> <li>gcc/config/bfin/bfin.h</li> </ul>"},{"location":"cpu/bpf/","title":"BPF","text":"","tags":["BPF","eBPF","Berkley Packet Filter","Extended Berkley Packet Filter"]},{"location":"cpu/bpf/#identification","title":"Identification","text":"<code>__bpf__</code> <p>Identifies the target architecture as BPF.</p> <code>__BPF__</code> <p>Identifies the target architecture as BPF.</p>","tags":["BPF","eBPF","Berkley Packet Filter","Extended Berkley Packet Filter"]},{"location":"cpu/bpf/#versioning","title":"Versioning","text":"<code>__BPF_CPU_VERSION__</code> <p>An integer for the BPF CPU version.</p>","tags":["BPF","eBPF","Berkley Packet Filter","Extended Berkley Packet Filter"]},{"location":"cpu/bpf/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/EBPF</li> </ul>","tags":["BPF","eBPF","Berkley Packet Filter","Extended Berkley Packet Filter"]},{"location":"cpu/convex/","title":"Convex","text":""},{"location":"cpu/convex/#identification","title":"Identification","text":"<code>convex</code> <code>__convex__</code> <p>Identifies the target machine/processor as Convex.</p>"},{"location":"cpu/convex/#versioning","title":"Versioning","text":"<code>__convex_c1__</code> <p>Indicates that the machine/processor belongs to the Convex C1 Family.</p> <p>GNU Compiler (3.1) -- Defined if the command line option <code>-mc1</code> is enabled.</p> <code>__convex_c2__</code> <p>Indicates that the machine/processor belongs to the Convex C2 Family.</p> <p>GNU Compiler (3.1) -- Defined if the command line option <code>-mc2</code> is enabled.</p> <code>__convex_c32__</code> <p>Indicates that the machine/processor belongs to the Convex C32xx Family.</p> <p>GNU Compiler (3.1) -- Defined if the command line option <code>-mc32</code> is enabled.</p> <code>__convex_c34__</code> <p>Indicates that the machine/processor belongs to the Convex C34xx Family.</p> <p>GNU Compiler (3.1) -- Defined if the command line option <code>-mc34</code> is enabled.</p> <code>__convex_c38__</code> <p>Indicates that the machine/processor belongs to the Convex C38xx Family.</p> <p>GNU Compiler (3.1) -- Defined if the command line option <code>-mc38</code> is enabled.</p>"},{"location":"cpu/convex/#references","title":"References","text":"<ul> <li>Convex Computer - Wikipedia</li> <li>GCC 3.1 - Convex Options</li> </ul> <p>Bug</p> <p>A typo for the Convex C1 macro is found in the GCC documentation however, the <code>&lt;gcc/config/convex/convex.h&gt;</code> header contains the correct spelling of <code>__convex_c1__</code>.</p>"},{"location":"cpu/cris/","title":"CRIS","text":""},{"location":"cpu/cris/#identification","title":"Identification","text":"<code>cris</code> <code>__cris</code> <code>__cris__</code> <p>Identifies the target CPU as CRIS.</p> <code>CRIS</code> <code>__CRIS</code> <code>__CRIS__</code> <p>Identifies the target CPU as CRIS.</p> <code>GNU_CRIS</code> <code>__GNU_CRIS</code> <code>__GNU_CRIS__</code> <p>Identifies the target CPU as CRIS.</p>"},{"location":"cpu/cris/#versioning","title":"Versioning","text":"<code>__CRIS_ABI_version</code> <p>An integer for the CRIS ABI version.</p> <code>__CRIS_arch_version</code> <p>An integer for the CRIS version.</p>"},{"location":"cpu/cris/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/ETRAX_CRIS</li> </ul>"},{"location":"cpu/csky/","title":"C-SKY","text":""},{"location":"cpu/csky/#identification","title":"Identification","text":"<code>__csky__</code> <p>Identifies the target CPU as C-SKY.</p> <code>__CSKY__</code> <p>Identifies the target CPU as C-SKY.</p>"},{"location":"cpu/csky/#references","title":"References","text":""},{"location":"cpu/d30v/","title":"D30V","text":"","tags":["D30V","Mitsubishi D30V"]},{"location":"cpu/d30v/#identification","title":"Identification","text":"<code>__D30V__</code> <p>Identifies the target architecture as the Mitsubishi D30V.</p>","tags":["D30V","Mitsubishi D30V"]},{"location":"cpu/dec-alpha/","title":"DEC Alpha","text":"<ul> <li>Bits: 64-bit</li> <li>Endianness: Bi</li> </ul>"},{"location":"cpu/dec-alpha/#identification","title":"Identification","text":"<code>_ALPHA_</code> <code>__ALPHA</code> <code>__ALPHA__</code> <p>Identifies the target CPU as the DEC Alpha.</p> <code>__Alpha_AXP</code> <code>__Alpha_AXP__</code> <p>Identifies the target CPU as the DEC Alpha.</p> <code>__alpha</code> <code>__alpha__</code> <p>Identifies the target CPU as the DEC Alpha.</p> <code>__alpha_vxworks</code> <code>__alpha_vxworks__</code> <p>Identifies the target CPU as the DEC Alpha.</p> <code>_M_ALPHA</code> <code>__M_ALPHA__</code> <p>Identifies the target CPU as the DEC Alpha.</p>"},{"location":"cpu/dec-alpha/#extension","title":"Extension","text":"<code>__alpha_bwx__</code> <p>Byte/Word Extension (BWX)</p> <code>__alpha_cix__</code> <p>Count Extension (CIX)</p> <code>__alpha_fix__</code> <p>Square-root and Floating-point Convert Extension (FIX)</p> <code>__alpha_max__</code> <p>Motion Video Instructions (MVI)</p> <p>!!!note</p> <pre><code>The predefined macro `__alpha_max__` appears to be named after the similar RISC Multimedia Acceleration eXtensions (MAX-1, MAX-2), which shares many similarities with the DEC Alpha's Motion Video Instructions (MVI).\n</code></pre>"},{"location":"cpu/dec-alpha/#versioning","title":"Versioning","text":"<code>__alpha_ev4__</code> <p>Defined if the CPU is a variant of the DEC Alpha EV4 (e.g., 21064, 21064A, etc.).</p> <code>__alpha_ev5__</code> <p>Defined if the CPU is a variant of the DEC Alpha EV5 (e.g., 21164, 21164A, etc.).</p> <code>__alpha_ev6__</code> <p>Defined if the CPU is a variant of the DEC Alpha EV6 (e.g., 21264, 21264A, etc.).</p> Model Code Name Status Extensions ADU EV3 Prototype 21064 EV4 Released 21064 EV4s Released 21064A EV45 Released 21066 LCA4 Released 21066A LCA4s Released 21068 LCA45 Released 21068A LCA45 Released 21164 EV5 Released <code>R</code> 21164A EV56 Released <code>RB</code> 21164PC PCA56 Released <code>RBM</code> 21164PC PCA57 Released <code>RBM</code> 21264 EV6 Released <code>RBMF</code> 21264A EV67 Released <code>RBMFC</code> 21264B EV68AL Released <code>RBMFCT</code> 21264C EV68CB Released <code>RBMFCT</code> 21264D EV68CX Released <code>RBMFCT</code> 21364 EV7 Released <code>RBMFCT</code> 21364 EV7z Released <code>RBMFCT</code> 21364A EV78/EV79 Cancelled <code>RBMFCT</code> 21464 EV8 Cancelled <code>RBMFCT</code> <ul> <li><code>R</code>, Hardware support for rounding to positive/negative infinity.</li> <li><code>B</code>, Byte/Word Extension (BWX), instructions for 8-bit and 16-bit operations from memory and I/O.</li> <li><code>M</code>, Motion Video Instructions (MVI), \"multimedia\" instructions (minimum/maximum operations).</li> <li><code>F</code>, Square-root and Floating-point Conversion Extension (FIX), instructions for converting integer and floating-point data between registers; and for square root operations.</li> <li><code>C</code>, Count Extension (CIX), instructions for counting and finding bits.</li> <li><code>T</code>, Hardware support for prefetch with modify intent to improve the performance of the first attempt to acquire a lock.</li> </ul>"},{"location":"cpu/dec-alpha/#references","title":"References","text":"<ul> <li>DEC Alpha - Wikipedia</li> <li>gcc/config/alpha/alpha.h</li> <li>GCC - DEC Alpha Options</li> <li>CPU Database - DEC Alpha</li> <li>chessprogramming.org - DEC Alpha</li> <li>emuvm.com - DEC Alpha</li> <li>NetBSD - DEC Alpha</li> <li>HP Digital Technical Journal - DEC Alpha</li> <li>HP Archived Technical Documentation - DEC Alpha</li> <li>FTP Archive - DEC Alpha</li> <li>bitsavers.org - DEC Alpha</li> </ul>"},{"location":"cpu/dec-pdp11/","title":"DEC PDP-11","text":""},{"location":"cpu/dec-pdp11/#identification","title":"Identification","text":"<code>pdp11</code> <code>__pdp11</code> <code>__pdp11__</code> <p>Identifies the target architecture as the PDP-11.</p>"},{"location":"cpu/dec-pdp11/#versioning","title":"Versioning","text":"<code>__pdp11_model</code> <p>An integer for the model of the PDP-11.</p>"},{"location":"cpu/dec-pdp11/#references","title":"References","text":""},{"location":"cpu/dec-vax/","title":"DEC VAX","text":""},{"location":"cpu/dec-vax/#identification","title":"Identification","text":"<code>vax</code> <code>__vax__</code> <p>Identifies the target architecture as the DEC VAX.</p>"},{"location":"cpu/dec-vax/#references","title":"References","text":""},{"location":"cpu/dsp16xx/","title":"DSP16xx","text":"<code>dsp1600</code> <code>__dsp1600__</code> <p>Identifies the target processor as the DSP1600.</p> <code>DSP1600</code> <code>__DSP1600__</code> <p>Identifies the target processor as the DSP1600.</p> <code>dsp1610</code> <code>__dsp1610__</code> <p>Identifies the target processor as the DSP1610.</p> <code>DSP1610</code> <code>__DSP1610__</code> <p>Identifies the target processor as the DSP1610.</p>"},{"location":"cpu/dsp16xx/#references","title":"References","text":""},{"location":"cpu/elbrus/","title":"Elbrus","text":""},{"location":"cpu/elbrus/#identification","title":"Identification","text":"<code>__e2k__</code> <p>Identifies the target architecture as the Elbrus 2000.</p>"},{"location":"cpu/elxsi/","title":"Elxsi","text":""},{"location":"cpu/elxsi/#identification","title":"Identification","text":"<code>elxsi</code> <code>__elxsi__</code> <p>Identifies the target architecture as Elxsi.</p>"},{"location":"cpu/elxsi/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Elxsi</li> </ul>"},{"location":"cpu/epiphany/","title":"Epiphany","text":""},{"location":"cpu/epiphany/#identification","title":"Identification","text":"<code>__epiphany__</code> <p>Identifies the target architecture as Epiphany.</p>"},{"location":"cpu/epiphany/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Zero_ASIC#Epiphany_V</li> </ul>"},{"location":"cpu/fr30/","title":"FR30","text":"<code>fr30</code> <code>__fr30</code> <code>__fr30__</code> <p>Identifies the target architecture as the FR30.</p>"},{"location":"cpu/fr30/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Fujitsu_FR</li> <li>https://sourceware.org/cgen/gen-doc/fr30.html</li> <li>https://web.archive.org/web/20180703075342/http://www.fujitsu.com/downloads/CN/fss/services/mcu/32bit/progfr-cm71-00101-5e.pdf</li> </ul>"},{"location":"cpu/frv/","title":"FR-V","text":""},{"location":"cpu/frv/#identification","title":"Identification","text":"<code>__frv__</code> <p>Identifies the target architecture as FR-V.</p>"},{"location":"cpu/frv/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/FR-V_(microprocessor)</li> </ul>"},{"location":"cpu/ft32/","title":"FT32","text":""},{"location":"cpu/ft32/#identification","title":"Identification","text":"<code>__FT32__</code> <p>Identifies the target architecture as the FT32.</p>"},{"location":"cpu/ft32/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/FT32</li> </ul>"},{"location":"cpu/h8300/","title":"H8/300","text":""},{"location":"cpu/h8300/#identification","title":"Identification","text":"<code>__H8300__</code> <p>Identifies the target architecture as H8/300.</p> <code>__H8300H__</code> <p>Identifies the target architecture as H8/300H.</p> <code>__H8300S__</code> <p>Identifies the target architecture as H8/300S.</p> <code>__H8300SX__</code> <p>Identifies the target architecture as H8/300SX.</p>"},{"location":"cpu/h8300/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/H8_Family</li> </ul>"},{"location":"cpu/hc08/","title":"HC08","text":""},{"location":"cpu/hc11/","title":"HC11","text":""},{"location":"cpu/hc11/#identification","title":"Identification","text":"<code>mc68hc1x</code> <code>__mc68hc1x__</code> <p>Identifies the target architecture as the HC11.</p>"},{"location":"cpu/hc11/#versioning","title":"Versioning","text":"<code>mc6811</code> <code>MC6811</code> <code>mc68hc11</code> <p>Defined if the target architecture is the MC68HC11.</p> <code>mc6812</code> <code>MC6812</code> <code>mc68hc12</code> <p>Defined if the target architecture is the MC68HC12.</p>"},{"location":"cpu/hexagon/","title":"Hexagon","text":""},{"location":"cpu/hexagon/#identification","title":"Identification","text":"<code>__hexagon__</code> <p>Identifies the target architecture as Hexagon.</p>"},{"location":"cpu/hexagon/#references","title":"References","text":""},{"location":"cpu/hppa/","title":"HP/PA RISC","text":"<code>hppa</code> <code>__hppa</code> <code>__hppa__</code> <p>Identifies the target architecture as HP/PA RISC.</p> <code>__HPPA__</code> <p>Identifies the target architecture as HP/PA RISC.</p>"},{"location":"cpu/ia64/","title":"IA-64","text":"<p><code>__ia64</code> <code>__ia64__</code> <code>_IA64</code> <code>__IA64__</code> <code>__itanium__</code> <code>_M_IA64</code></p>"},{"location":"cpu/iq2000/","title":"IQ2000","text":"<code>__iq2000__</code> <p>Identifies the target architecture as the IQ2000.</p>"},{"location":"cpu/lm32/","title":"LM32","text":""},{"location":"cpu/lm32/#identification","title":"Identification","text":"<code>__lm32__</code> <p>Identifies the target architecture as the LM32.</p>"},{"location":"cpu/lm32/#references","title":"References","text":""},{"location":"cpu/loongarch/","title":"LoongArch","text":""},{"location":"cpu/loongarch/#identification","title":"Identification","text":"<code>__loongarch__</code> <p>Identifies the target architecture as LoongArch.</p>"},{"location":"cpu/loongarch/#versioning","title":"Versioning","text":"<code>__loongarch_arch</code> <p>An integer</p> <code>_LOONGARCH_ARCH</code> <p>An integer</p> <code>__loongarch_tune</code> <p>An integer</p> <code>_LOONGARCH_TUNE</code> <p>An integer</p>"},{"location":"cpu/loongarch/#references","title":"References","text":"<ul> <li>https://loongson.github.io/LoongArch-Documentation/LoongArch-toolchain-conventions-EN.html#_cc_preprocessor_built_in_macro_definitions</li> </ul>"},{"location":"cpu/m16c/","title":"M16C","text":""},{"location":"cpu/m32c/","title":"M32C","text":""},{"location":"cpu/m32c/#identification","title":"Identification","text":"<code>__m32c__</code> <p>Identifies the target architecture as the M32C.</p>"},{"location":"cpu/m32c/#references","title":"References","text":""},{"location":"cpu/m32r/","title":"M32R/D","text":"<code>__m32r__</code> <p>Identifies the target architecture as the M32R/D.</p> <code>__M32R__</code> <p>Identifies the target architecture as the M32R/D.</p> <code>__M32RX__</code> <p>Identifies the target architecture as the M32R/D.</p>"},{"location":"cpu/m32r/#references","title":"References","text":""},{"location":"cpu/m68k/","title":"M68000","text":""},{"location":"cpu/m68k/#identification","title":"Identification","text":"<code>__m68k__</code> <p>Identifies the target architecture as the M68000.</p> <code>mc68000</code> <code>__mc68000</code> <code>__mc68000__</code> <p>Identifies the target architecture as the M68000.</p>"},{"location":"cpu/m68k/#versioning","title":"Versioning","text":"<code>__mc68000__</code> <code>__MC68000__</code> <p>Defined if the target architecture is the MC68000.</p> <code>mc68010</code> <code>__mc68010</code> <code>__mc68010__</code> <p>Defined if the target architecture is the MC68010.</p> <code>mc68020</code> <code>__mc68020</code> <code>__mc68020__</code> <code>__MC68020__</code> <p>Defined if the target architecture is the MC68020.</p> <code>mc68030</code> <code>__mc68030</code> <code>__mc68030__</code> <code>__MC68030__</code> <p>Defined if the target architecture is the MC68030.</p> <code>mc68040</code> <code>__mc68040</code> <code>__mc68040__</code> <p>Defined if the target architecture is the MC68040.</p> <code>mc68060</code> <code>__mc68060</code> <code>__mc68060__</code> <p>Defined if the target architecture is the MC68060.</p> <code>mc68332</code> <code>__mc68332</code> <code>__mc68332__</code> <p>Defined if the target architecture is the MC68332.</p> <code>__HAVE_68881__</code> <p>Defined if the target architecture is the MC68881.</p>"},{"location":"cpu/m68k/#references","title":"References","text":""},{"location":"cpu/m88k/","title":"M88000","text":""},{"location":"cpu/m88k/#identification","title":"Identification","text":"<code>m88k</code> <code>__m88k__</code> <p>Identifies the target architecture as the M88000.</p> <code>m88000</code> <code>__m88000__</code> <p>Identifies the target architecture as the M88000.</p>"},{"location":"cpu/m88k/#versioning","title":"Versioning","text":"<code>__m88110__</code> <p>Defined if the target architecture is the M88110.</p>"},{"location":"cpu/m88k/#features","title":"Features","text":""},{"location":"cpu/mcore/","title":"MCore","text":""},{"location":"cpu/mcore/#identification","title":"Identification","text":"<code>__mcore__</code> <p>Identifies the target architecture as MCore.</p> <code>__MCORE__</code> <p>Identifies the target architecture as MCore.</p>"},{"location":"cpu/mcore/#versioning","title":"Versioning","text":"<code>__M210__</code> <p>Defined if the target architecture is the MCore M210.</p> <code>__M340__</code> <p>Defined if the target architecture is the MCore M340.</p>"},{"location":"cpu/mcore/#references","title":"References","text":""},{"location":"cpu/microblaze/","title":"MicroBlaze","text":"<code>__microblaze__</code> <p>Identifies the target architecture as MicroBlaze.</p> <code>__MICROBLAZE__</code> <p>Identifies the target architecture as MicroBlaze.</p>"},{"location":"cpu/microblaze/#references","title":"References","text":""},{"location":"cpu/mips/","title":"MIPS","text":""},{"location":"cpu/mips/#identification","title":"Identification","text":"<code>_mips</code> <code>__mips</code> <code>__mips__</code> <p>Identifies the target architecture as MIPS.</p> <code>__MIPS__</code> <p>Identifies the target architecture as MIPS.</p>"},{"location":"cpu/mips/#versioning","title":"Versioning","text":""},{"location":"cpu/mips/#references","title":"References","text":""},{"location":"cpu/mmix/","title":"MMIX","text":"<code>__mmix__</code> <p>Identifies the target architecture as MMIX.</p> <code>__MMIX__</code> <p>Identifies the target architecture as MMIX.</p>"},{"location":"cpu/mmix/#references","title":"References","text":""},{"location":"cpu/mn10200/","title":"MN10200","text":""},{"location":"cpu/mn10200/#identification","title":"Identification","text":"<code>__mn10200__</code> <p>Identifies the target architecture as MN10200.</p> <code>__MN10200__</code> <p>Identifies the target architecture as MN10200.</p>"},{"location":"cpu/mn10200/#references","title":"References","text":""},{"location":"cpu/mn10300/","title":"MN10300","text":""},{"location":"cpu/mn10300/#identification","title":"Identification","text":"<code>__mn10300__</code> <p>Identifies the target architecture as the MN10300.</p> <code>__MN10300__</code> <p>Identifies the target architecture as the MN10300.</p>"},{"location":"cpu/mn10300/#versioning","title":"Versioning","text":"<p><code>__AM33__</code> <code>__AM34__</code> <code>__AM33_2__</code></p>"},{"location":"cpu/mn10300/#references","title":"References","text":""},{"location":"cpu/moxie/","title":"Moxie","text":""},{"location":"cpu/moxie/#identification","title":"Identification","text":"<code>moxie</code> <code>__moxie</code> <code>__moxie__</code> <p>Identifies the target architecture as Moxie.</p> <code>MOXIE</code> <code>__MOXIE</code> <code>__MOXIE__</code> <p>Identifies the target architecture as Moxie.</p>"},{"location":"cpu/moxie/#references","title":"References","text":""},{"location":"cpu/msp430/","title":"MSP430","text":""},{"location":"cpu/msp430/#identification","title":"Identification","text":"<code>__MSP430__</code> <p>Identifies the target architecture as the MSP430.</p> <code>__MSP430X__</code> <p>Identifies the target architecture as the MSP430X.</p>"},{"location":"cpu/msp430/#references","title":"References","text":""},{"location":"cpu/native-client/","title":"Native Client","text":"","tags":["Native Client","PNaCl"]},{"location":"cpu/native-client/#identification","title":"Identification","text":"<code>__pnacl__</code> <p>Identifies the target architecture as Native Client.</p>","tags":["Native Client","PNaCl"]},{"location":"cpu/nds32/","title":"NDS32","text":""},{"location":"cpu/nds32/#identification","title":"Identification","text":"<code>__nds32__</code> <p>Identifies the target architecture as NDS32.</p> <code>__NDS32__</code> <p>Identifies the target architecture as NDS32.</p>"},{"location":"cpu/nds32/#references","title":"References","text":""},{"location":"cpu/nec-sx-aurora/","title":"NEC SX-Aurora TSUBASA","text":"<p><code>__NEC__</code></p> <p><code>__ve</code> <code>__ve__</code></p>"},{"location":"cpu/nec-sx-aurora/#references","title":"References","text":"<ul> <li>NEC SX-Aurora TSUBASA - Wikipedia</li> </ul>"},{"location":"cpu/nios2/","title":"NIOS II","text":"","tags":["Nios 2","Nios II"]},{"location":"cpu/nios2/#identification","title":"Identification","text":"<code>nios2</code> <code>__nios2</code> <code>__nios2__</code> <p>Identifies the target architecture as the Nios II.</p> <code>NIOS2</code> <code>__NIOS2</code> <code>__NIOS2__</code> <p>Identifies the target architecture as the Nios II.</p>","tags":["Nios 2","Nios II"]},{"location":"cpu/nios2/#references","title":"References","text":"","tags":["Nios 2","Nios II"]},{"location":"cpu/ns32k/","title":"NS32000","text":""},{"location":"cpu/ns32k/#identification","title":"Identification","text":"<code>ns32000</code> <code>__ns32000__</code> <p>Identifies the target architecture as the NS32000.</p>"},{"location":"cpu/ns32k/#references","title":"References","text":""},{"location":"cpu/or1k/","title":"OpenRISC 1000","text":"","tags":["OR1K","OpenRISC 1000","OpenRISC 1K"]},{"location":"cpu/or1k/#identification","title":"Identification","text":"<code>__or1k__</code> <p>Identifies the target architecture as the OpenRISC 1000.</p> <code>__OR1K__</code> <p>Identifies the target architecture as the OpenRISC 1000.</p>","tags":["OR1K","OpenRISC 1000","OpenRISC 1K"]},{"location":"cpu/or1k/#references","title":"References","text":"","tags":["OR1K","OpenRISC 1000","OpenRISC 1K"]},{"location":"cpu/picojava/","title":"picoJava","text":"","tags":["picoJava","PJ"]},{"location":"cpu/picojava/#identification","title":"Identification","text":"<code>__pj__</code> <p>Identifies the target architecture as PJ.</p>","tags":["picoJava","PJ"]},{"location":"cpu/picojava/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/PicoJava</li> </ul>","tags":["picoJava","PJ"]},{"location":"cpu/power/","title":"POWER / PowerPC","text":""},{"location":"cpu/power/#identification","title":"Identification","text":"<p><code>_ARCH_PPC</code> <code>_ARCH_PPC64</code> <code>_M_PPC</code> <code>__powerpc</code> <code>__powerpc__</code> <code>__powerpc64__</code> <code>__POWERPC__</code> <code>__ppc</code> <code>__ppc__</code> <code>__PPC__</code> <code>__ppc64__</code> <code>__PPC64__</code></p>"},{"location":"cpu/power/#references","title":"References","text":""},{"location":"cpu/pru/","title":"PRU","text":""},{"location":"cpu/pru/#identification","title":"Identification","text":"<code>__pru__</code> <p>Identifies the target architecture as PRU.</p> <code>__PRU__</code> <p>Identifies the target architecture as PRU.</p> <code>__PRU_V3__</code> <p>Identifies the target architecture as PRU.</p>"},{"location":"cpu/pru/#references","title":"References","text":""},{"location":"cpu/ptx/","title":"Nvidia PTX","text":"","tags":["Nvidia PTX","PTX","Parallel Thread Execution"]},{"location":"cpu/ptx/#identification","title":"Identification","text":"<code>__nvptx__</code> <p>Identifies the target architecture as Nvidia PTX.</p>","tags":["Nvidia PTX","PTX","Parallel Thread Execution"]},{"location":"cpu/ptx/#versioning","title":"Versioning","text":"<code>__PTX_ISA_VERSION_MAJOR__</code> <p>An integer for the Nvidia PTX major version.</p> <code>__PTX_ISA_VERSION_MINOR__</code> <p>An integer for the Nvidia PTX minor version.</p>","tags":["Nvidia PTX","PTX","Parallel Thread Execution"]},{"location":"cpu/ptx/#references","title":"References","text":"","tags":["Nvidia PTX","PTX","Parallel Thread Execution"]},{"location":"cpu/pyramid/","title":"Pyramid 9810","text":""},{"location":"cpu/pyramid/#identification","title":"Identification","text":"<code>pyr</code> <p>Identifies the target architecture as the Pyramid 9810.</p>"},{"location":"cpu/riscv/","title":"RISC-V","text":""},{"location":"cpu/riscv/#identification","title":"Identification","text":"<code>__riscv</code> <p>Identifies the target architecture as RISC-V.</p>"},{"location":"cpu/riscv/#references","title":"References","text":""},{"location":"cpu/rl78/","title":"RL78","text":""},{"location":"cpu/rl78/#identification","title":"Identification","text":"<code>__RL78__</code> <p>Identifies the target architecture as the RL78.</p>"},{"location":"cpu/rl78/#references","title":"References","text":""},{"location":"cpu/romp/","title":"ROMP","text":"","tags":["ROMP","Research OPD Microprocessor"]},{"location":"cpu/romp/#identification","title":"Identification","text":"<code>ibm032</code> <code>__ibm032__</code> <p>Identifies the target architecture as ROMP.</p>","tags":["ROMP","Research OPD Microprocessor"]},{"location":"cpu/romp/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/IBM_ROMP</li> </ul>","tags":["ROMP","Research OPD Microprocessor"]},{"location":"cpu/rs6k/","title":"RS/6000","text":""},{"location":"cpu/rs6k/#identification","title":"Identification","text":"<p><code>_IBMR2</code> <code>__IBMR2__</code></p> <p><code>_POWER</code> <code>__POWER__</code></p> <p><code>__THW_RS6000</code></p>"},{"location":"cpu/rs6k/#references","title":"References","text":""},{"location":"cpu/rx/","title":"RX","text":""},{"location":"cpu/rx/#identification","title":"Identification","text":"<code>__RX__</code> <p>Identifies the target architecture as RX.</p>"},{"location":"cpu/rx/#references","title":"References","text":""},{"location":"cpu/s370/","title":"System/370","text":"","tags":["ESA/370","IBM S/370","IBM System/370"]},{"location":"cpu/s370/#identification","title":"Identification","text":"<code>__370__</code> <p>Identifies the target architecture as the System/370.</p> <code>__THW_370__</code> <p>Identifies the target architecture as the System/370.</p>","tags":["ESA/370","IBM S/370","IBM System/370"]},{"location":"cpu/s370/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/IBM_System/370</li> </ul>","tags":["ESA/370","IBM S/370","IBM System/370"]},{"location":"cpu/s390/","title":"System/390","text":"","tags":["ESA/390","IBM S/390","IBM System/390"]},{"location":"cpu/s390/#identification","title":"Identification","text":"<p><code>__s390__</code> <code>__s390x__</code> <code>__zarch__</code></p>","tags":["ESA/390","IBM S/390","IBM System/390"]},{"location":"cpu/s390/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/IBM_System/390</li> </ul>","tags":["ESA/390","IBM S/390","IBM System/390"]},{"location":"cpu/sparc/","title":"SPARC","text":""},{"location":"cpu/sparc/#identification","title":"Identification","text":"<code>sparc</code> <code>__sparc</code> <code>__sparc__</code> <p>Identifies the target architecture as SPARC.</p> <code>SPARC</code> <code>__SPARC__</code> <p>Identifies the target architecture as SPARC.</p> <code>__sparc64__</code> <p>Identifies the target architecture as SPARC.</p> <code>__sparcv9</code> <p>Identifies the target architecture as SPARC.</p> <code>__sparc_v9__</code> <p>Identifies the target architecture as SPARC.</p>"},{"location":"cpu/sparc/#references","title":"References","text":""},{"location":"cpu/st7/","title":"ST7","text":""},{"location":"cpu/stm8/","title":"STM8","text":""},{"location":"cpu/str9/","title":"STR9","text":""},{"location":"cpu/superh/","title":"SuperH","text":""},{"location":"cpu/superh/#identification","title":"Identification","text":"<code>__sh__</code> <p>Identifies the target architecture as SuperH.</p>"},{"location":"cpu/superh/#versioning","title":"Versioning","text":""},{"location":"cpu/superh/#references","title":"References","text":""},{"location":"cpu/tms320/","title":"TMS320","text":"<p><code>_TMS320C2XX</code> <code>__TMS320C2000__</code></p> <p><code>_TMS320C5XX</code> <code>__TMS320C55X__</code></p> <p><code>_TMS320C6X</code> <code>__TMS320C6X__</code></p> <p><code>_TMS320C6200</code> <code>_TMS320C6400_PLUS</code> <code>_TMS320C6400</code> <code>_TMS320C6700_PLUS</code> <code>_TMS320C6700</code> <code>_TMS320C6740</code> <code>_TMS320C6700_PLUS</code> <code>_TMS320C6700</code> <code>_TMS320C6400_PLUS</code> <code>_TMS320C6400</code></p>"},{"location":"cpu/tms470/","title":"TMS470","text":""},{"location":"cpu/v850/","title":"V850","text":"<p><code>__v850</code> <code>__v850__</code> <code>__v850e__</code> <code>__v850ea__</code> <code>__v851__</code></p>"},{"location":"cpu/visium/","title":"Visium","text":"<p><code>__VISIUM__</code></p>"},{"location":"cpu/wasm/","title":"WebAssembly","text":""},{"location":"cpu/wasm/#identification","title":"Identification","text":"<p><code>__EMSCRIPTEN__</code> <code>__wasm</code> <code>__wasm__</code> <code>__wasm32</code> <code>__wasm32__</code> <code>__wasm64</code> <code>__wasm64__</code> <code>__WASM__</code></p>"},{"location":"cpu/wasm/#references","title":"References","text":"<ul> <li>https://github.com/llvm/llvm-project/blob/13449c3de45111d21a1a7dc4df8be1c29bff6447/clang/lib/Basic/Targets/WebAssembly.cpp#L388</li> </ul>"},{"location":"cpu/we32k/","title":"WE32000","text":"<p><code>we32000</code> <code>__we32000__</code></p>"},{"location":"cpu/x80/","title":"x80","text":""},{"location":"cpu/x80/#identification","title":"Identification","text":"<code>__8080__</code> <p>Identifies the target architecture as x80.</p> <code>__8085__</code> <p>Identifies the target architecture as x80.</p> <code>__Z80</code> <p>Identifies the target architecture as x80.</p> <code>__Z180</code> <p>Identifies the target architecture as x80.</p>"},{"location":"cpu/x80/#references","title":"References","text":""},{"location":"cpu/x86/","title":"x86","text":""},{"location":"cpu/xstormy16/","title":"Xstormy16","text":""},{"location":"cpu/xstormy16/#identification","title":"Identification","text":"<code>xstormy16</code> <code>__xstormy16__</code> <p>Identifies the target architecture as Xstormy16.</p>"},{"location":"cpu/xstormy16/#references","title":"References","text":""},{"location":"cpu/xtensa/","title":"Xtensa","text":""},{"location":"cpu/xtensa/#identification","title":"Identification","text":"<code>__XTENSA__</code> <p>Identifies the target architecture as Xtensa.</p>"},{"location":"cpu/xtensa/#references","title":"References","text":""},{"location":"cpu/z/","title":"z/Architecture","text":""},{"location":"cpu/z/#identification","title":"Identification","text":"<code>__SYSC_ZARCH__</code> <p>Identifies the target architecture as z/Architecture.</p> <code>__zarch__</code> <p>Identifies the target architecture as z/Architecture.</p>"},{"location":"cpu/z/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Z/Architecture</li> </ul>"},{"location":"cpu/x86/32/","title":"x86-32","text":""},{"location":"cpu/x86/64/","title":"x86-64","text":""},{"location":"data-model/","title":"Data Model","text":"Type LP32 ILP32 SILP32 SILP36 LP64 ILP64 SILP64 <code>char</code> 8 8 8 9 8 8 8 <code>short</code> 16 16 32 36 16 16 64 <code>int</code> 16 32 32 36 32 64 64 <code>long</code> 32 32 32 36 64 64 64 <code>long long</code> 64 64 64 <code>void *</code> 32 32 32 36 64 64 64"},{"location":"feature/c/c11/","title":"ISO/IEC 9899:2011","text":"<ul> <li>conditional (optional) features (including some that were previously mandatory)</li> <li>support for multiple threads of execution including an improved memory sequencing model, atomic objects, and thread storage (<code>&lt;stdatomic.h&gt;</code> and <code>&lt;threads.h&gt;</code>) [{c-n1252}]</li> <li>additional floating-point characteristic macros (<code>&lt;float.h&gt;</code>)</li> <li>querying and specifying alignment of objects (<code>&lt;stdalign.h&gt;</code>, <code>&lt;stdlib.h&gt;</code>)</li> <li>Unicode characters and strings (<code>&lt;uchar.h&gt;</code>) (originally specified in ISO/IEC TR 19769:2004) [{c-n1326}]</li> <li>type-generic expressions</li> <li>static assertions</li> <li>anonymous structures and unions</li> <li>no-return functions</li> <li>macros to create complex numbers (<code>&lt;complex.h&gt;</code>)</li> <li>support for opening files for exclusive access</li> <li>removed the gets function (<code>&lt;stdio.h&gt;</code>)</li> <li>added the <code>aligned_alloc</code>, <code>at_quick_exit</code>, and <code>quick_exit</code> functions (<code>&lt;stdlib.h&gt;</code>)</li> <li>(conditional) support for bounds-checking interfaces (originally specified in ISO/IEC TR 24731\u20131:2007)</li> <li>(conditional) support for analyzability</li> </ul>"},{"location":"feature/c/c23/","title":"ISO/IEC 9899:2024","text":"<ul> <li>add new keywords such as <code>bool</code>, <code>static_assert</code>, <code>true</code>, <code>false</code>, <code>thread_local</code> and others, and allowed implementations to provide macros for the older spelling with a leading underscore followed by a capital letter as well as defining old and new keywords as macros to enable transition of programs easily;</li> <li>removed integer width constraints and obsolete sign representations (so-called \"1's complement\" and \"sign-magnitude\");</li> <li>added a one-argument version of <code>static_assert</code>;</li> <li>removed support for function definitions with identifier lists;</li> <li>mandated function declarations whose parameter list is empty be treated the same as a parameter list which only contain a single void;</li> <li>harmonization with ISO/IEC 9945 (POSIX):</li> <li>extended month name formats for <code>strftime</code></li> <li>integration of functions: <code>gmtime_r</code>, <code>localtime_r</code>, <code>memccpy</code>, <code>strdup</code>, <code>strndup</code></li> <li>harmonization with floating-point standard ISO/IEC 60559:</li> <li>integration of binary floating-point technical specification TS 18661-1</li> <li>integration of decimal floating-point technical specification TS 18661-2</li> <li>integration of floating-point types technical specification TS 18661-3</li> <li>integration of mathematical functions technical specification TS 18661-4a</li> <li>new maximum and minimum functions for operations recommended in ISO/IEC 60559:2020</li> <li>made the <code>DECIMAL_DIG</code> macro obsolescent;</li> <li>added version test macros to library headers that contained changes to aid in upgrading and portability to be used alongside the <code>__STDC_VERSION__</code> macro;</li> <li>allowed placement of labels in front of declarations and at the end of compound statement;</li> <li>added the attributes feature, which includes the attributes:</li> <li><code>deprecated</code>, for marking entities as discouraged for future use;</li> <li><code>fallthrough</code>, for explicitly marking cases where falling through in switches or labels is intended rather than accidental;</li> <li><code>maybe_unused</code>, for marking entities which may end up not being used;</li> <li><code>nodiscard</code>, for marking entities which, when used, should have their value handled in some way by a program;</li> <li><code>noreturn</code>, for indicating a function shall never return;</li> <li><code>reproducible</code>, for marking function types for which inputs may always produce predictable output if given the same input (e.g. cached data) but for which the order of such calls still matter; and,</li> <li><code>unsequenced</code>, for marking function types which always produce predictable output and have no dependencies upon other data (and other relevant caveats);</li> <li>added the <code>u8</code> character prefix to match the <code>u8</code> string prefix;</li> <li>mandated all <code>u8</code>, <code>u</code>, and <code>U</code> strings be UTF-8, UTF-16, and UTF-32, respectively, as defined by ISO/IEC 10646;</li> <li>separated the literal, wide literal, and UTF-8 literal, UTF-16 literal, and UTF-32 literal encodings for strings and characters and now have a solely execution-based version of these, particularly execution and wide execution encodings;</li> <li>added <code>mbrtoc8</code> and <code>c8rtomb</code> functions missing from <code>&lt;uchar.h&gt;</code>;</li> <li>compound literals may also include storage-class specifiers as part of the type to change the lifetime of the compound literal (and possibly turn it into a constant expression)</li> <li>added the <code>constexpr</code> specifier for object definitions and improved what is recognized as a constant expression in conjunction with the <code>constexpr</code> storage-class specifier;</li> <li>added support for initialization of objects with empty braces;</li> <li>added the <code>typeof</code> and <code>typeof_unqual</code> operations for deducing the type of an expression;</li> <li>improved tag compatibility rules, enabling more types to be compatible with other types;</li> <li>added bit-precise integer types <code>_BitInt(N)</code> and <code>unsigned _BitInt(N)</code>, where <code>N</code> can be an integer constant expression whose value is from one to <code>BITINT_MAXWIDTH</code>, inclusive.</li> <li>improved rules for handling enumerations without underlying types, in particular allowing for enumerations without fixed underlying type to have value representations that have a greater range than <code>int</code>;</li> <li>added a new colon-delimited type specifier for enumerations to specify a fixed underlying type (and which, subject to an implementation's definitions governing such constructs, adopt the fixed underlying type's rules for padding, alignment, and sizing within structures and unions as well as with bit-fields);</li> <li>added a new header <code>&lt;stdbit.h&gt;</code> and a suite of bit and byte-handling utilities for portable access to many implementations' most efficient functionality;</li> <li>modified existing functions to preserve the const-ness of the type placed into the function;</li> <li>added a feature to embed binary data as faithfully as possible with a new preprocessor directive <code>#embed</code>;</li> <li>added a <code>nullptr</code> constant and a <code>nullptr_t</code> type with a well-defined underlying representation identical to a pointer to <code>void</code>;</li> <li>added the <code>__VA_OPT__</code> specifier and clarified language in the handling of macro invocation and arguments;</li> <li>mandated support for variably modified types (but not variable length arrays themselves);</li> <li>parameter names may be omitted in function definitions;</li> <li>ellipses on functions may appear without a preceding parameter in the parameter list of functions and <code>va_start</code> no longer requires such an argument to be passed to it;</li> <li>Unicode identifiers allowed in syntax following Unicode Standard Annex, UAX #31;</li> <li>added the <code>memset_explicit</code> function for making sensitive information inaccessible;</li> <li>added <code>memalignment</code> function to query the alignment of a pointer;</li> <li>certain type definitions (i.e. exact-width integer types such as <code>int128_t</code>), bit-precise integer types, and extended integer types may exceed the normal boundaries of <code>intmax_t</code> and <code>uintmax_t</code> for signed and unsigned integer types, respectively;</li> <li>names of functions, macros, and variables in this document, where clarified, are potentially reserved rather than reserved to avoid undefined behavior for a large class of identifiers used by programs existing and to be created;</li> <li>mandated support for call_once;</li> <li>allowed <code>ptrdiff_t</code> to be an integer type with a width of at least 16, rather than requiring an integer type with a width of at least 17;</li> <li>added the __has_include feature for conditional inclusion expression preprocessor directives to check if a header is available for inclusion;</li> <li>changed the type qualifiers of the <code>_Imaginary_I</code> and <code>_Complex_I</code> macros;</li> <li>added qualifier preserving macros for <code>bsearch</code>, <code>memchr</code>, <code>strchr</code>, <code>strpbrk</code>, <code>strrchr</code>, <code>strstr</code>, <code>wcschr</code>, <code>wcspbrk</code>, <code>wcsrchr</code>, <code>wmemchr</code>, and <code>wcsstr</code>;</li> <li>added <code>@</code> (U+0040, COMMERCIAL AT), <code>$</code> (U+0024, DOLLAR SIGN), and ``` (U+0060, GRAVE ACCENT, \"Backtick\") into the source and execution character set;</li> <li>enhanced the <code>auto</code> type specifier for single object definitions using type inference;</li> <li>added the <code>#elifdef</code> and <code>#elifndef</code> conditional inclusion preprocessor directives;</li> <li>added the <code>#warning</code> preprocessing directive;</li> <li>binary integer literals and appropriate formatting for input/output of binary integer numbers;</li> <li>digit separators with <code>'</code> (single quotation mark);</li> <li>removed conditional support for mixed wide and narrow string literal concatenation;</li> <li>added support for additional time bases, as well as <code>timespec_getres</code>, in <code>&lt;time.h&gt;</code>;</li> <li>added support for new interface <code>timegm</code> to retrieve the broken-down time, in <code>&lt;time.h&gt;</code>;</li> <li>zero-sized reallocations with <code>realloc</code> are undefined behavior;</li> <li>added <code>free_sized</code> and <code>free_aligned_sized</code> functions;</li> <li>added an <code>unreachable</code> feature which has undefined behavior if reached during program execution;</li> <li>added <code>printf</code> and <code>scanf</code> length modifiers for <code>intN_t</code>, <code>int_fastN_t</code>, <code>uintN_t</code>, and <code>uint_fastN_t</code></li> </ul>"},{"location":"feature/c/c90/","title":"ISO/IEC 9899:1990","text":""},{"location":"feature/c/c90/#language","title":"Language","text":"Identifier Value Description <code>c_const</code> <code>198912L</code> <code>const</code> type qualifier <code>c_empty_comment_replacement</code> <code>198912L</code> empty comment replaced by single space <code>c_function_prototypes</code> <code>198912L</code> function prototypes <code>c_long_double</code> <code>198912L</code> <code>long double</code> type <code>c_octal_escape_sequence</code> <code>198912L</code> octal escape sequences <code>c_read_only_literal_strings</code> <code>198912L</code> literal strings are read-only <code>c_signed</code> <code>198912L</code> <code>signed</code> type specifier <code>c_stringize</code> <code>198912L</code> <code>#</code> stringize preprocessor directive <code>c_tags</code> <code>198912L</code> tags for <code>struct</code> and <code>union</code> <code>c_token_pasting</code> <code>198912L</code> <code>##</code> token-pasting preprocessor directive <code>c_translation_limits</code> <code>198912L</code> minimum translation limits <code>c_variadic_functions</code> <code>198912L</code> variadic functions <code>c_void</code> <code>198912L</code> <code>void</code> type specifier <code>c_volatile</code> <code>198912L</code> <code>volatile</code> type qualifier"},{"location":"feature/c/c90/#library","title":"Library","text":"Identifier Value Description <code>c_lib_assert</code> <code>198912L</code> <code>&lt;assert.h&gt;</code> <code>c_lib_ctype</code> <code>198912L</code> <code>&lt;ctype.h&gt;</code> <code>c_lib_errno</code> <code>198912L</code> <code>&lt;errno.h&gt;</code> <code>c_lib_float</code> <code>198912L</code> <code>&lt;float.h&gt;</code> (freestanding) <code>c_lib_limits</code> <code>198912L</code> <code>&lt;limits.h&gt;</code> (freestanding) <code>c_lib_locale</code> <code>198912L</code> <code>&lt;locale.h&gt;</code> <code>c_lib_math</code> <code>198912L</code> <code>&lt;math.h&gt;</code> <code>c_lib_setjmp</code> <code>198912L</code> <code>&lt;setjmp.h&gt;</code> <code>c_lib_signal</code> <code>198912L</code> <code>&lt;signal.h&gt;</code> <code>c_lib_stdarg</code> <code>198912L</code> <code>&lt;stdarg.h&gt;</code> (freestanding) <code>c_lib_stddef</code> <code>198912L</code> <code>&lt;stddef.h&gt;</code> (freestanding) <code>c_lib_stdio</code> <code>198912L</code> <code>&lt;stdio.h&gt;</code> <code>c_lib_stdlib</code> <code>198912L</code> <code>&lt;stdlib.h&gt;</code> <code>c_lib_string</code> <code>198912L</code> <code>&lt;string.h&gt;</code> <code>c_lib_time</code> <code>198912L</code> <code>&lt;time.h&gt;</code>"},{"location":"feature/c/c90/#candidates","title":"Candidates","text":"<ul> <li>value-preserving arithmetic conversions, opposed to unsigned-preserving</li> <li>floating-point to integral conversion truncates towards zero</li> <li>allows single-precision floating-point arithmetic, opposed to always converting to double-precision</li> <li>illegal to assign function pointers to data pointers (and vice versa), must use an explicit cast</li> <li>stricter assignment compatibility between <code>struct</code> and <code>union</code></li> <li><code>struct</code> or <code>union</code> may be passed by value as arguments to functions</li> <li>absolute machine addresses must be explicitly cast before being used as <code>struct</code> or <code>union</code> pointers</li> <li>function definitions (requires identifiers for parameters)</li> <li>no empty declarations</li> <li>size of an array must be strictly-positive</li> <li>a value returned from <code>main()</code> is guaranteed to be used as the program's exit code</li> <li>values used in the controlling statements and labels of a switch can be of any integral type</li> <li>multi-character constants</li> <li>no cast as lvalue</li> </ul>"},{"location":"feature/c/c90/#omitted","title":"Omitted","text":"<ul> <li>no <code>long float</code> as <code>double</code></li> <li>no <code>$</code> in identifiers</li> <li>no whitespace in assignment operators</li> <li>preprocessor directives cannot be redefined</li> <li><code>+__STDC__+</code> macro</li> </ul>"},{"location":"feature/c/c95/","title":"ISO/IEC 9899:1990/AMD 1:1995","text":""},{"location":"feature/c/c95/#language","title":"Language","text":"Identifier Value Description <code>c_digraphs</code> <code>199409L</code> restricted character set support via digraphs"},{"location":"feature/c/c95/#library","title":"Library","text":"Identifier Value Description <code>c_lib_iso646</code> <code>199409L</code> <code>&lt;iso646.h&gt;</code> (freestanding) <code>c_lib_wchar</code> <code>199409L</code> <code>&lt;wchar.h&gt;</code> <code>c_lib_wctype</code> <code>199409L</code> <code>&lt;wctype.h&gt;</code>"},{"location":"feature/c/c95/#omitted","title":"Omitted","text":"<ul> <li>addition of predefined <code>+__STDC_VERSION__+</code> macro</li> </ul>"},{"location":"feature/c/c99/","title":"ISO/IEC 9899:1999","text":""},{"location":"feature/c/c99/#language","title":"Language","text":"Identifier Value Description <code>c_bool</code> `` [N587] boolean type <code>c_compound_literals</code> `` [N716] compound literals <code>c_designated_initializers</code> `` [N472] designated initializers <code>c_flexible_array_members</code> <code>199710L</code> [N791] flexible array members <code>c_hexadecimal_floating_constants</code> `` [N308] hexadecimal floating constants <code>c_idempotent_type_qualifiers</code> `` [N505] idempotent type qualifiers <code>c_inline</code> `` [N741, N709, N700] <code>inline</code> functions <code>c_line_comments</code> <code>199702L</code> [N644] <code>//</code> comments <code>c_long_long_int</code> `` [N601] <code>long long int</code> type <code>c_pragma_operator</code> <code>199610L</code> [N593, N634, N810] <code>_Pragma</code> operator <code>c_preprocessor_arithmetic</code> `` [N736] preprocessor arithmetic in <code>intmax_t</code> / <code>uintmax_t</code> <code>c_restrict</code> <code>199510L</code> [N448, N599] <code>restrict</code> type qualifier <code>c_translation_limits</code> `` [N590] increased minimum translation limits <code>c_unicode_escape_sequences</code> `` [N842] universal character names (<code>\\u</code> and <code>\\U</code>) <code>c_variable_length_arrays</code> <code>199706L</code> [N683] variable length arrays <code>c_variadic_macros</code> `` [N707] variadic macros (<code>__VA_ARGS__</code>)"},{"location":"feature/c/c99/#library","title":"Library","text":"Identifier Value Description <code>c_lib_complex</code> <code>199610L</code> [N620] <code>&lt;complex.h&gt;</code> <code>c_lib_fenv</code> `` [N513] <code>&lt;fenv.h&gt;</code> <code>c_lib_float</code> `` [N595, N619] additional floating-point characteristics in <code>&lt;float.h&gt;</code> <code>c_lib_inttypes</code> `` [N851] <code>&lt;inttypes.h&gt;</code> <code>c_lib_stdbool</code> `` [N587] <code>&lt;stdbool.h&gt;</code> <code>c_lib_stdint</code> `` [N851] <code>&lt;stdint.h&gt;</code> <code>c_lib_tgmath</code> `` [N693] <code>&lt;tgmath.h&gt;</code>"},{"location":"feature/c/c99/#candidates","title":"Candidates","text":"<ul> <li>boolean type in <code>&lt;stdbool.h&gt;</code> [N587]</li> <li>hexadecimal floating constants and <code>%a</code> and <code>%A</code> <code>printf</code>/<code>scanf</code> conversion specifiers [N308]</li> <li>specified width integer types and corresponding library functions in <code>&lt;inttypes.h&gt;</code> and <code>&lt;stdint.h&gt;</code> [N851]</li> <li>additional floating-point characteristics in <code>&lt;float.h&gt;</code> [N595, N619]</li> <li>the <code>long long int</code> type and library functions [N601]</li> <li> <p>extended integer types [N788, N698, N713, N602, N401]</p> </li> <li> <p>more precise aliasing rules via effective type [N640]</p> </li> <li>static and type qualifiers in parameter array declarators [N867]</li> <li>remove implicit int [N635, N661, N692, N722]</li> <li>reliable integer division [N617]</li> <li>extended identifiers [N717]</li> <li>remove implicit function declaration [N636]</li> <li>mixed declarations and statements [N740]</li> <li>new block scopes for selection and iteration statements [N868]</li> <li>integer constant type rules [N629]</li> <li>integer promotion rules [N725]</li> <li>the <code>vscanf</code> family of functions in <code>&lt;stdio.h&gt;</code> and <code>&lt;wchar.h&gt;</code> [N701]</li> <li>additional math library functions in <code>&lt;math.h&gt;</code> [???]</li> <li>treatment of error conditions by math library functions (math_errhandling) [???]</li> <li>ISO/IEC 60559 (also known as IEC 559 or IEEE 754 arithmetic) support [???]</li> <li>trailing comma allowed in enum declaration [N762]</li> <li><code>%lf</code> conversion specifier allowed in <code>printf</code> [N762]</li> <li>the <code>snprintf</code> family of functions in <code>&lt;stdio.h&gt;</code> [N645]</li> <li>empty macro arguments [N760, N570, N568]</li> <li>new structure type compatibility rules (tag compatibility) [N522]</li> <li>additional predefined macro names [N821]</li> <li>standard pragmas [N631]</li> <li><code>va_copy</code> macro [N671]</li> <li>additional <code>strftime</code> conversion specifiers [N733]</li> <li>deprecate <code>ungetc</code> at the beginning of a binary file [N703]</li> <li>remove deprecation of aliased array parameters [N686 ??]</li> <li>conversion of array to pointer not limited to lvalues [N835]</li> <li>relaxed constraints on aggregate and union initialization [N782]</li> <li>relaxed restrictions on portable header names [N772]</li> <li>return without expression not permitted in function that returns a value (and vice versa) [N739, N676]</li> </ul>"},{"location":"feature/c/c99/#omitted","title":"Omitted","text":"<ul> <li>[N611] <code>__func__</code> predefined identifier</li> <li>[N792] LIA compatibility annex</li> </ul>"},{"location":"feature/c/c99/#references","title":"References","text":"<ul> <li>[N874]</li> </ul>"},{"location":"feature/cpp/cpp03/","title":"ISO/IEC 14882:2003","text":"<ul> <li>Variable Initialization</li> </ul>"},{"location":"feature/cpp/cpp11/","title":"ISO/IEC 14882:2011","text":""},{"location":"feature/cpp/cpp11/#language-features","title":"Language Features","text":"<ul> <li>[N1653] C99 preprocessor</li> <li>[N1720] <code>static_assert</code></li> <li>[N1757] Right angle brackets</li> <li>[N1791] Extended friend declarations</li> <li>[N1811] <code>long long</code></li> <li>[N1984] <code>auto</code></li> <li>[N1986] Delegating constructors</li> <li>[N1987] <code>extern template</code></li> <li>[N2235] <code>constexpr</code></li> <li>[N2249] <code>char16_t</code> and <code>char32_t</code></li> <li>[N2255, N2518, N2984, N3142] Compiler support for type traits</li> <li>[N2258] Template aliases</li> <li>[N2341] <code>alignas</code></li> <li>[N2341] <code>alignof</code></li> <li>[N2346] Defaulted and deleted functions</li> <li>[N2347] Strongly-typed <code>enum</code></li> <li>[N2427] Atomic operations</li> <li>[N2431] <code>nullptr</code></li> <li>[N2437] Explicit conversion operators</li> <li>[N2439] ref-qualifiers</li> <li>[N2442] Unicode string literals</li> <li>[N2442] Raw string literals</li> <li>[N2535] Inline namespaces</li> <li>[N2540] Inheriting constructors</li> <li>[N2541] Trailing function return types</li> <li>[N2544] Unrestricted unions</li> <li>[N2242, N2555] Variadic templates</li> <li>[N2634] Expression SFINAE</li> <li>[N2657] Local and unnamed types as template parameters</li> <li>[N2659] Thread-local storage</li> <li>[N2660] Dynamic initialization and destruction with concurrency (magic statics)</li> <li>[N2670] Garbage Collection and Reachability-Based Leak Detection</li> <li>[N2672] Initializer lists</li> <li>[N2756] Non-static data member initializers</li> <li>[N2761] Attributes</li> <li>[N2764] Forward (opaque) <code>enum</code> declarations</li> <li>[N2765] User-defined literals</li> <li>[N2118, N2844, CWG1138] Rvalue references</li> <li>[N2550, N2658, N2927] Lambda expressions</li> <li>[N2930, N3271] Range-for loop</li> <li>[N3050] <code>noexcept</code></li> <li>[N3053] Defaulted move special member functions</li> <li>[N2928, N3206 N3272] override and final</li> <li>[N2343, N3276] <code>decltype</code></li> </ul>"},{"location":"feature/cpp/cpp11/#library-features","title":"Library Features","text":"<ul> <li>[N1429] Regular expressions library</li> <li>[N1836, N2240, N2244, N2255, N2342, N2984, N3142] Type traits</li> <li>[N1913, LWG1192] Member functions <code>cbegin</code>, <code>cend</code>, <code>crbegin</code>, and <code>crend</code> of containers</li> <li>[N2670] Garbage Collection and Reachability-Based Leak Detection (library support)</li> <li>[N2071, N2072] Money, Time, and hexfloat I/O manipulators</li> <li>[N2668] Disallowing COW (copy-on-write) <code>std::basic_string</code></li> </ul>"},{"location":"feature/cpp/cpp11/#references","title":"References","text":"<ul> <li>https://en.cppreference.com/w/cpp/11</li> <li>https://gcc.gnu.org/projects/cxx-status.html#cxx11</li> <li>https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html</li> <li>https://clang.llvm.org/cxx_status.html</li> <li>https://www.edg.com/features.html</li> </ul>"},{"location":"feature/cpp/cpp14/","title":"ISO/IEC 14882:2011","text":""},{"location":"feature/cpp/cpp14/#language-features","title":"Language Features","text":"<ul> <li>[N3323] Tweaked wording for contextual conversions</li> <li>[N3472] Binary literals</li> <li>[N3638] <code>decltype(auto)</code>, Return type deduction for normal functions</li> <li>[N3648] Initialized/Generalized lambda captures (init-capture)</li> <li>[N3649] Generic <code>lambda</code> expressions</li> <li>[N3651] Variable templates</li> <li>[N3652] Extended <code>constexpr</code></li> <li>[N3653] Aggregates with default member initializers</li> <li>[N3664] Omitting/extending memory allocations</li> <li>[N3760] <code>[[deprecated]]</code> attribute</li> <li>[N3778] Sized deallocation</li> <li>[N3781] Single quote as digit separator</li> </ul>"},{"location":"feature/cpp/cpp14/#library-features","title":"Library Features","text":"<ul> <li>[N3302] <code>constexpr</code> for <code>&lt;complex&gt;</code></li> <li>[N3421] Transparent operator functors</li> <li>[N3462] <code>std::result_of</code> and SFINAE</li> <li>[N3469] <code>constexpr</code> for <code>&lt;chrono&gt;</code></li> <li>[N3470] <code>constexpr</code> for <code>&lt;array&gt;</code></li> <li>[N3471] <code>constexpr</code> for <code>&lt;initializer_list&gt;</code>, <code>&lt;utility&gt;</code> and <code>&lt;tuple&gt;</code></li> <li>[N3545] Improved std::integral_constant</li> <li>[N3642] User-defined literals for <code>&lt;chrono&gt;</code> and <code>&lt;string&gt;</code></li> <li>[N3644] Null forward iterators</li> <li>[N3654] <code>std::quoted</code></li> <li>[N3656] <code>std::make_unique</code></li> <li>[N3657] Heterogeneous associative lookup</li> <li>[N3658] <code>std::integer_sequence</code></li> <li>[N3659] <code>std::shared_timed_mutex</code></li> <li>[N3668] <code>std::exchange</code></li> <li>[N3669] fixing <code>constexpr</code> member functions without <code>const</code></li> <li>[N3670] <code>std::get&lt;T&gt;()</code></li> <li>[N3671] Dual-Range std::equal, std::is_permutation, std::mismatch</li> </ul>"},{"location":"feature/cpp/cpp17/","title":"ISO/IEC 14882:2017","text":""},{"location":"feature/cpp/cpp17/#language-features","title":"Language Features","text":"<ul> <li>[N3922] DR11: New <code>auto</code> rules for direct-list-initialization</li> <li>[N3928] <code>static_assert</code> with no message</li> <li>[N4051] <code>typename</code> in a template template parameter</li> <li>[N4086] Removing trigraphs</li> <li>[N4230] Nested <code>namespace</code> definition</li> <li>[N4266] Attributes for namespaces and enumerators</li> <li>[N4267] u8 character literals</li> <li>[N4268] Allow constant evaluation for all non-type template arguments</li> <li>[N4295] Fold Expressions</li> <li>[P0036R0] Unary fold expressions and empty parameter packs</li> <li>[P0001R1] Remove Deprecated Use of the <code>register</code> Keyword</li> <li>[P0002R1] Remove Deprecated <code>operator++(bool)</code></li> <li>[P0012R1] Make exception specifications part of the type system</li> <li>[P0017R1] Aggregate classes with base classes</li> <li>[P0061R1] <code>__has_include</code> in preprocessor conditionals</li> <li>[P0136R1] DR11: New specification for inheriting constructors (DR1941 et al)</li> <li>[P0018R3] Lambda capture of <code>*this</code></li> <li>[P0138R2] Direct-list-initialization of enumerations</li> <li>[P0170R1] <code>constexpr</code> <code>lambda</code> expressions</li> <li>[P0184R0] Differing begin and end types in range-based for</li> <li>[P0188R1] <code>[[fallthrough]]</code> attribute</li> <li>[P0189R1] <code>[[nodiscard]]</code> attribute</li> <li>[P0212R1] <code>[[maybe_unused]]</code> attribute</li> <li>[P0245R1] Hexadecimal floating-point literals</li> <li>[P0028R4] Using attribute namespaces without repetition</li> <li>[P0035R4] Dynamic memory allocation for over-aligned data</li> <li>[P0091R3] Class template argument deduction</li> <li>[P0127R2] Non-type template parameters with <code>auto</code> type</li> <li>[P0135R1] Guaranteed copy elision</li> <li>[P0137R1] Replacement of class objects containing reference members</li> <li>[P0145R3] Stricter expression evaluation order</li> <li>[P0217R3] Structured Bindings</li> <li>[P0283R2] Ignore unknown attributes</li> <li>[P0292R2] constexpr if statements</li> <li>[P0305R1] init-statements for if and switch</li> <li>[P0386R2] Inline variables</li> <li>[P0003R5] Removing dynamic exception specifications</li> <li>[P0195R2] Pack expansions in using-declarations</li> <li>[P0522R0] DR98: Matching of template template-arguments excludes compatible templates</li> </ul>"},{"location":"feature/cpp/cpp17/#library-features","title":"Library Features","text":"<ul> <li>[N3911] <code>std::void_t</code></li> <li>[N4259] <code>std::uncaught_exceptions()</code></li> <li>[N4280] <code>std::size()</code>, <code>std::empty()</code> and <code>std::data()</code></li> <li>[N4387] Improving <code>std::pair</code> and <code>std::tuple</code></li> <li>[N4389] <code>std::bool_constant</code></li> <li>[N4508] <code>std::shared_mutex</code> (untimed)</li> <li>[P0006R0] Type traits variable templates</li> <li>[P0013R1] Logical operator type traits</li> <li>[P0024R2] Parallel algorithms and execution policies</li> <li>[P0025R1] <code>std::clamp()</code></li> <li>[P0154R1] Hardware interference size</li> <li>[P0185R1] (nothrow-)swappable traits</li> <li>[P0218R1] File system library (std::filesystem)</li> <li>[N3921, P0220R1] std::string_view</li> <li>[P0220R1] <code>std::any</code></li> <li>[P0220R1] <code>std::optional</code></li> <li>[P0220R1] Polymorphic memory resources</li> <li>[P0226R1] Mathematical special functions</li> <li>[P0063R3] Major portion of C11 standard library</li> <li>[P0083R3] Splicing Maps and Sets</li> <li>[P0084R2] return type of emplace* functions of some containers changed from void to reference</li> <li>[P0088R3] <code>std::variant</code></li> <li>[P0209R2] <code>std::make_from_tuple()</code></li> <li>[P0258R2] <code>std::has_unique_object_representations</code></li> <li>[P0295R0] <code>std::gcd()</code> and <code>std::lcm()</code></li> <li>[P0005R4, P0358R1] <code>std::not_fn</code></li> <li>[P0067R5] Elementary string conversions: <code>std::to_chars</code>/<code>std::from_chars</code></li> <li>[P0414R2] <code>std::shared_ptr</code> and <code>std::weak_ptr</code> with array support</li> <li>[P0156R2] <code>std::scoped_lock</code></li> <li>[P0298R3] <code>std::byte</code></li> <li>[LWG2911] <code>std::is_aggregate</code></li> <li>[LWG3657] DR17: <code>std::hash&lt;std::filesystem::path&gt;</code></li> </ul>"},{"location":"feature/cpp/cpp20/","title":"ISO/IEC 14882:2020","text":""},{"location":"feature/cpp/cpp20/#language-features","title":"Language Features","text":"<ul> <li>[P0409R2] Allow Lambda capture [=, this]</li> <li>[P0306R4, P1042R1] <code>__VA_OPT__</code></li> <li>[P0329R4] Designated initializers\u00a0[FTM]*</li> <li>[P0428R2] template-parameter-list for generic lambdas\u00a0[FTM]*</li> <li>[P0683R1] Default member initializers for bit-fields</li> <li>[P0702R1] Initializer list constructors in class template argument deduction</li> <li>[P0704R1] const&amp;-qualified pointers to members</li> <li>[P0734R0] Concepts\u00a0[FTM]*</li> <li>[P0315R4] Lambdas in unevaluated contexts</li> <li>[P0515R3] Three-way comparison operator\u00a0[FTM]*</li> <li>[P0588R1] DR11: Simplifying implicit lambda capture</li> <li>[P0614R1] init-statements for range-based for</li> <li>[P0624R2] Default constructible and assignable stateless lambdas</li> <li>[P0641R2] Type mismatch of defaulted special member functions</li> <li>[P0692R1] Access checking on specializations</li> <li>[P0846R0] ADL and function templates that are not visible</li> <li>[P0859R0] DR11: Specify when constexpr function definitions are needed for constant evaluation</li> <li>[P0479R5] Attributes <code>[[likely]]</code> and <code>[[unlikely]]</code></li> <li>[P0634R3] Make typename more optional</li> <li>[P0780R2] Pack-expansions in lambda init-captures\u00a0[FTM]*</li> <li>[P0840R2] Attribute <code>[[no_unique_address]]</code></li> <li>[P0848R3] Conditionally Trivial Special Member Functions\u00a0[FTM]*</li> <li>[P0961R1] DR17: Relaxing the structured bindings customization point finding rules</li> <li>[P0962R1] DR11: Relaxing the range-for loop customization point finding rules</li> <li>[P0969R0] DR17: Allow structured bindings to accessible members</li> <li>[P0722R3] Destroying operator delete\u00a0[FTM]*</li> <li>[P0732R2] Class types in Non-type template parameters</li> <li>[P0806R2] Deprecate implicit capture of this via [=]</li> <li>[P0892R2] <code>explicit(bool)</code>\u00a0[FTM]*</li> <li>[P0941R2] Integrating feature-test macros</li> <li>[P1008R1] Prohibit aggregates with user-declared constructors</li> <li>[P1064R0] constexpr virtual function\u00a0[FTM]*</li> <li>[P1120R0] Consistency improvements for comparisons</li> <li>[P0482R6] char8_t\u00a0[FTM]*</li> <li>[P0595R2] std::is_constant_evaluated()</li> <li>[P1002R1] constexpr try-catch blocks</li> <li>[P1073R3] Immediate functions (consteval)\u00a0[FTM]*</li> <li>[P1094R2] Nested inline namespaces</li> <li>[P1141R2] Yet another approach for constrained declarations</li> <li>[P1236R1] Signed integers are two's complement</li> <li>[P1327R1] dynamic_cast and polymorphic typeid in constant expressions</li> <li>[P1330R0] Changing the active member of a union inside constexpr\u00a0[FTM]*</li> <li>[P0912R5] Coroutines\u00a0[FTM]*</li> <li>[P0960R3] Parenthesized initialization of aggregates\u00a0[FTM]*</li> <li>[P1009R2] DR11: Array size deduction in new-expressions</li> <li>[P1103R3] Modules\u00a0[FTM]*</li> <li>[P1041R4 P1139R2] Stronger Unicode requirements</li> <li>[P1185R2] <code>&lt;=&gt;</code> <code>!=</code> <code>==</code></li> <li>[P1286R2] DR11: Explicitly defaulted functions with different exception specifications</li> <li>[P1091R3, P1381R1] Lambda capture and storage class specifiers of structured bindings</li> <li>[P0388R4] Permit conversions to arrays of unknown bound</li> <li>[P0784R7] constexpr container operations\u00a0[FTM]*</li> <li>[P1152R4] Deprecating some uses of volatile</li> <li>[P1143R2] constinit\u00a0[FTM]*</li> <li>[P1161R3] Deprecate comma operator in subscripts</li> <li>[P1301R4] <code>[[nodiscard]]</code> with message</li> <li>[P1331R2] Trivial default initialization in constexpr functions</li> <li>[P1668R1] Unevaluated asm-declaration in constexpr functions</li> <li>[P1099R5] using enum\u00a0[FTM]*</li> <li>[P1186R3] Synthesizing Three-way comparison for specified comparison category</li> <li>[P1771R1] DR17: <code>[[nodiscard]]</code> for constructors</li> <li>[P1814R0] class template argument deduction for alias templates\u00a0[FTM]*</li> <li>[P1816R0 P2082R1] class template argument deduction for aggregates</li> <li>[P1825R0] DR11: Implicit move for more local objects and rvalue references</li> <li>[P1946R0] Allow defaulting comparisons by value</li> <li>[P1959R0] Remove <code>std::weak_equality</code> and <code>std::strong_equality</code></li> <li>[P1907R1] Inconsistencies with non-type template parameters\u00a0[FTM]*</li> <li>[P0593R6] DR98: Pseudo-destructors end object lifetimes</li> <li>[P1957R2] DR11: Converting from <code>T*</code> to <code>bool</code> should be considered narrowing</li> </ul>"},{"location":"feature/cpp/cpp20/#library-features","title":"Library Features","text":"<ul> <li>[P0463R1] <code>std::endian</code></li> <li>[P0674R1] Extending <code>std::make_shared()</code> to support arrays</li> <li>[P0020R6] Floating-point atomic</li> <li>[P0053R7] Synchronized buffered (<code>std::basic_osyncstream</code>)</li> <li>[P0202R3] constexpr for <code>&lt;algorithm&gt;</code> and <code>&lt;utility&gt;</code></li> <li>[P0415R1] More constexpr for <code>&lt;complex&gt;</code></li> <li>[P0439R0] Make <code>std::memory_order</code> a scoped enumeration</li> <li>[P0457R2] String prefix and suffix checking: string(_view) ::starts_with/ends_with</li> <li>[P0768R1] Library support for <code>operator&lt;=&gt;</code> <code>&lt;compare&gt;</code></li> <li>[P0550R2] <code>std::remove_cvref</code></li> <li>[P0600R1] <code>[[nodiscard]]</code> in the standard library</li> <li>[P0616R0] Using <code>std::move</code> in numeric algorithms</li> <li>[P0653R2] Utility to convert a pointer to a raw pointer</li> <li>[P0718R2] Atomic <code>std::shared_ptr</code> and <code>std::weak_ptr</code></li> <li>[P0122R7] <code>std::span</code></li> <li>[P0355R7] Calendar and timezone</li> <li>[P0754R2] <code>&lt;version&gt;</code></li> <li>[P0809R0] Comparing unordered containers</li> <li>[P0858R0] ConstexprIterator requirements</li> <li>[P0966R1] <code>std::basic_string::reserve()</code> should not shrink</li> <li>[P0528R3] Atomic Compare-And-Exchange with padding bits</li> <li>[P0019R8] <code>std::atomic_ref</code></li> <li>[P0458R2] <code>contains()</code> member function of associative containers, e.g. <code>std::map::contains()</code></li> <li>[P0475R1] DR11: Guaranteed copy elision for piecewise construction</li> <li>[P0476R2] <code>std::bit_cast()</code></li> <li>[P0556R3, P1956R1] Integral power-of-2 operations:  <code>std::bit_ceil()</code>, <code>std::bit_floor()</code>, <code>std::bit_width()</code>, <code>std::has_single_bit()</code></li> <li>[P0646R1] Improving the return value of erase-like algorithms</li> <li>[P0722R3] <code>std::destroying_delete</code></li> <li>[P0758R1] <code>std::is_nothrow_convertible</code></li> <li>[P0769R2] Add <code>std::shift_left</code>/<code>std::shift_right</code> to <code>&lt;algorithm&gt;</code></li> <li>[P0879R0] Constexpr for <code>std::swap()</code> and swap related functions</li> <li>[P0887R1] <code>std::type_identity</code></li> <li>[P0898R3] Concepts library</li> <li>[P1023R0] constexpr comparison operators for <code>std::array</code></li> <li>[P0318R1] <code>std::unwrap_ref_decay</code> and <code>std::unwrap_reference</code></li> <li>[P0356R5] <code>std::bind_front()</code></li> <li>[P0357R3] <code>std::reference_wrapper</code> for incomplete types</li> <li>[P0487R1] Fixing <code>operator&gt;&gt;(basic_istream&amp;, CharT*)</code></li> <li>[P0482R6] Library support for <code>char8_t</code></li> <li>[P0591R4] Utility functions to implement uses-allocator construction</li> <li>[P0602R4] DR17: <code>std::variant</code> and <code>std::optional</code> should propagate copy/move triviality</li> <li>[P0608R3] DR17: A sane <code>std::variant</code> converting constructor</li> <li>[P0771R1] <code>std::function</code>'s move constructor should be noexcept</li> <li>[P0896R4] The One Ranges Proposal</li> <li>[P0919R3, P1690R1] Heterogeneous lookup for unordered containers</li> <li>[P0972R0]  <code>zero()</code>, <code>min()</code>, and <code>max()</code> should be <code>noexcept</code> <li>[P1006R1] <code>constexpr</code> in <code>std::pointer_traits</code></li> <li>[P1007R3] <code>std::assume_aligned()</code></li> <li>[P1020R1, P1973R1] Smart pointer creation with default initialization (e.g. <code>make_unique_for_overwrite</code>)</li> <li>[P1032R1] Misc <code>constexpr</code> bits</li> <li>[P1085R2] Remove comparison operators of <code>std::span</code></li> <li>[P1165R1] Make stateful allocator propagation more consistent for <code>operator+(basic_string)</code></li> <li>[P1209R0, P1115R3] Consistent container erasure, e.g. <code>std::erase(std::vector)</code>, or <code>std::erase_if(std::map)</code></li> <li>[P1502R1] Standard library header units</li> <li>[P0339R6] <code>polymorphic_allocator&lt;&gt;</code> as a vocabulary type</li> <li>[P1001R2] <code>std::execution::unseq</code></li> <li>[P0811R3] <code>std::lerp()</code> and <code>std::midpoint()</code></li> <li>[P1024R3] Usability enhancements for <code>std::span</code></li> <li>[P1164R1] DR17: Make <code>create_directory()</code> intuitive</li> <li>[P1227R2] <code>std::ssize()</code> and unsigned extent for <code>std::span</code></li> <li>[P1357R1] Traits for (un)bounded arrays</li> <li>[P0325R4] <code>std::to_array()</code></li> <li>[P0408R7] Efficient access to <code>std::basic_stringbuf</code>\u2019s buffer</li> <li>[P0466R5] Layout-compatibility and pointer-interconvertibility traits</li> <li>[P0553R4] Bit operations: std::  rotl(), rotr(), countl_zero(), countl_one(), countr_zero(), countr_one(), popcount()</li> <li>[P0631R8] Mathematical constants</li> <li>[P0645R10] Text formatting</li> <li>[P0660R10] <code>std::stop_token</code> and <code>std::jthread</code></li> <li>[P0784R7] <code>constexpr std::allocator</code> and related utilities</li> <li>[P0980R1] <code>constexpr std::string</code></li> <li>[P1004R2] <code>constexpr std::vector</code></li> <li>[P1035R7] Input range adaptors</li> <li>[P1065R2] constexpr <code>std::invoke()</code> and related utilities</li> <li>[P1135R6] Atomic waiting and notifying, <code>std::counting_semaphore</code>, <code>std::latch</code> and <code>std::barrier</code></li> <li>[P1208R6] <code>std::source_location</code></li> <li>[P1614R2] Adding <code>&lt;=&gt;</code> to the standard library</li> <li>[P0883R2] <code>constexpr</code> default constructor of <code>std::atomic</code> and <code>std::atomic_flag</code></li> <li>[P1645R1] <code>constexpr</code> for numeric algorithms</li> <li>[P0586R2] Safe integral comparisons</li>"},{"location":"feature/cpp/cpp23/","title":"ISO/IEC 14882:2023","text":""},{"location":"feature/cpp/cpp23/#language-features","title":"Language Features","text":"<ul> <li>[P0330R8] Literal suffix for (signed) size_t</li> <li>[P1102R2] Make () more optional for lambdas</li> <li>[P1938R3] if consteval</li> <li>[P2186R2] Removing Garbage Collection Support</li> <li>[P1401R5] Narrowing contextual conversions in static_assert and constexpr if</li> <li>[P2223R2] Trimming whitespaces before line splicing</li> <li>[P1847R4] Make declaration order layout mandated</li> <li>[P2201R1] Removing mixed wide string literal concatenation</li> <li>[P0847R7] Explicit object member functions (deducing this)</li> <li>[P0849R8] auto(x)and auto{x}</li> <li>[P2334R1] #elifdefand #elifndef</li> <li>[P2242R3] Non-literal variables (and labels and gotos) in constexpr functions</li> <li>[P2316R2] Consistent character literal encoding</li> <li>[P2314R4] Character sets and encodings</li> <li>[P2360R0] Extend init-statement (of forloop) to allow alias-declaration</li> <li>[P2128R6] Multidimensional subscript operator</li> <li>[P2173R1] Attributes on lambdas</li> <li>[P2437R1] #warning</li> <li>[P2362R3] Remove non-encodable wide character literals and multicharacter wide character literals</li> <li>[P2324R2] Labels at the end of compound statements</li> <li>[P2290R3] Delimited escape sequences</li> <li>[P2071R2] Named universal character escapes</li> <li>[P2448R2] Relaxing some constexpr restrictions</li> <li>[P2266R3] Simpler implicit move</li> <li>[P1169R4] <code>static operator()</code></li> <li>[P1467R9] Requirements for optional extended floating-point types</li> <li>[P2582R1] Class template argument deduction from inherited constructors</li> <li>[P1774R8] Attribute <code>[[assume]]</code></li> <li>[P2295R6] Support for UTF-8 as a portable source file encoding</li> <li>[P2589R1] <code>static operator[]</code></li> <li>[P2647R1] Permitting static constexpr variables in constexpr functions</li> <li>[P2718R0] Extending the lifetime of temporaries in range-based for loop initializer</li> <li>[P2036R3, P2579R0] DR11: Change scope of lambda trailing-return-type</li> <li>[P2615R1] DR20: Meaningful exports</li> <li>[P2564R0] DR20: consteval needs to propagate up</li> <li>[P1949R7] DR98: C++ Identifier Syntax using Unicode Standard Annex 31</li> <li>[P2156R1] DR11: Allow duplicate attributes</li> <li>[P2493R0] DR20: Adjusting the value of feature-test macro <code>__cpp_concepts</code></li> <li>[P2460R2] DR98: Relax requirements on <code>wchar_t</code> to match existing practices</li> <li>[P2280R4] DR11: Using unknown pointers and references in constant expressions</li> <li>[P2468R2] DR20: The Equality Operator You Are Looking For</li> <li>[P2513R4] DR20: <code>char8_t</code> Compatibility and Portability Fix</li> <li>[CWG2518] DR98/11: Clarify reporting of diagnostic directives and allow <code>static_assert</code> of non-value-dependent expressions in a template context</li> </ul>"},{"location":"feature/cpp/cpp23/#library-features","title":"Library Features","text":"<ul> <li>[P0881R7, P2301R1] Stacktrace library</li> <li>[P0943R6] <code>&lt;stdatomic.h&gt;</code></li> <li>[P1048R1] <code>std::is_scoped_enum</code></li> <li>[P1679R3] <code>std::basic_string::contains()</code>, <code>std::basic_string_view::contains()</code></li> <li>[P1682R3] <code>std::to_underlying</code></li> <li>[P2212R2] Relaxing requirements for <code>time_point&lt;&gt;::clock</code></li> <li>[P0401R6] Providing size feedback in the Allocator interface</li> <li>[P0448R4] <code>&lt;spanstream&gt;</code>: string-stream with std::span-based buffer</li> <li>[P1132R8] <code>std::out_ptr()</code>, <code>std::inout_ptr()</code></li> <li>[P1328R1] constexpr <code>type_info::operator==()</code></li> <li>[P1425R4] Iterator pair constructors for <code>std::stack</code> and <code>std::queue</code></li> <li>[P1518R2] Non-deduction context for allocators in container deduction guides</li> <li>[P1659R3] <code>ranges::starts_with()</code> and <code>ranges::ends_with()</code></li> <li>[P2166R1] Prohibiting <code>std::basic_string</code> and <code>std::basic_string_view</code> construction from <code>nullptr</code></li> <li>[P2136R3] <code>std::invoke_r()</code></li> <li>[P1989R2] Range constructor for <code>std::basic_string_view</code></li> <li>[P1951R1] Default template arguments for <code>std::pair</code>'s forwarding constructor</li> <li>[P2186R2] Remove Garbage Collection and Reachability-Based Leak Detection (library support)</li> <li>[P2321R2] zip: <code>views::zip</code>, <code>views::zip_transform</code>, <code>views::adjacent</code>, and <code>views::adjacent_transform</code></li> <li>[P2077R3] Heterogeneous erasure overloads for associative containers</li> <li>[P1272R4] <code>std::byteswap()</code></li> <li>[P1147R1] Printing <code>volatile T*</code></li> <li>[P1072R10] <code>basic_string::resize_and_overwrite()</code></li> <li>[P0798R8] Monadic operations for <code>std::optional</code></li> <li>[P0288R9] <code>std::move_only_function</code></li> <li>[P2401R0] Add a conditional <code>noexcept</code> specification to <code>std::exchange</code></li> <li>[P2251R1] Require <code>std::span</code> &amp; <code>std::basic_string_view</code> to be TriviallyCopyable</li> <li>[P2340R1] Clarifying the status of the \u201cC headers\u201d</li> <li>[P0323R12, P2549R1] <code>&lt;expected&gt;</code></li> <li>[P0533R9] <code>constexpr</code> for <code>&lt;cmath&gt;</code> and <code>&lt;cstdlib&gt;</code></li> <li>[P0627R6] <code>std::unreachable()</code></li> <li>[P1413R3] Deprecating <code>std::aligned_storage</code> and <code>std::aligned_union</code></li> <li>[P2255R2] std::reference_constructs_from_temporary &amp; std::reference_converts_from_temporary</li> <li>[P2273R3] constexpr std::unique_ptr</li> <li>[P1206R7] Constructing containers and strings from ranges with ranges::to(), tagged constructors, insert and assign member functions</li> <li>[P2387R3] Pipe support for user-defined range adaptors (ranges::range_adaptor_closure, std::bind_back)</li> <li>[P2440R1] ranges::iota(), ranges::shift_left(), and ranges::shift_right()</li> <li>[P2441R2] views::join_with</li> <li>[P2442R1] views::chunk and views::slide</li> <li>[P2443R1] views::chunk_by</li> <li>[P0009R18 P2599R2 P2604R0 P2613R1 P2763R1] std::mdspan: a non-owning multidimensional array reference</li> <li>[P0429R9]  <li>[P1222R4]  <li>[P1223R5] ranges::find_last(), ranges::find_last_if(), and ranges::find_last_if_not()</li> <li>[P1642R11] Freestanding Library: Easy , , and  <li>[P1899R3] views::stride</li> <li>[P2165R4] Compatibility between std::tuple and tuple-like objects</li> <li>[P2278R4] Rectifying constant iterators, sentinels, and ranges. views::as_const</li> <li>[P2286R8] Formatting Ranges</li> <li>[P2585R1] Improve default container formatting</li> <li>[P2093R14 P2539R4] Formatted output library  <li>[P2693R1] Formatting std::id and std::stacktrace</li> <li>[P2291R3] constexpr for integral overloads of std::to_chars() and std::from_chars().</li> <li>[P2302R4] ranges::contains() and ranges::contains_subrange()</li> <li>[P2322R6] Ranges fold algorithms</li> <li>[P2374R4, P2540R1] views::cartesian_product</li> <li>[P2404R3] Adding move-only types support for comparison concepts (equality_comparable, totally_ordered, three_way_comparable)</li> <li>[P2408R5] Ranges iterators as inputs to non-ranges algorithms</li> <li>[P2417R2] constexpr std::bitset</li> <li>[P2438R2] basic_string::substr() &amp;&amp;</li> <li>[P2446R2] views::as_rvalue</li> <li>[P2465R3] Standard Library Modules</li> <li>[P2445R1] std::forward_like()</li> <li>[P2467R1] Support exclusive mode for std::fstream</li> <li>[P2474R2] views::repeat</li> <li>[P2494R2] Relaxing range adaptors to allow for move-only types</li> <li>[P2499R0] std::basic_string_view range constructor should be explicit</li> <li>[P2502R2, P2787R0] std::generator: synchronous coroutine generator for ranges</li> <li>[P2517R1] Add a conditional noexcept specification to std::apply</li> <li>[P2590R2, P2679R2] Explicit lifetime management (std::start_lifetime_as)</li> <li>[P2419R2] Clarify handling of encodings in localized formatting of chrono types</li> <li>[P2520R0] std::move_iterator should not always be input_iterator</li> <li>[LWG3617] Deduction guides update for explicit object parameter call operators</li> <li>[P1169R4] Deduction guides update for static operator()</li> <li>[P1467R9] Standard names and library support for extended floating-point types</li> <li>[P2505R5] Monadic operations for std::expected</li> <li>[P2164R9] views::enumerate</li> <li>[P2674R1] std::is_implicit_lifetime</li> <li>[P2655R3] std::common_reference_t of std::reference_wrapper should be a reference type</li> <li>[P2652R2] Disallowing user specialization of std::allocator_traits</li> <li>[P2614R2] Deprecating std::numeric_limits::has_denorm</li> <li>[P2711R1] Making Multi-Param Constructors Of views explicit</li> <li>[P2609R3] DR20: Relaxing Ranges Just A Smidge</li> <li>[P2770R0] DR20: Stashing Stashing Iterators For Proper Flattening</li> <li>[P2162R2] DR17: std::visit() for classes derived from std::variant</li> <li>[P2017R1] DR20: Conditionally borrowed ranges</li> <li>[P2259R1] DR20: Repairing input range adaptors and std::counted_iterator</li> <li>[P2328R1] DR20: views::join should join all views of ranges</li> <li>[P2325R3] DR20: view does not require default_initializable</li> <li>[P2281R1] DR20: Range adaptor objects bind arguments by value</li> <li>[P2231R1] DR20: constexpr for std::optional and std::variant</li> <li>[P2210R2] DR20: views::lazy_split and redesigned views::split</li> <li>[P2432R1] DR20: Fix ranges::istream_view</li> <li>[P2415R2] DR20: view with ownership</li> <li>[P2372R3] DR20: Fixing locale handling in chrono formatters</li> <li>[P2393R1] DR20: Cleaning up integer-class types</li> <li>[P2216R3] DR20: std::format() improvements</li> <li>[P2418R2] DR20: Add support for non-const-formattable types to std::format</li> <li>[P2508R1] DR20: std::basic_format_string</li> <li>[P2602R2] DR20: Poison Pills are Too Toxic</li> <li>[P2572R1] DR20: std::format fill character allowances</li> <li>[P2675R1] DR20: Improving std::format's width estimation</li> <li>[P2588R3] DR20: std::barrier's phase completion guarantees</li>"},{"location":"feature/cpp/cpp26/","title":"C++26","text":""},{"location":"feature/cpp/cpp26/#language-features","title":"Language Features","text":"<ul> <li>[P2621R3] DR98: Removing undefined behavior from lexing</li> <li>[P1854R4] DR98: Making non-encodable string literals ill-formed</li> <li>[P2361R6] Unevaluated strings</li> <li>[P2558R2] Adding <code>@</code>, <code>$</code>, and <code>`</code> to the basic character set</li> <li>[P2738R1] <code>constexpr</code> cast from <code>void*</code></li> <li>[P2552R3] DR20: On the ignorability of standard attributes</li> <li>[P2752R3] DR11: Static storage for braced initializers</li> <li>[P2741R3] User-generated static_assert messages</li> <li>[P2169R4] Placeholder variables with no name</li> <li>[P2662R3] Pack indexing</li> <li>[P2864R2] Removing deprecated arithmetic conversion on enumerations</li> <li>[P2308R1] DR11/20: Template parameter initialization</li> <li>[P2748R5] Disallow binding a returned reference to a temporary</li> <li>[P0609R3] Attributes for structured bindings</li> <li>[P2795R5] Erroneous behavior for uninitialized reads</li> <li>[P2573R2] Err:50</li> <li>[P2893R3] Variadic friends</li> <li>[P3106R1] DR98: Clarifying rules for brace elision in aggregate initialization</li> <li>[P3034R1] DR20: Disallow module declarations to be macros</li> <li>[P2809R3] DR11: Trivial infinite loops are not undefined behavior</li> <li>[P2747R2] constexpr placement new</li> <li>[P0963R3] Structured binding declaration as a condition</li> <li>[P2963R3] Ordering of constraints involving fold expressions</li> <li>[P3144R2] Deleting a pointer to an incomplete type should be ill-formed</li> <li>[P1061R10] Structured bindings can introduce a pack</li> <li>[P2686R5] <code>constexpr</code> structured bindings and references to <code>constexpr</code> variables</li> <li>[P3068R6] <code>constexpr</code> exceptions</li> <li>[P3176R1] Oxford variadic comma</li> <li>[P2865R5] Removing deprecated array comparisons</li> </ul>"},{"location":"feature/cpp/cpp26/#library-features","title":"Library Features","text":"<ul> <li>[P2497R0] Testing for success or failure of <code>&lt;charconv&gt;</code> functions</li> <li>[P1885R12, P2862R1] <code>std::text_encoding</code>: text encodings identification</li> <li>[P2587R3] Arithmetic overloads of <code>std::to_string</code> and <code>std::to_wstring</code> use <code>std::format</code></li> <li>[P2757R3] Type checking format args</li> <li>[P2510R3] Formatting pointers</li> <li>[P2592R3] Hashing support for std::chrono value classes</li> <li>[P2545R4] Read-Copy Update</li> <li>[P2530R3] Hazard Pointers</li> <li>[P2538R1] ADL-proof std::projected</li> <li>[P2562R1] constexpr stable sorting</li> <li>[P2637R3] Member visit</li> <li>[P2641R4] <code>std::is_within_lifetime</code></li> <li>[P2363R5] Extending associative containers with the remaining heterogeneous overloads</li> <li>[P1901R2] Enabling the use of <code>std::weak_ptr</code> as keys in unordered associative containers</li> <li>[P1759R6] Native handles in file streams</li> <li>[P2495R3] Interfacing string streams with <code>std::string_view</code></li> <li>[P2697R1] Interfacing <code>std::bitset</code> with <code>std::string_view</code></li> <li>[P1383R2] More constexpr for <code>&lt;cmath&gt;</code> and <code>&lt;complex&gt;</code></li> <li>[P2734R0] Adding the new 2022 SI prefixes on ratios: <code>std::quecto</code>, <code>std::ronto</code>, <code>std::ronna</code>, and <code>std::quetta</code></li> <li>[P0792R14] <code>std::function_ref</code>: type-erased callable reference</li> <li>[P2548R6] <code>std::copyable_function</code></li> <li>[P2714R1] <code>std::bind_front</code>, <code>std::bind_back</code>, and <code>std::not_fn</code> to NTTP callables</li> <li>[P2630R4, P3355R1] <code>std::submdspan()</code></li> <li>[P2013R5] Freestanding Language: Optional <code>::operator new</code></li> <li>[P0543R3] Saturation Arithmetic</li> <li>[P2546R5, P2810R3] <code>&lt;debugging&gt;</code>: Debugging Support</li> <li>[P1673R13, P3050R2, P3222R0] <code>&lt;linalg&gt;</code>: A free function linear algebra interface based on the BLAS</li> <li>[P2264R7] Making <code>assert()</code> macro user friendly</li> <li>[P2918R2] Runtime format strings</li> <li>[P2447R6] <code>std::span</code> over an initializer list</li> <li>[P2821R5] <code>std::span::at()</code></li> <li>[P2819R2] Added <code>tuple</code> protocol to <code>std::complex</code></li> <li>[P0952R2] A new specification for <code>std::generate_canonical</code></li> <li>[P2868R3] Removing deprecated typedef <code>std::allocator::is_always_equal</code></li> <li>[P2870R3] Removing function overload of <code>std::basic_string::reserve()</code> that takes no argument</li> <li>[P2871R3] Removing deprecated Unicode conversion facets (<code>&lt;codecvt&gt;</code>)</li> <li>[P2937R0] Freestanding: removing std::strtok</li> <li>[P2407R5] Freestanding Library: Partial Classes</li> <li>[P2833R2] Freestanding Library: inout expected span</li> <li>[P2836R1, P2950R0] DR23: std::basic_const_iterator should follow its underlying type\u2019s convertibility</li> <li>[P2905R2] DR20: std::make_format_args now accepts only lvalue references instead of forwarding references</li> <li>[P2909R4] DR20: Fix formatting of code units as integers</li> <li>[P2542R8] views::concat</li> <li>[P2591R5] Concatenation of strings and string views</li> <li>[P2248R8, P3217R0] Enabling list-initialization for algorithms</li> <li>[P1068R11] <code>std::ranges::generate_random</code></li> <li>[P2944R3] Comparisons for <code>std::reference_wrapper</code></li> <li>[P2642R6] Padded mdspan layouts</li> <li>[P3029R1] New CTAD for <code>std::span</code> and <code>std::mdspan</code> with integral constants</li> <li>[P0493R5] Atomic maximum and minimum</li> <li>[P2845R8] <code>std::formatter&lt;std::filesystem::path&gt;</code></li> <li>[P3142R0] Printing Blank Lines with <code>std::println()</code></li> <li>[P2875R4] Undeprecate <code>std::polymorphic_allocator::destroy</code></li> <li>[P2867R2] Removing deprecated <code>strstreams</code></li> <li>[P2869R4] Removing deprecated <code>std::shared_ptr</code> Atomic Access APIs</li> <li>[P2872R3] Removing <code>std::wstring_convert</code></li> <li>[P3107R5 P3235R3] DR23: Permit an efficient implementation of <code>std::print</code></li> <li>[P2300R10 P3396R0] Execution library</li> <li>[P0843R14] <code>std::inplace_vector</code>: dynamically-resizable vector with fixed capacity</li> <li>[P2075R6] <code>std::philox_engine</code>: counter-based random number engine</li> <li>[P3168R2] <code>std::optional</code> range support</li> <li>[P2985R0] <code>std::is_virtual_base_of</code>: type trait for detecting virtual base classes</li> <li>[P2389R2] <code>std::dims</code> for std::mdspan</li> <li>[P2968R2] DR11: Formal specification of the type of <code>std::ignore</code></li> <li>[P2997R1] DR20: Removing the common reference requirement from the indirectly invocable concepts</li> <li>[P3247R2] Deprecating <code>std::is_trivial</code> and <code>std::is_trivial_v</code></li> <li>[P3136R1] DR20: Algorithm function objects</li> <li>[P3138R5] <code>views::cache_latest</code></li> <li>[P3379R1] Constraining std::expected equality operators</li> <li>[P2897R7] <code>std::aligned_accessor</code></li> <li>[P2835R7] <code>std::atomic_ref::address()</code></li> <li>[P3323R1] DR11/20: cv-qualified types in <code>std::atomic</code> and <code>std::atomic_ref</code></li> <li>[P3309R3] <code>constexpr</code> <code>std::atomic</code> and <code>std::atomic_ref</code></li> <li>[P3508R0, P3369R0] <code>constexpr</code> for specialized memory algorithms</li> <li>[P3370R1] Added new library headers from C23</li> <li>[P1928R15] <code>std::simd</code>: data-parallel types</li> <li>[P3325R5] A utility for creating execution environments</li> <li>[P3068R6] <code>constexpr</code> for exception types, e.g. <code>std::bad_alloc</code>, <code>std::bad_cast</code> etc.</li> </ul>"},{"location":"feature/cpp/cpp98/","title":"ISO/IEC 14882:1998","text":""},{"location":"feature/cpp/macros/","title":"C++ Feature Test Macros","text":""},{"location":"feature/cpp/macros/#language","title":"Language","text":"Macro Values Papers <code>__cpp_deleted_function</code> <code>202403</code> [P2573R2] <code>__cpp_aggregate_bases</code> <code>201603</code> [P0017R1] <code>__cpp_aggregate_nsdmi</code> <code>201304</code> [N3653] <code>__cpp_aggregate_paren_init</code> <code>201902</code> [P0960R3] <code>__cpp_alias_templates</code> <code>200704</code> [N2258] <code>__cpp_aligned_new</code> <code>201606</code> [P0035R4] <code>__cpp_attributes</code> <code>200809</code> [N2761] <code>__cpp_binary_literals</code> <code>201304</code> [N3472] <code>__cpp_capture_star_this</code> <code>201603</code> [P0018R3] <code>__cpp_char8_t</code> <code>201811</code><code>202207</code> [P0482R6][P2513R3] <code>__cpp_concepts</code> <code>201707</code><code>201811</code><code>201907</code><code>202002</code> [P0734R0][P1084R2][P1452R2][P0848R3] <code>__cpp_conditional_explicit</code> <code>201806</code> [P0892R2] <code>__cpp_consteval</code> <code>201811</code><code>202211</code> [P1073R3][P2564R3] <code>__cpp_constexpr</code> <code>200704</code><code>201304</code><code>201603</code><code>201806</code><code>201811</code><code>201907</code><code>202002</code><code>202110</code><code>202207</code><code>202211</code><code>202306</code> [N2235][N3652][P0170R1][P1064R0][P1002R1, P1327R1][P1331R2, P1668R1][P1330R0][P2242R3][P2448R2][P2647R1][P2738R1] <code>__cpp_constexpr_dynamic_alloc</code> <code>201907</code> [P0784R7] <code>__cpp_constexpr_in_decltype</code> <code>201711</code> [P0859R0] <code>__cpp_constinit</code> <code>201907</code> [P1143R2] <code>__cpp_decltype</code> <code>200707</code> [N2343] <code>__cpp_decltype_auto</code> <code>201304</code> [N3638] <code>__cpp_deduction_guides</code> <code>201606</code><code>201611</code><code>201703</code><code>201907</code> [P0091R3][P0512R0][P0620R0][P1814R0, P1816R0] <code>__cpp_delegating_constructors</code> <code>200604</code> [N1986] <code>__cpp_designated_initializers</code> <code>201707</code> [P0329R4] <code>__cpp_enumerator_attributes</code> <code>201411</code> [N4266] <code>__cpp_exceptions</code> <code>199711</code> <code>__cpp_explicit_this_parameter</code> <code>202110</code> [P0847R7] <code>__cpp_fold_expressions</code> <code>201411</code><code>201603</code> [N4295][P0036R0] <code>__cpp_generic_lambdas</code> <code>201304</code><code>201707</code> [N3649][P0428R2] <code>__cpp_guaranteed_copy_elision</code> <code>201606</code> [P0135R1] <code>__cpp_hex_float</code> <code>201603</code> [P0245R1] <code>__cpp_if_consteval</code> <code>202106</code> [P1938R3] <code>__cpp_if_constexpr</code> <code>201606</code> [P0292R2] <code>__cpp_impl_coroutine</code> <code>201902</code> [P0912R5, LWG3393] <code>__cpp_impl_destroying_delete</code> <code>201806</code> [P0722R3] <code>__cpp_impl_three_way_comparison</code> <code>201711</code><code>201902</code><code>201907</code> [P0515R3, P0768R1][P1185R2][P1630R1] <code>__cpp_implicit_move</code> <code>202207</code> [P2266R3] <code>__cpp_inheriting_constructors</code> <code>200802</code><code>201511</code> [N2540][P0136R1] <code>__cpp_init_captures</code> <code>201304</code><code>201803</code> [N3648][P0780R2] <code>__cpp_initializer_lists</code> <code>200806</code> [N2672] <code>__cpp_inline_variables</code> <code>201606</code> [P0386R2] <code>__cpp_lambdas</code> <code>200907</code> [N2927] <code>__cpp_modules</code> <code>201907</code> [P1103R3, P1811R0] <code>__cpp_multidimensional_subscript</code> <code>202110</code><code>202211</code> [P2128R6][P2589R1] <code>__cpp_named_character_escapes</code> <code>202207</code> [P2071R2] <code>__cpp_namespace_attributes</code> <code>201411</code> [N4266] <code>__cpp_noexcept_function_type</code> <code>201510</code> [P0012R1] <code>__cpp_nontype_template_args</code> <code>201411</code><code>201911</code> [N4268][P1907R1] <code>__cpp_nontype_template_parameter_auto</code> <code>201606</code> [P0127R2] <code>__cpp_nontype_template_parameter_class</code> <code>201806</code>deleted [P0732R2][P1907R1] <code>__cpp_nsdmi</code> <code>200809</code> [N2756] <code>__cpp_pack_indexing</code> <code>202311</code> [P2662R3] <code>__cpp_placeholder_variables</code> <code>202306</code> [P2169R4] <code>__cpp_range_based_for</code> <code>200907</code><code>201603</code><code>202211</code> [N2930][P0184R0][P2644R1, P2718R0, CWG2659] <code>__cpp_raw_strings</code> <code>200710</code> [N2442] <code>__cpp_ref_qualifiers</code> <code>200710</code> [N2439] <code>__cpp_return_type_deduction</code> <code>201304</code> [N3638] <code>__cpp_rtti</code> <code>199711</code> <code>__cpp_rvalue_references</code> <code>200610</code> [N2118] <code>__cpp_size_t_suffix</code> <code>202011</code> [P0330R8] <code>__cpp_sized_deallocation</code> <code>201309</code> [N3778] <code>__cpp_static_assert</code> <code>200410</code><code>201411</code><code>202306</code> [N1720][N3928][P2741R3] <code>__cpp_static_call_operator</code> <code>202207</code> [P1169R4] <code>__cpp_structured_bindings</code> <code>201606</code><code>202403</code> [P0217R3][P0609R3] <code>__cpp_template_template_args</code> <code>201611</code> [P0522R0] <code>__cpp_threadsafe_static_init</code> <code>200806</code> [N2660] <code>__cpp_unicode_characters</code> <code>200704</code> [N2249] <code>__cpp_unicode_literals</code> <code>200710</code> [N2442] <code>__cpp_user_defined_literals</code> <code>200809</code> [N2765] <code>__cpp_using_enum</code> <code>201907</code> [P1099R5] <code>__cpp_variable_templates</code> <code>201304</code> [N3651] <code>__cpp_variadic_friend</code> <code>202403</code> [P2893R3] <code>__cpp_variadic_templates</code> <code>200704</code> [N2242] <code>__cpp_variadic_using</code> <code>201611</code> [P0195R2]"},{"location":"feature/cpp/macros/#attribute","title":"Attribute","text":"Macro Values Papers <code>__has_cpp_attribute(assume)</code> <code>202207</code> [P1774R8, CWG2615] <code>__has_cpp_attribute(carries_dependency)</code> <code>200809</code> [N2782] <code>__has_cpp_attribute(deprecated)</code> <code>201309</code> [N3760] <code>__has_cpp_attribute(fallthrough)</code> <code>201603</code> [P0188R1] <code>__has_cpp_attribute(likely)</code> <code>201803</code> [P0479R5] <code>__has_cpp_attribute(maybe_unused)</code> <code>201603</code> [P0212R1] <code>__has_cpp_attribute(no_unique_address)</code> <code>201803</code> [P0840R2] <code>__has_cpp_attribute(nodiscard)</code> <code>201603</code><code>201907</code> [P0189R1][P1301R4, P1771R1] <code>__has_cpp_attribute(noreturn)</code> <code>200809</code> [N2761] <code>__has_cpp_attribute(unlikely)</code> <code>201803</code> [P0479R5]"},{"location":"feature/cpp/macros/#library","title":"Library","text":"Macro Headers Values Papers <code>__cpp_lib_adaptor_iterator_pair_constructor</code> <code>&lt;queue&gt;</code><code>&lt;stack&gt;</code> <code>202106</code> [P1425R4] <code>__cpp_lib_addressof_constexpr</code> <code>&lt;memory&gt;</code> <code>201603</code> [LWG2296] <code>__cpp_lib_algorithm_iterator_requirements</code> <code>&lt;algorithm&gt;</code><code>&lt;memory&gt;</code><code>&lt;numeric&gt;</code> <code>202207</code> [P2408R5] <code>__cpp_lib_allocate_at_least</code> <code>&lt;memory&gt;</code> <code>202106</code><code>202306</code> [P0401R6][LWG3887] <code>__cpp_lib_allocator_traits_is_always_equal</code> <code>&lt;deque&gt;</code><code>&lt;forward_list&gt;</code><code>&lt;list&gt;</code><code>&lt;map&gt;</code><code>&lt;memory&gt;</code><code>&lt;scoped_allocator&gt;</code><code>&lt;set&gt;</code><code>&lt;string&gt;</code><code>&lt;unordered_map&gt;</code><code>&lt;unordered_set&gt;</code><code>&lt;vector&gt;</code> <code>201411</code> [N4258] <code>__cpp_lib_any</code> <code>&lt;any&gt;</code> <code>201603</code><code>201606</code> [P0220R1][P0032R3] <code>__cpp_lib_apply</code> <code>&lt;tuple&gt;</code> <code>201603</code> [P0220R1] <code>__cpp_lib_array_constexpr</code> <code>&lt;array&gt;</code><code>&lt;iterator&gt;</code> <code>201603</code><code>201803</code><code>201806</code><code>201811</code> [P0031R0][P0858R0, LWG3257][P1023R0][P1032R1] <code>__cpp_lib_as_const</code> <code>&lt;utility&gt;</code> <code>201510</code> [P0007R1] <code>__cpp_lib_associative_heterogeneous_erasure</code> <code>&lt;map&gt;</code><code>&lt;set&gt;</code><code>&lt;unordered_map&gt;</code><code>&lt;unordered_set&gt;</code> <code>202110</code> [P2077R3] <code>__cpp_lib_associative_heterogeneous_insertion</code> <code>&lt;map&gt;</code><code>&lt;set&gt;</code><code>&lt;unordered_map&gt;</code><code>&lt;unordered_set&gt;</code> <code>202306</code> [P2363R5] <code>__cpp_lib_assume_aligned</code> <code>&lt;memory&gt;</code> <code>201811</code> [P1007R3] <code>__cpp_lib_atomic_flag_test</code> <code>&lt;atomic&gt;</code> <code>201907</code> [P1135R6] <code>__cpp_lib_atomic_float</code> <code>&lt;atomic&gt;</code> <code>201711</code> [P0020R6] <code>__cpp_lib_atomic_is_always_lock_free</code> <code>&lt;atomic&gt;</code> <code>201603</code> [P0152R1] <code>__cpp_lib_atomic_lock_free_type_aliases</code> <code>&lt;atomic&gt;</code> <code>201907</code> [P1135R6] <code>__cpp_lib_atomic_min_max</code> <code>&lt;atomic&gt;</code> <code>202403</code> [P0493R5] <code>__cpp_lib_atomic_ref</code> <code>&lt;atomic&gt;</code> <code>201806</code> [P0019R8] <code>__cpp_lib_atomic_shared_ptr</code> <code>&lt;memory&gt;</code> <code>201711</code> [P0718R2] <code>__cpp_lib_atomic_value_initialization</code> <code>&lt;atomic&gt;</code><code>&lt;memory&gt;</code> <code>201911</code> [P0883R2] <code>__cpp_lib_atomic_wait</code> <code>&lt;atomic&gt;</code> <code>201907</code> [P1135R6] <code>__cpp_lib_barrier</code> <code>&lt;barrier&gt;</code> <code>201907</code><code>202302</code> [P1135R6][P2588R3] <code>__cpp_lib_bind_back</code> <code>&lt;functional&gt;</code> <code>202202</code><code>202306</code> [P2387R3][P2714R1] <code>__cpp_lib_bind_front</code> <code>&lt;functional&gt;</code> <code>201811</code><code>201907</code><code>202306</code> [P0356R5][P1651R0][P2714R1] <code>__cpp_lib_bit_cast</code> <code>&lt;bit&gt;</code> <code>201806</code> [P0476R2] <code>__cpp_lib_bitops</code> <code>&lt;bit&gt;</code> <code>201907</code> [P0553R4] <code>__cpp_lib_bitset</code> <code>&lt;bitset&gt;</code> <code>202306</code> [P2697R1] <code>__cpp_lib_bool_constant</code> <code>&lt;type_traits&gt;</code> <code>201505</code> [N4389] <code>__cpp_lib_bounded_array_traits</code> <code>&lt;type_traits&gt;</code> <code>201902</code> [P1357R1] <code>__cpp_lib_boyer_moore_searcher</code> <code>&lt;functional&gt;</code> <code>201603</code> [P0220R1] <code>__cpp_lib_byte</code> <code>&lt;cstddef&gt;</code> <code>201603</code> [P0298R3] <code>__cpp_lib_byteswap</code> <code>&lt;bit&gt;</code> <code>202110</code> [P1272R4] <code>__cpp_lib_char8_t</code> <code>&lt;atomic&gt;</code><code>&lt;filesystem&gt;</code><code>&lt;istream&gt;</code><code>&lt;limits&gt;</code><code>&lt;locale&gt;</code><code>&lt;ostream&gt;</code><code>&lt;string&gt;</code><code>&lt;string_view&gt;</code> <code>201811</code><code>201907</code> [P0482R6][P1423R3] <code>__cpp_lib_chrono</code> <code>&lt;chrono&gt;</code> <code>201510</code><code>201611</code><code>201803</code><code>201907</code><code>202306</code> [P0092R1][P0505R0][P0355R7][P1466R3][P2592R3] <code>__cpp_lib_chrono_udls</code> <code>&lt;chrono&gt;</code> <code>201304</code> [N3642] <code>__cpp_lib_clamp</code> <code>&lt;algorithm&gt;</code> <code>201603</code> [P0025R0] <code>__cpp_lib_common_reference</code> <code>&lt;type_traits&gt;</code> <code>202302</code> [P2655R3] <code>__cpp_lib_common_reference_wrapper</code> <code>&lt;functional&gt;</code> <code>202302</code> [P2655R3] <code>__cpp_lib_complex_udls</code> <code>&lt;complex&gt;</code> <code>201309</code> [N3779] <code>__cpp_lib_concepts</code> <code>&lt;compare&gt;</code><code>&lt;concepts&gt;</code> <code>201806</code><code>201907</code><code>202002</code><code>202207</code> [P0898R3][P1754R1][P1964R2][P2404R3] <code>__cpp_lib_constexpr_algorithms</code> <code>&lt;algorithm&gt;</code><code>&lt;utility&gt;</code> <code>201703</code><code>201806</code><code>202306</code> [P0202R3][P0879R0, LWG3256, LWG3792][P2562R1] <code>__cpp_lib_constexpr_bitset</code> <code>&lt;bitset&gt;</code> <code>202207</code> [P2417R2] <code>__cpp_lib_constexpr_charconv</code> <code>&lt;charconv&gt;</code> <code>202207</code> [P2291R3] <code>__cpp_lib_constexpr_cmath</code> <code>&lt;cmath&gt;</code><code>&lt;cstdlib&gt;</code> <code>202202</code><code>202306</code> [P0533R9][P1383R2] <code>__cpp_lib_constexpr_complex</code> <code>&lt;complex&gt;</code> <code>201711</code><code>202306</code> [P0415R1][P1383R2] <code>__cpp_lib_constexpr_dynamic_alloc</code> <code>&lt;memory&gt;</code> <code>201907</code> [P0784R7] <code>__cpp_lib_constexpr_functional</code> <code>&lt;functional&gt;</code> <code>201811</code><code>201907</code> [P1032R1][P1065R2] <code>__cpp_lib_constexpr_iterator</code> <code>&lt;iterator&gt;</code> <code>201811</code> [P1032R1] <code>__cpp_lib_constexpr_memory</code> <code>&lt;memory&gt;</code> <code>201811</code><code>202202</code> [P1006R1][P2273R3] <code>__cpp_lib_constexpr_numeric</code> <code>&lt;numeric&gt;</code> <code>201911</code> [P1645R1] <code>__cpp_lib_constexpr_string</code> <code>&lt;string&gt;</code> <code>201611</code><code>201811</code><code>201907</code> [P0426R1][P1032R1][P0980R1] <code>__cpp_lib_constexpr_string_view</code> <code>&lt;string_view&gt;</code> <code>201611</code><code>201811</code> [P0426R1][P1032R1] <code>__cpp_lib_constexpr_tuple</code> <code>&lt;tuple&gt;</code> <code>201811</code> [P1032R1] <code>__cpp_lib_constexpr_typeinfo</code> <code>&lt;typeinfo&gt;</code> <code>202106</code> [P1328R1] <code>__cpp_lib_constexpr_utility</code> <code>&lt;utility&gt;</code> <code>201811</code> [P1032R1] <code>__cpp_lib_constexpr_vector</code> <code>&lt;vector&gt;</code> <code>201907</code> [P1004R2] <code>__cpp_lib_constrained_equality</code> <code>&lt;optional&gt;</code><code>&lt;tuple&gt;</code><code>&lt;utility&gt;</code><code>&lt;variant&gt;</code> <code>202403</code> [P2944R3] <code>__cpp_lib_containers_ranges</code> <code>&lt;deque&gt;</code><code>&lt;forward_list&gt;</code><code>&lt;list&gt;</code><code>&lt;map&gt;</code><code>&lt;queue&gt;</code><code>&lt;set&gt;</code><code>&lt;stack&gt;</code><code>&lt;string&gt;</code><code>&lt;unordered_map&gt;</code><code>&lt;unordered_set&gt;</code><code>&lt;vector&gt;</code> <code>202202</code> [P1206R7] <code>__cpp_lib_copyable_function</code> <code>&lt;functional&gt;</code> <code>202306</code> [P2548R6] <code>__cpp_lib_coroutine</code> <code>&lt;coroutine&gt;</code> <code>201902</code> [P0912R5, LWG3393] <code>__cpp_lib_debugging</code> <code>&lt;debugging&gt;</code> <code>202311</code><code>202403</code> [P2546R5][P2810R4] <code>__cpp_lib_deduction_guides</code> <code>201703</code> [P0433R2] <code>__cpp_lib_default_template_type_for_algorithm_values</code> <code>&lt;algorithm&gt;</code><code>&lt;deque&gt;</code><code>&lt;forward_list&gt;</code><code>&lt;list&gt;</code><code>&lt;ranges&gt;</code><code>&lt;string&gt;</code><code>&lt;vector&gt;</code> <code>202403</code> [P2248R8] <code>__cpp_lib_destroying_delete</code> <code>&lt;new&gt;</code> <code>201806</code> [P0722R3] <code>__cpp_lib_enable_shared_from_this</code> <code>&lt;memory&gt;</code> <code>201603</code> [P0033R1] <code>__cpp_lib_endian</code> <code>&lt;bit&gt;</code> <code>201907</code> [P0463R1, P1612R1] <code>__cpp_lib_erase_if</code> <code>&lt;deque&gt;</code><code>&lt;forward_list&gt;</code><code>&lt;list&gt;</code><code>&lt;map&gt;</code><code>&lt;set&gt;</code><code>&lt;string&gt;</code><code>&lt;unordered_map&gt;</code><code>&lt;unordered_set&gt;</code><code>&lt;vector&gt;</code> <code>201811</code><code>202002</code> [P1209R0][P1115R3] <code>__cpp_lib_exchange_function</code> <code>&lt;utility&gt;</code> <code>201304</code> [N3668] <code>__cpp_lib_execution</code> <code>&lt;execution&gt;</code> <code>201603</code><code>201902</code> [P0024R2][P1001R2] <code>__cpp_lib_expected</code> <code>&lt;expected&gt;</code> <code>202202</code><code>202211</code> [P0323R12][P2505R5] <code>__cpp_lib_filesystem</code> <code>&lt;filesystem&gt;</code> <code>201603</code><code>201606</code><code>201703</code> [P0218R1][P0219R1, P0392R0][P0317R1] <code>__cpp_lib_flat_map</code> <code>&lt;flat_map&gt;</code> <code>202207</code> [P0429R9] <code>__cpp_lib_flat_set</code> <code>&lt;flat_set&gt;</code> <code>202207</code> [P1222R4, LWG3751] <code>__cpp_lib_format</code> <code>&lt;format&gt;</code> <code>201907</code><code>202106</code><code>202110</code><code>202207</code><code>202304</code><code>202305</code><code>202306</code><code>202311</code> [P0645R10, P1361R2, P1652R1][P2216R3][P2372R3, P2418R2][P2419R2, P2508R1][P2510R3][P2757R3][P2637R3][P2918R2] <code>__cpp_lib_format_path</code> <code>&lt;filesystem&gt;</code> <code>202403</code> [P2845R8] <code>__cpp_lib_format_ranges</code> <code>&lt;format&gt;</code> <code>202207</code> [P2286R8, P2585R1, LWG3750] <code>__cpp_lib_format_uchar</code> <code>&lt;format&gt;</code> <code>202311</code> [P2909R4] <code>__cpp_lib_forward_like</code> <code>&lt;utility&gt;</code> <code>202207</code> [P2445R1] <code>__cpp_lib_freestanding_algorithm</code> <code>&lt;algorithm&gt;</code> <code>202311</code> [P2407R5] <code>__cpp_lib_freestanding_array</code> <code>&lt;array&gt;</code> <code>202311</code> [P2407R5] <code>__cpp_lib_freestanding_char_traits</code> <code>&lt;string&gt;</code> <code>202306</code> [P2338R4] <code>__cpp_lib_freestanding_charconv</code> <code>&lt;charconv&gt;</code> <code>202306</code> [P2338R4] <code>__cpp_lib_freestanding_cstdlib</code> <code>&lt;cmath&gt;</code><code>&lt;cstdlib&gt;</code> <code>202306</code> [P2338R4] <code>__cpp_lib_freestanding_cstring</code> <code>&lt;cstring&gt;</code> <code>202306</code><code>202311</code> [P2338R4][P2937R0] <code>__cpp_lib_freestanding_cwchar</code> <code>&lt;cwchar&gt;</code> <code>202306</code> [P2338R4] <code>__cpp_lib_freestanding_errc</code> <code>&lt;cerrno&gt;</code><code>&lt;system_error&gt;</code> <code>202306</code> [P2338R4] <code>__cpp_lib_freestanding_expected</code> <code>&lt;expected&gt;</code> <code>202311</code> [P2833R2] <code>__cpp_lib_freestanding_feature_test_macros</code> <code>202306</code> [P2198R7] <code>__cpp_lib_freestanding_functional</code> <code>&lt;functional&gt;</code> <code>202306</code> [P2198R7] <code>__cpp_lib_freestanding_iterator</code> <code>&lt;iterator&gt;</code> <code>202306</code> [P2198R7] <code>__cpp_lib_freestanding_mdspan</code> <code>&lt;mdspan&gt;</code> <code>202311</code> [P2833R2] <code>__cpp_lib_freestanding_memory</code> <code>&lt;memory&gt;</code> <code>202306</code> [P2198R7] <code>__cpp_lib_freestanding_operator_new</code> <code>&lt;operator_new&gt;</code> <code>202306</code> [P2198R7] <code>__cpp_lib_freestanding_optional</code> <code>&lt;optional&gt;</code> <code>202311</code> [P2407R5] <code>__cpp_lib_freestanding_ranges</code> <code>&lt;ranges&gt;</code> <code>202306</code> [P2198R7] <code>__cpp_lib_freestanding_ratio</code> <code>&lt;ratio&gt;</code> <code>202306</code> [P2198R7] <code>__cpp_lib_freestanding_string_view</code> <code>&lt;string_view&gt;</code> <code>202311</code> [P2407R5] <code>__cpp_lib_freestanding_tuple</code> <code>&lt;tuple&gt;</code> <code>202306</code> [P2198R7] <code>__cpp_lib_freestanding_utility</code> <code>&lt;utility&gt;</code> <code>202306</code> [P2198R7] <code>__cpp_lib_freestanding_variant</code> <code>&lt;variant&gt;</code> <code>202311</code> [P2407R5] <code>__cpp_lib_fstream_native_handle</code> <code>&lt;fstream&gt;</code> <code>202306</code> [P1759R6] <code>__cpp_lib_function_ref</code> <code>&lt;functional&gt;</code> <code>202306</code> [P0792R14] <code>__cpp_lib_gcd_lcm</code> <code>&lt;numeric&gt;</code> <code>201606</code> [P0295R0] <code>__cpp_lib_generate_random</code> <code>&lt;random&gt;</code> <code>202403</code> [P1068R11] <code>__cpp_lib_generator</code> <code>&lt;generator&gt;</code> <code>202207</code> [P2502R2] <code>__cpp_lib_generic_associative_lookup</code> <code>&lt;map&gt;</code><code>&lt;set&gt;</code> <code>201304</code> [N3657] <code>__cpp_lib_generic_unordered_hash_lookup</code> <code>&lt;unordered_map&gt;</code><code>&lt;unordered_set&gt;</code> <code>201902</code>deleted [P0920R2][P1661R1] <code>__cpp_lib_generic_unordered_lookup</code> <code>&lt;unordered_map&gt;</code><code>&lt;unordered_set&gt;</code> <code>201811</code> [P0919R3] <code>__cpp_lib_hardware_interference_size</code> <code>&lt;new&gt;</code> <code>201703</code> [P0154R1] <code>__cpp_lib_has_unique_object_representations</code> <code>&lt;type_traits&gt;</code> <code>201606</code> [P0258R2] <code>__cpp_lib_hazard_pointer</code> <code>&lt;hazard_pointer&gt;</code> <code>202306</code> [P2545R4] <code>__cpp_lib_hypot</code> <code>&lt;cmath&gt;</code> <code>201603</code> [P0030R1] <code>__cpp_lib_incomplete_container_elements</code> <code>&lt;forward_list&gt;</code><code>&lt;list&gt;</code><code>&lt;vector&gt;</code> <code>201505</code> [N4510] <code>__cpp_lib_int_pow2</code> <code>&lt;bit&gt;</code> <code>201806</code><code>202002</code> [P0556R3][P1956R1] <code>__cpp_lib_integer_comparison_functions</code> <code>&lt;utility&gt;</code> <code>202002</code> [P0586R2] <code>__cpp_lib_integer_sequence</code> <code>&lt;utility&gt;</code> <code>201304</code> [N3658] <code>__cpp_lib_integral_constant_callable</code> <code>&lt;type_traits&gt;</code> <code>201304</code> [N3545] <code>__cpp_lib_interpolate</code> <code>&lt;cmath&gt;</code><code>&lt;numeric&gt;</code> <code>201902</code> [P0811R3] <code>__cpp_lib_invoke</code> <code>&lt;functional&gt;</code> <code>201411</code> [N4169] <code>__cpp_lib_invoke_r</code> <code>&lt;functional&gt;</code> <code>202106</code> [P2136R3] <code>__cpp_lib_ios_noreplace</code> <code>&lt;ios&gt;</code> <code>202207</code> [P2467R1] <code>__cpp_lib_is_aggregate</code> <code>&lt;type_traits&gt;</code> <code>201703</code> [LWG2911] <code>__cpp_lib_is_constant_evaluated</code> <code>&lt;type_traits&gt;</code> <code>201811</code> [P0595R2] <code>__cpp_lib_is_final</code> <code>&lt;type_traits&gt;</code> <code>201402</code> [LWG2112] <code>__cpp_lib_is_implicit_lifetime</code> <code>&lt;type_traits&gt;</code> <code>202302</code> [P2674R1] <code>__cpp_lib_is_invocable</code> <code>&lt;type_traits&gt;</code> <code>201703</code> [P0604R0] <code>__cpp_lib_is_layout_compatible</code> <code>&lt;type_traits&gt;</code> <code>201907</code> [P0466R5] <code>__cpp_lib_is_nothrow_convertible</code> <code>&lt;type_traits&gt;</code> <code>201806</code> [P0758R1, LWG3356] <code>__cpp_lib_is_null_pointer</code> <code>&lt;type_traits&gt;</code> <code>201309</code> [LWG2247] <code>__cpp_lib_is_pointer_interconvertible</code> <code>&lt;type_traits&gt;</code> <code>201907</code> [P0466R5] <code>__cpp_lib_is_scoped_enum</code> <code>&lt;type_traits&gt;</code> <code>202011</code> [P1048R1] <code>__cpp_lib_is_swappable</code> <code>&lt;type_traits&gt;</code> <code>201603</code> [P0185R1] <code>__cpp_lib_is_within_lifetime</code> <code>&lt;type_traits&gt;</code> <code>202306</code> [P2641R4] <code>__cpp_lib_jthread</code> <code>&lt;stop_token&gt;</code><code>&lt;thread&gt;</code> <code>201907</code><code>201911</code> [P0660R10][P1869R1] <code>__cpp_lib_latch</code> <code>&lt;latch&gt;</code> <code>201907</code> [P1135R6] <code>__cpp_lib_launder</code> <code>&lt;new&gt;</code> <code>201606</code> [P0137R1] <code>__cpp_lib_linalg</code> <code>&lt;linalg&gt;</code> <code>202311</code> [P1673R13] <code>__cpp_lib_list_remove_return_type</code> <code>&lt;forward_list&gt;</code><code>&lt;list&gt;</code> <code>201806</code> [P0646R1] <code>__cpp_lib_logical_traits</code> <code>&lt;type_traits&gt;</code> <code>201510</code> [P0013R1] <code>__cpp_lib_make_from_tuple</code> <code>&lt;tuple&gt;</code> <code>201606</code> [P0209R2] <code>__cpp_lib_make_reverse_iterator</code> <code>&lt;iterator&gt;</code> <code>201402</code> [LWG2285] <code>__cpp_lib_make_unique</code> <code>&lt;memory&gt;</code> <code>201304</code> [N3656] <code>__cpp_lib_map_try_emplace</code> <code>&lt;map&gt;</code> <code>201411</code> [N4279] <code>__cpp_lib_math_constants</code> <code>&lt;numbers&gt;</code> <code>201907</code> [P0631R8] <code>__cpp_lib_math_special_functions</code> <code>&lt;cmath&gt;</code> <code>201603</code> [P0226R1] <code>__cpp_lib_mdspan</code> <code>&lt;mdspan&gt;</code> <code>202207</code> [P0009R18, P2599R2, P2604R0, P2613R1] <code>__cpp_lib_memory_resource</code> <code>&lt;memory_resource&gt;</code> <code>201603</code> [P0220R1] <code>__cpp_lib_modules</code> <code>202207</code> [P2465R3] <code>__cpp_lib_monadic_optional</code> <code>&lt;optional&gt;</code> <code>202110</code>deleted [P0798R8][LWG3621] <code>__cpp_lib_move_iterator_concept</code> <code>&lt;iterator&gt;</code> <code>202207</code> [P2520R0] <code>__cpp_lib_move_only_function</code> <code>&lt;functional&gt;</code> <code>202110</code> [P0288R9] <code>__cpp_lib_node_extract</code> <code>&lt;map&gt;</code><code>&lt;set&gt;</code><code>&lt;unordered_map&gt;</code><code>&lt;unordered_set&gt;</code> <code>201606</code> [P0083R3] <code>__cpp_lib_nonmember_container_access</code> <code>&lt;array&gt;</code><code>&lt;deque&gt;</code><code>&lt;forward_list&gt;</code><code>&lt;iterator&gt;</code><code>&lt;list&gt;</code><code>&lt;map&gt;</code><code>&lt;regex&gt;</code><code>&lt;set&gt;</code><code>&lt;string&gt;</code><code>&lt;unordered_map&gt;</code><code>&lt;unordered_set&gt;</code><code>&lt;vector&gt;</code> <code>201411</code> [N4280] <code>__cpp_lib_not_fn</code> <code>&lt;functional&gt;</code> <code>201603</code><code>202306</code> [P0005R4][P2714R1] <code>__cpp_lib_null_iterators</code> <code>&lt;iterator&gt;</code> <code>201304</code> [N3644] <code>__cpp_lib_optional</code> <code>&lt;optional&gt;</code> <code>201603</code><code>201606</code><code>202106</code><code>202110</code> [P0220R1][P0032R3, P0307R2][P2231R1][P0798R8, LWG3621] <code>__cpp_lib_out_ptr</code> <code>&lt;memory&gt;</code> <code>202106</code><code>202311</code> [P1132R7][P2833R2] <code>__cpp_lib_parallel_algorithm</code> <code>&lt;algorithm&gt;</code><code>&lt;numeric&gt;</code> <code>201603</code> [P0024R2] <code>__cpp_lib_polymorphic_allocator</code> <code>&lt;memory_resource&gt;</code> <code>201902</code> [P0339R6, LWG3437] <code>__cpp_lib_print</code> <code>&lt;ostream&gt;</code><code>&lt;print&gt;</code> <code>202207</code><code>202403</code> [P2093R14][P3107R5] <code>__cpp_lib_quoted_string_io</code> <code>&lt;iomanip&gt;</code> <code>201304</code> [N3654] <code>__cpp_lib_ranges</code> <code>&lt;algorithm&gt;</code><code>&lt;functional&gt;</code><code>&lt;iterator&gt;</code><code>&lt;memory&gt;</code><code>&lt;ranges&gt;</code> <code>201811</code><code>201907</code><code>201911</code><code>202106</code><code>202110</code><code>202202</code><code>202207</code><code>202211</code><code>202302</code> [P0896R4][P1035R7][P1716R3][P2325R3][P2415R2][P2387R3][P2494R2][P2602R2][P2609R3] <code>__cpp_lib_ranges_as_const</code> <code>&lt;ranges&gt;</code> <code>202207</code><code>202311</code> [P2278R4][P2836R1] <code>__cpp_lib_ranges_as_rvalue</code> <code>&lt;ranges&gt;</code> <code>202207</code> [P2446R2] <code>__cpp_lib_ranges_cartesian_product</code> <code>&lt;ranges&gt;</code> <code>202207</code> [P2374R4, P2540R1] <code>__cpp_lib_ranges_chunk</code> <code>&lt;ranges&gt;</code> <code>202202</code> [P2442R1] <code>__cpp_lib_ranges_chunk_by</code> <code>&lt;ranges&gt;</code> <code>202202</code> [P2443R1] <code>__cpp_lib_ranges_concat</code> <code>&lt;ranges&gt;</code> <code>202403</code> [P2542R8] <code>__cpp_lib_ranges_contains</code> <code>&lt;algorithm&gt;</code> <code>202207</code> [P2302R4] <code>__cpp_lib_ranges_enumerate</code> <code>&lt;ranges&gt;</code> <code>202302</code> [P2164R9] <code>__cpp_lib_ranges_find_last</code> <code>&lt;algorithm&gt;</code> <code>202207</code> [P1223R5, LWG3807] <code>__cpp_lib_ranges_fold</code> <code>&lt;algorithm&gt;</code> <code>202207</code> [P2322R6] <code>__cpp_lib_ranges_iota</code> <code>&lt;numeric&gt;</code> <code>202202</code> [P2440R1] <code>__cpp_lib_ranges_join_with</code> <code>&lt;ranges&gt;</code> <code>202202</code> [P2441R2] <code>__cpp_lib_ranges_repeat</code> <code>&lt;ranges&gt;</code> <code>202207</code> [P2474R2] <code>__cpp_lib_ranges_slide</code> <code>&lt;ranges&gt;</code> <code>202202</code> [P2442R1] <code>__cpp_lib_ranges_starts_ends_with</code> <code>&lt;algorithm&gt;</code> <code>202106</code> [P1659R3] <code>__cpp_lib_ranges_stride</code> <code>&lt;ranges&gt;</code> <code>202207</code> [P1899R3] <code>__cpp_lib_ranges_to_container</code> <code>&lt;ranges&gt;</code> <code>202202</code> [P1206R7] <code>__cpp_lib_ranges_zip</code> <code>&lt;ranges&gt;</code><code>&lt;tuple&gt;</code><code>&lt;utility&gt;</code> <code>202110</code> [P2321R2] <code>__cpp_lib_ratio</code> <code>&lt;ratio&gt;</code> <code>202306</code> [P2734R0] <code>__cpp_lib_raw_memory_algorithms</code> <code>&lt;memory&gt;</code> <code>201606</code> [P0040R3] <code>__cpp_lib_rcu</code> <code>&lt;rcu&gt;</code> <code>202306</code> [P2545R4] <code>__cpp_lib_reference_from_temporary</code> <code>&lt;type_traits&gt;</code> <code>202202</code> [P2255R2] <code>__cpp_lib_reference_wrapper</code> <code>&lt;functional&gt;</code> <code>202403</code> [P2944R3] <code>__cpp_lib_remove_cvref</code> <code>&lt;type_traits&gt;</code> <code>201711</code> [P0550R2] <code>__cpp_lib_result_of_sfinae</code> <code>&lt;functional&gt;</code><code>&lt;type_traits&gt;</code> <code>201210</code> [N3462] <code>__cpp_lib_robust_nonmodifying_seq_ops</code> <code>&lt;algorithm&gt;</code> <code>201304</code> [N3671] <code>__cpp_lib_sample</code> <code>&lt;algorithm&gt;</code> <code>201603</code> [P0220R1] <code>__cpp_lib_saturation_arithmetic</code> <code>&lt;numeric&gt;</code> <code>202311</code> [P0543R3] <code>__cpp_lib_scoped_lock</code> <code>&lt;mutex&gt;</code> <code>201703</code> [P0156R2] <code>__cpp_lib_semaphore</code> <code>&lt;semaphore&gt;</code> <code>201907</code> [P1135R6] <code>__cpp_lib_shared_mutex</code> <code>&lt;shared_mutex&gt;</code> <code>201505</code> [N4508] <code>__cpp_lib_shared_ptr_arrays</code> <code>&lt;memory&gt;</code> <code>201611</code><code>201707</code> [P0497R0][P0674R1] <code>__cpp_lib_shared_ptr_weak_type</code> <code>&lt;memory&gt;</code> <code>201606</code> [P0163R0] <code>__cpp_lib_shared_timed_mutex</code> <code>&lt;shared_mutex&gt;</code> <code>201402</code> [N3891] <code>__cpp_lib_shift</code> <code>&lt;algorithm&gt;</code> <code>201806</code><code>202202</code> [P0769R2][P2440R1] <code>__cpp_lib_smart_pointer_owner_equality</code> <code>&lt;memory&gt;</code> <code>202306</code> [P1901R2] <code>__cpp_lib_smart_ptr_for_overwrite</code> <code>&lt;memory&gt;</code> <code>202002</code> [P1020R1, P1973R1] <code>__cpp_lib_source_location</code> <code>&lt;source_location&gt;</code> <code>201907</code> [P1208R6] <code>__cpp_lib_span</code> <code>&lt;span&gt;</code> <code>201803</code><code>201902</code><code>202002</code><code>202311</code> [P0122R7, LWG3274][P1024R3][P1976R2][P2821R5, P2833R2] <code>__cpp_lib_span_initializer_list</code> <code>&lt;span&gt;</code> <code>202311</code> [P2447R6] <code>__cpp_lib_spanstream</code> <code>&lt;spanstream&gt;</code> <code>202106</code> [P0448R4] <code>__cpp_lib_ssize</code> <code>&lt;iterator&gt;</code> <code>201902</code> [P1227R2] <code>__cpp_lib_sstream_from_string_view</code> <code>&lt;sstream&gt;</code> <code>202306</code> [P2495R3] <code>__cpp_lib_stacktrace</code> <code>&lt;stacktrace&gt;</code> <code>202011</code> [P0881R7] <code>__cpp_lib_start_lifetime_as</code> <code>&lt;memory&gt;</code> <code>202207</code> [P2590R2] <code>__cpp_lib_starts_ends_with</code> <code>&lt;string&gt;</code><code>&lt;string_view&gt;</code> <code>201711</code> [P0457R2] <code>__cpp_lib_stdatomic_h</code> <code>&lt;stdatomic.h&gt;</code> <code>202011</code> [P0943R6] <code>__cpp_lib_string_contains</code> <code>&lt;string&gt;</code><code>&lt;string_view&gt;</code> <code>202011</code> [P1679R3] <code>__cpp_lib_string_resize_and_overwrite</code> <code>&lt;string&gt;</code> <code>202110</code> [P1072R10] <code>__cpp_lib_string_udls</code> <code>&lt;string&gt;</code> <code>201304</code> [N3642] <code>__cpp_lib_string_view</code> <code>&lt;string&gt;</code><code>&lt;string_view&gt;</code> <code>201603</code><code>201606</code><code>201803</code><code>202403</code> [P0220R1][P0254R2][P0858R0, LWG3257][P2591R5] <code>__cpp_lib_submdspan</code> <code>&lt;mdspan&gt;</code> <code>202306</code><code>202403</code> [P2630R4][P2642R6] <code>__cpp_lib_syncbuf</code> <code>&lt;syncstream&gt;</code> <code>201711</code><code>201803</code> [P0053R7][P0753R2] <code>__cpp_lib_text_encoding</code> <code>&lt;text_encoding&gt;</code> <code>202306</code> [P1885R12] <code>__cpp_lib_three_way_comparison</code> <code>&lt;compare&gt;</code> <code>201711</code><code>201907</code> [P0768R1][P1614R2] <code>__cpp_lib_to_address</code> <code>&lt;memory&gt;</code> <code>201711</code> [P0653R2] <code>__cpp_lib_to_array</code> <code>&lt;array&gt;</code> <code>201907</code> [P0325R4] <code>__cpp_lib_to_chars</code> <code>&lt;charconv&gt;</code> <code>201611</code><code>202306</code> [P0067R5, P0682R1, LWG3137][P2497R0] <code>__cpp_lib_to_string</code> <code>&lt;string&gt;</code> <code>202306</code> [P2587R3] <code>__cpp_lib_to_underlying</code> <code>&lt;utility&gt;</code> <code>202102</code> [P1682R2] <code>__cpp_lib_transformation_trait_aliases</code> <code>&lt;type_traits&gt;</code> <code>201304</code> [N3655] <code>__cpp_lib_transparent_operators</code> <code>&lt;functional&gt;</code><code>&lt;memory&gt;</code> <code>201210</code><code>201510</code> [N3421][P0074R0] <code>__cpp_lib_tuple_element_t</code> <code>&lt;tuple&gt;</code> <code>201402</code> [N3887] <code>__cpp_lib_tuple_like</code> <code>&lt;map&gt;</code><code>&lt;tuple&gt;</code><code>&lt;unordered_map&gt;</code><code>&lt;utility&gt;</code> <code>202207</code><code>202311</code> [P2165R4][P2819R2] <code>__cpp_lib_tuples_by_type</code> <code>&lt;tuple&gt;</code><code>&lt;utility&gt;</code> <code>201304</code> [N3670] <code>__cpp_lib_type_identity</code> <code>&lt;type_traits&gt;</code> <code>201806</code> [P0887R1] <code>__cpp_lib_type_trait_variable_templates</code> <code>&lt;type_traits&gt;</code> <code>201510</code> [P0006R0] <code>__cpp_lib_uncaught_exceptions</code> <code>&lt;exception&gt;</code> <code>201411</code> [N4259] <code>__cpp_lib_unordered_map_try_emplace</code> <code>&lt;unordered_map&gt;</code> <code>201411</code> [N4279] <code>__cpp_lib_unreachable</code> <code>&lt;utility&gt;</code> <code>202202</code> [P0627R6] <code>__cpp_lib_unwrap_ref</code> <code>&lt;type_traits&gt;</code> <code>201811</code> [P0318R1, LWG3348] <code>__cpp_lib_variant</code> <code>&lt;variant&gt;</code> <code>201606</code><code>202102</code><code>202106</code><code>202306</code> [P0088R3, P0393R3, P0032R3][P2162R2][P2231R1][P2637R3] <code>__cpp_lib_void_t</code> <code>&lt;type_traits&gt;</code> <code>201411</code> [N3911]"},{"location":"instruction-set/arm/","title":"Arm","text":""},{"location":"instruction-set/arm/#references","title":"References","text":"<ul> <li>https://developer.arm.com/architectures/instruction-sets/intrinsics/#q=Neon</li> <li>https://developer.arm.com/architectures/instruction-sets/intrinsics/#q=MVE</li> <li>https://developer.arm.com/architectures/instruction-sets/intrinsics/#q=sve</li> </ul>"},{"location":"instruction-set/x86/","title":"x86","text":""},{"location":"instruction-set/x86/#mmx","title":"MMX","text":"<code>__MMX__</code> <p>MMX</p> <code>__MMX_WITH_SSE__</code> <p>MMX with SSE</p>"},{"location":"instruction-set/x86/#3dnow","title":"3dNow","text":"<code>__3dNOW__</code> <p>3dNow!</p> <code>__3dNOW_A__</code> <p>3dNow! A</p>"},{"location":"instruction-set/x86/#sse-family","title":"SSE Family","text":"<code>__SSE__</code> <p>SSE</p> <code>__SSE2__</code> <p>SSE2</p> <code>__SSE3__</code> <p>SSE3</p> <code>__SSSE3__</code> <p>SSSE3</p> <code>__SSE4A__</code> <p>SSE4a (AMD)</p> <code>__SSE4_1__</code> <p>SSE4.1</p> <code>__SSE4_2__</code> <p>SSE4.2</p>"},{"location":"instruction-set/x86/#avx-family","title":"AVX Family","text":"<code>__AVX__</code> <p>AVX</p> <code>__F16C__</code> <p>F16C</p> <code>__FMA__</code> <p>FMA</p> <code>__AVX2__</code> <p>AVX2</p> <code>__AVXVNNI__</code> <p>AVX_VNNI</p> <code>__AVXVNNIINT8__</code> <p>AVX_VNNI_INT8</p> <code>__AVXNECONVERT__</code> <p>AVX_NE_CONVERT</p> <code>__AVXIFMA__</code> <p>AVX_IFMA</p> <code>__AVXVNNIINT16__</code> <p>AVX_VNNI_INT16</p> <code>__SHA512__</code> <p>SHA512</p> <code>__SM3__</code> <p>SM3</p> <code>__SM4__</code> <p>SM4</p>"},{"location":"instruction-set/x86/#avx-512-family","title":"AVX-512 Family","text":"<code>__AVX512F__</code> <p>AVX-512F</p> <code>__AVX512BW__</code> <p>AVX-512BW</p> <code>__AVX512CD__</code> <p>AVX-512CD</p> <code>__AVX512DQ__</code> <p>AVX-512DQ</p> <code>__AVX512IFMA__</code> <p>AVX-512IFMA52</p> <code>__AVX512VL__</code> <p>AVX-512VL</p> <code>__AVX512VPOPCNTDQ__</code> <p>AVX-512VPOPCNTDQ</p> <code>__AVX512BF16__</code> <p>AVX-512_BF16</p> <code>__AVX512BITALG__</code> <p>AVX-512_BITALG</p> <code>__AVX512VBMI__</code> <p>AVX-512_VBMI</p> <code>__AVX512VBMI2__</code> <p>AVX-512_VBMI2</p> <code>__AVX512VNNI__</code> <p>AVX-512_VNNI</p> <code>__AVX512VP2INTERSECT__</code> <p>AVX-512_VP2INTERSECT</p> <code>__AVX512FP16__</code> <p>AVX-512_FP16</p>"},{"location":"instruction-set/x86/#amx-family","title":"AMX Family","text":"<code>__AMX_BF16__</code> <p>AMX-BF16</p> <code>__AMX_INT8__</code> <p>AMX-INT8</p> <code>__AMX_TILE__</code> <p>AMX-TILE</p> <code>__AMX_FP16__</code> <p>AMX-FP16</p> <code>__AMX_COMPLEX__</code> <p>AMX-COMPLEX</p>"},{"location":"instruction-set/x86/#svml","title":"SVML","text":"Unknown <p>SVML</p>"},{"location":"instruction-set/x86/#avx-10-family","title":"AVX-10 Family","text":"<code>__AVX10_1__</code> <p>AVX10.1</p> <code>__AVX10_1_256__</code> <p>AVX10.1/256</p> <code>__AVX10_1_512__</code> <p>AVX10.1/512</p> <code>__AVX10_2__</code> <p>AVX10.2</p> <code>__AVX10_2_256__</code> <p>AVX10.2/256</p> <code>__AVX10_2_512__</code> <p>AVX10.2/512</p>"},{"location":"instruction-set/x86/#other","title":"Other","text":"<code>__ADX__</code> <p>ADX</p> <code>__AES__</code> <p>AES</p> <code>__BMI__</code> <p>BMI1</p> <code>__BMI2__</code> <p>BMI2</p> Unknown CET_SS <code>__CLDEMOTE__</code> <p>CLDEMOTE</p> <code>__CLFLUSHOPT__</code> <p>CLFLUSHOPT</p> <code>__CLWB__</code> <p>CLWB</p> <code>__CMPCCXADD__</code> <p>CMPCCXADD</p> <code>__CRC32__</code> <p>CRC32</p> <code>__ENQCMD__</code> <p>ENQCMD</p> <code>__FSGSBASE__</code> <p>FSGSBASE</p> <code>__FXSR__</code> <p>FXSR</p> <code>__GFNI__</code> <p>GFNI</p> <code>__HRESET__</code> <p>HRESET</p> <code>__INVPCID__</code> <p>INVPCID</p> Unknown <p>KEYLOCKER</p> Unknown <p>KEYLOCKER_WIDE</p> <code>__LZCNT__</code> <p>LZCNT</p> Unknown <p>MONITOR</p> <code>__MOVBE__</code> <p>MOVBE</p> <code>__MOVDIR64B__</code> <p>MOVDIR64B</p> <code>__MOVDIRI__</code> <p>MOVDIRI</p> Unknown <p>MPX</p> <code>__PCLMUL__</code> <p>PCLMULQDQ</p> <code>__PCONFIG__</code> <p>PCONFIG</p> <code>__POPCNT__</code> <p>POPCNT</p> <code>__PREFETCHI__</code> <p>PREFETCHI</p> <code>__PRFCHW__</code> <p>PRFCHW</p> <code>__RAOINT__</code> <p>RAO_INT</p> <code>__RDPID__</code> <p>RDPID</p> <code>__RDRND__</code> <p>RDRAND</p> <code>__RDSEED__</code> <p>RDSEED</p> Unknown <p>RDTSCP</p> <code>__RTM__</code> <p>RTM</p> <code>__SERIALIZE__</code> <p>SERIALIZE</p> <code>__SHA__</code> <p>SHA</p> Unknown <p>TSC</p> <code>__TSXLDTRK__</code> <p>TSXLDTRK</p> <code>__UINTR__</code> <p>UINTR</p> <code>__USER_MSR__</code> <p>USER_MSR</p> <code>__VAES__</code> <p>VAES</p> <code>__VPCLMULQDQ__</code> <p>VPCLMULQDQ</p> <code>__WAITPKG__</code> <p>WAITPKG</p> <code>__WBNOINVD__</code> <p>WBNOINVD</p> <code>__XSAVE__</code> <p>XSAVE</p> <code>__XSAVEC__</code> <p>XSAVEC</p> <code>__XSAVEOPT__</code> <p>XSAVEOPT</p> Unknown <p>XSS</p>"},{"location":"instruction-set/x86/#to-do","title":"To Do","text":"<ul> <li><code>__ABM__</code></li> <li><code>__AMX_AVX512__</code></li> <li><code>__AMX_FP8__</code></li> <li><code>__AMX_MOVRS__</code></li> <li><code>__AMX_TF32__</code></li> <li><code>__AMX_TRANSPOSE__</code></li> <li><code>__APX_F__</code></li> <li><code>__APX_INLINE_ASM_USE_GPR32__</code></li> <li><code>__CCMP__</code></li> <li><code>__CF__</code></li> <li><code>__CLZERO__</code></li> <li><code>__EGPR__</code></li> <li><code>__EVEX256__</code></li> <li><code>__EVEX512__</code></li> <li><code>__FMA4__</code></li> <li><code>__KL__</code></li> <li><code>__LAHF_SAHF__</code></li> <li><code>__LWP__</code></li> <li><code>__MOVRS__</code></li> <li><code>__MWAITX__</code></li> <li><code>__NDD__</code></li> <li><code>__NF__</code></li> <li><code>__PKU__</code></li> <li><code>__PPX__</code></li> <li><code>__PTWRITE__</code></li> <li><code>__PUSH2POP2__</code></li> <li><code>__RDPRU__</code></li> <li><code>__SGX__</code></li> <li><code>__SHSTK__</code></li> <li><code>__SSE2_MATH__</code></li> <li><code>__SSE_MATH__</code></li> <li><code>__TBM__</code></li> <li><code>__USERMSR__</code></li> <li><code>__WIDEKL__</code></li> <li><code>__XOP__</code></li> <li><code>__XSAVES__</code></li> <li><code>__ZU__</code></li> </ul>"},{"location":"instruction-set/x86/#references","title":"References","text":"<ul> <li>https://www.intel.com/content/www/us/en/docs/intrinsics-guide/index.html</li> <li>https://www.intel.com/content/www/us/en/support/articles/000005779/processors.html</li> <li>https://github.com/gcc-mirror/gcc/blob/master/gcc/config/i386/i386-c.cc</li> <li>https://github.com/llvm/llvm-project/blob/main/clang/lib/Basic/Targets/X86.cpp</li> <li>https://en.wikipedia.org/wiki/MMX_(instruction_set)</li> <li>https://en.wikipedia.org/wiki/Streaming_SIMD_Extensions</li> <li>https://en.wikipedia.org/wiki/SSE2</li> <li>https://en.wikipedia.org/wiki/SSE3</li> <li>https://en.wikipedia.org/wiki/SSSE3</li> <li>https://en.wikipedia.org/wiki/SSE4</li> <li>https://en.wikipedia.org/wiki/Advanced_Vector_Extensions</li> <li>https://en.wikipedia.org/wiki/F16C</li> <li>https://en.wikipedia.org/wiki/FMA_instruction_set</li> <li>https://en.wikipedia.org/wiki/AVX2</li> <li>https://en.wikipedia.org/wiki/AVX-512</li> <li>https://en.wikipedia.org/wiki/Advanced_Matrix_Extensions</li> <li>https://en.wikipedia.org/wiki/AVX10</li> <li>https://en.wikipedia.org/wiki/Bit_Manipulation_Instruction_Sets</li> <li>https://en.wikipedia.org/wiki/Intel_ADX</li> <li>https://en.wikipedia.org/wiki/EVEX_prefix#Extended_EVEX_prefix</li> </ul>"},{"location":"language/assembly/","title":"Assembly","text":""},{"location":"language/assembly/#identification","title":"Identification","text":"<code>__ASSEMBLER__</code> <p>Identifies the language as Assembly.</p> <p>Defined by GNU C.</p> <code>__ASSEMBLY__</code> <p>Identifies the language as Assembly.</p> <code>LANGUAGE_ASSEMBLY</code> <code>_LANGUAGE_ASSEMBLY</code> <code>__LANGUAGE_ASSEMBLY</code> <code>__LANGUAGE_ASSEMBLY__</code> <p>Identifies the language as Assembly.</p>"},{"location":"language/c/","title":"C","text":""},{"location":"language/c/#identification","title":"Identification","text":"<code>__GNUC__</code> <p>Identifies the language as a dialect of C.</p> <code>LANGUAGE_C</code> <code>_LANGUAGE_C</code> <code>__LANGUAGE_C</code> <code>__LANGUAGE_C__</code> <p>Identifies the language as C.</p> <code>__STDC__</code> <p>Identifies the language as C.</p>"},{"location":"language/c/#features","title":"Features","text":"<code>__STDC_HOSTED__</code> <p>Defined as <code>1</code> if the implementation is a hosted implementation or defined as <code>0</code> if it is not.</p>"},{"location":"language/c/#versioning","title":"Versioning","text":"<code>__STDC_VERSION__</code> <p>An integer for the version of the C language (ISO/IEC 9899), which is encoded as a decimal integer with the general form of <code>&lt;yyyymm&gt;</code>, where <code>&lt;yyyy&gt;</code> and <code>&lt;mm&gt;</code> are the year and month specified by the standard.</p> Standard <code>__STDC_VERSION__</code> C95 <code>199409L</code> C99 <code>199901L</code> C11 <code>201112L</code> C17 <code>201710L</code> C23 <code>202311L</code> <p>Note</p> <p>The <code>__STDC_VERSION__</code> macro was not introduced until ISO/IEC 9899:1990/Amd 1:1994 (C95) however, it is an amendment to ISO/IEC 9899:1990 (C90).</p>"},{"location":"language/cpp/","title":"C++","text":""},{"location":"language/cpp/#identification","title":"Identification","text":"<code>c_plusplus</code> <p>Identifies the language as C++.</p> <code>__cplusplus</code> <p>Identifies the language as C++.</p> <code>__cplusplus_cli</code> <p>Identifies the language as C++/CLI.</p> <code>__embedded_cplusplus</code> <p>Identifies the language as Embedded C++.</p> <code>__GNUG__</code> <p>Identifies the language as C++.</p> <p>Equivalent to <code>(__GNUC__ &amp;&amp; __cplusplus)</code>.</p> <code>LANGUAGE_C_PLUS_PLUS</code> <code>_LANGUAGE_C_PLUS_PLUS</code> <code>__LANGUAGE_C_PLUS_PLUS</code> <code>__LANGUAGE_C_PLUS_PLUS__</code> <p>Identifies the language as C++.</p> <code>__STDCPP__</code> <p>Identifies the language as C++.</p>"},{"location":"language/cpp/#features","title":"Features","text":"<code>__STDC_HOSTED__</code> <p>Defined as <code>1</code> if the implementation is a hosted implementation or defined as <code>0</code> if it is not.</p>"},{"location":"language/cpp/#library","title":"Library","text":""},{"location":"language/cpp/#versioning","title":"Versioning","text":"<code>__cplusplus</code> <p>An integer for the version of the C++ standard (ISO/IEC 14882), encoded as a decimal integer with the general form of <code>&lt;yyyymm&gt;L</code>, where <code>&lt;yyyy&gt;</code> and <code>&lt;mm&gt;</code> are a year and month specified by the standard.</p> Standard <code>__cplusplus</code> C++98 <code>199711L</code> C++03 <code>199711L</code> C++11 <code>201103L</code> C++14 <code>201402L</code> C++17 <code>201703L</code> C++20 <code>202002L</code> C++23 <code>202302L</code> <p>Info</p> <p>Early drafts of C++98 defined <code>__cplusplus</code> as <code>199707L</code> which certain compilers retained (e.g., HP aC++).</p> <code>__cplusplus_cli</code> <p>An integer for the version of the C++/CLI standard, encoded as a decimal integer with the general form of <code>&lt;yyyymm&gt;L</code>.</p>"},{"location":"language/cuda/","title":"CUDA","text":""},{"location":"language/cuda/#identification","title":"Identification","text":"<code>__CUDA__</code> <p>Identifies the language as CUDA.</p> <code>__CUDACC__</code> <p>Identifies the language as CUDA.</p>"},{"location":"language/cuda/#versioning","title":"Versioning","text":"<code>__CUDACC_VER_MAJOR__</code> <p>An integer for the major version.</p> <code>__CUDACC_VER_MINOR__</code> <p>An integer for the minor version.</p> <code>__CUDACC_VER_BUILD__</code> <p>An integer for the patch version.</p> <code>CUDACC_VER</code> <p><code>&lt;AABBC&gt;</code></p> <code>__CUDACC_VER__</code> <p><code>&lt;AABBC&gt;</code></p>"},{"location":"language/fortran/","title":"Fortran","text":""},{"location":"language/fortran/#identification","title":"Identification","text":"<code>__flang__</code> <p>Identifies the language as Fortran.</p> <code>__FLANG</code> <p>Identifies the language as Fortran.</p> <code>__GFORTRAN__</code> <p>Identifies the language as Fortran.</p> <code>LANGUAGE_F77</code> <p>Identifies the language as Fortran.</p> <code>LANGUAGE_FORTRAN</code> <code>_LANGUAGE_FORTRAN</code> <code>__LANGUAGE_FORTRAN</code> <code>__LANGUAGE_FORTRAN__</code> <p>Identifies the language as Fortran.</p> <code>+__SUNPRO_F90+</code> <p>Identifies the language as Fortran.</p> <p>== References</p> <ul> <li>fortranwiki.org - Predefined preprocessor macros</li> </ul>"},{"location":"language/hip/","title":"HIP","text":""},{"location":"language/hip/#identification","title":"Identification","text":"<code>__HIP__</code> <p>Identifies the language as HIP.</p> <code>__HIPCC__</code> <p>Identifies the language as HIP.</p>"},{"location":"language/hip/#versioning","title":"Versioning","text":"<code>HIP_VERSION_MAJOR</code> <p>An integer for the major version of HIP.</p> <p>Defined in <code>&lt;hip/hip_runtime.h&gt;</code>.</p> <code>HIP_VERSION_MINOR</code> <p>An integer for the minor version of HIP.</p> <p>Defined in <code>&lt;hip/hip_runtime.h&gt;</code>.</p> <code>HIP_VERSION_PATCH</code> <p>An integer for the patch version of HIP.</p> <p>Defined in <code>&lt;hip/hip_runtime.h&gt;</code>.</p>"},{"location":"language/ispc/","title":"ISPC","text":""},{"location":"language/ispc/#identification","title":"Identification","text":"<code>ISPC</code> <p>Identifies the language as ISPC.</p>"},{"location":"language/ispc/#versioning","title":"Versioning","text":"<code>ISPC_MAJOR_VERSION</code> <p>An integer for the major version of ISPC.</p> <code>ISPC_MINOR_VERSION</code> <p>An integer for the minor version of ISPC.</p>"},{"location":"language/objective-c/","title":"Objective C","text":"<code>LANGUAGE_OBJECTIVE_C</code> <code>_LANGUAGE_OBJECTIVE_C</code> <code>__LANGUAGE_OBJECTIVE_C</code> <code>__LANGUAGE_OBJECTIVE_C__</code> <p>Identifies the language as Objective C.</p> <code>__OBJC2__</code> <p>Identifies the language as Objective C.</p> <code>__OBJC_GC__</code> <p>Identifies the language as Objective C.</p> <code>__OBJC__</code> <p>Identifies the language as Objective C.</p>"},{"location":"language/objective-cpp/","title":"Objective C++","text":""},{"location":"language/opencl/","title":"OpenCL","text":""},{"location":"language/opencl/#identification","title":"Identification","text":"<code>__OPENCL_VERSION__</code> <p>Identifies the language as OpenCL.</p>"},{"location":"language/opencl/#versioning","title":"Versioning","text":"<code>__OPENCL_VERSION__</code> <p>An integer for the version of OpenCL, which is encoded as a decimal integer with the general form of <code>&lt;ABB&gt;</code>, where:</p> <ul> <li><code>&lt;A&gt;</code> is the major version; and</li> <li><code>&lt;BB&gt;</code> is the minor version.</li> </ul>"},{"location":"library/c/bionic/","title":"Bionic libc","text":""},{"location":"library/c/bionic/#identification","title":"Identification","text":"<code>__BIONIC__</code> <p>Identifies the standard C library as Bionic libc.</p>"},{"location":"library/c/cloud/","title":"cloudlibc","text":""},{"location":"library/c/cloud/#identification","title":"Identification","text":"<code>__cloudlibc__</code> <p>Identifies the standard C library as cloudlibc.</p>"},{"location":"library/c/diet/","title":"dietlibc","text":""},{"location":"library/c/gnu/","title":"glibc","text":""},{"location":"library/c/klibc/","title":"klibc","text":""},{"location":"library/c/musl/","title":"Musl libc","text":""},{"location":"library/c/newlib/","title":"newlibc","text":""},{"location":"library/c/uclibc/","title":"uClibc","text":""},{"location":"library/c/vms/","title":"VMS libc","text":""},{"location":"library/c/z88dk/","title":"Z88DK libc","text":""},{"location":"library/c/zos/","title":"z/OS libc","text":""},{"location":"library/cpp/comeau/","title":"Comeau libcomo","text":""},{"location":"library/cpp/comeau/#versioning","title":"Versioning","text":"<code>__LIBCOMO_VERSION__</code> <p>An integer for the version of libcomo.</p>"},{"location":"library/cpp/dinkumware/","title":"Dinkumware","text":""},{"location":"library/cpp/gnu/","title":"GNU libstdc++","text":""},{"location":"library/cpp/ibm/","title":"IBM VACPP Standard C++ Library","text":""},{"location":"library/cpp/llvm/","title":"LLVM libc++","text":""},{"location":"library/cpp/metrowerks/","title":"Metrowerks Standard C++ Library","text":""},{"location":"library/cpp/microsoft/","title":"Microsoft Standard C++ Library","text":""},{"location":"library/cpp/modena/","title":"Modena Software Lib++","text":""},{"location":"library/cpp/roguewave/","title":"Roguewave Standard C++ Library","text":""},{"location":"library/cpp/sgi/","title":"SGI Standard C++ Library","text":""},{"location":"library/cpp/stlport/","title":"STLPort Standard C++ Library","text":""},{"location":"os/aix/","title":"AIX","text":""},{"location":"os/aix/#identification","title":"Identification","text":"<code>_AIX</code> <p>Identifies the target operating system as AIX.</p> <code>__HOS_AIX__</code> <p>Identifies the host operating system as AIX.</p> <code>__TOS_AIX__</code> <p>Identifies the target operating system as AIX.</p>"},{"location":"os/aix/#versioning","title":"Versioning","text":"<code>_AIX&lt;major&gt;&lt;minor&gt;</code> <p>Indicates the version for the AIX operating system, where:</p> <ul> <li><code>&lt;major&gt;</code> is an integer for the major version; and</li> <li><code>&lt;minor&gt;</code> is an integer for the minor version.</li> </ul> <p>Note</p> <p>Macros for the previous versions of AIX are also expected to be defined.</p> Macro Version <code>_AIX73</code> 7.3.0 <code>_AIX72</code> 7.2.0 <code>_AIX71</code> 7.1.0 <code>_AIX61</code> 6.1.0 <code>_AIX53</code> 5.3.0 <code>_AIX52</code> 5.2.0 <code>_AIX51</code> 5.1.0 <code>_AIX43</code> 4.3.0 <code>_AIX42</code> 4.2.0 <code>_AIX41</code> 4.1.0 <code>_AIX32</code> 3.2.0"},{"location":"os/aix/#references","title":"References","text":"<ul> <li>AIX - Wikipedia</li> </ul>"},{"location":"os/amdahl-uts/","title":"Amdahl UTS","text":""},{"location":"os/amdahl-uts/#identification","title":"Identification","text":"<code>UTS</code> <p>Identifies the operating system as Amdahl UTS.</p>"},{"location":"os/amdahl-uts/#references","title":"References","text":"<ul> <li>Amdahl UTS - Wikipedia</li> </ul>"},{"location":"os/amiga/","title":"AmigaOS","text":"","tags":["Amiga","AmigaOS"]},{"location":"os/amiga/#identification","title":"Identification","text":"<code>AMIGA</code> <p>Identifies the target operating system as AmigaOS.</p> <code>__amigaos__</code> <p>Identifies the target operating system as AmigaOS.</p>","tags":["Amiga","AmigaOS"]},{"location":"os/amiga/#references","title":"References","text":"<ul> <li>AmigaOS - Wikipedia</li> </ul>","tags":["Amiga","AmigaOS"]},{"location":"os/android/","title":"Android","text":""},{"location":"os/android/#identification","title":"Identification","text":"<code>ANDROID</code> <code>__ANDROID__</code> <p>Identifies the target operating system as Android.</p>"},{"location":"os/android/#versioning","title":"Versioning","text":"<code>__ANDROID_API__</code> <p>An integer for the Android API level.</p> <p>Defined in <code>&lt;android/api-level.h&gt;</code>, which is included by <code>&lt;features.h&gt;</code>.</p>"},{"location":"os/android/#api-level","title":"API Level","text":"Platform Version API Level <code>VERSION_CODE</code> Android 15 <code>35</code> <code>VANILLA_ICE_CREAM</code> Android 14 <code>34</code> <code>UPSIDE_DOWN_CAKE</code> Android 13 <code>33</code> <code>TIRAMISU</code> Android 12 <code>32</code><code>31</code> <code>S_V2</code><code>S</code> Android 11 <code>30</code> <code>R</code> Android 10 <code>29</code> <code>Q</code> Android 9 <code>28</code> <code>P</code> Android 8.1 <code>27</code> <code>O_MR1</code> Android 8.0 <code>26</code> <code>O</code> Android 7.1.1Android 7.1 <code>25</code> <code>N_MR1</code> Android 7.0 <code>24</code> <code>N</code> Android 6.0 <code>23</code> <code>M</code> Android 5.1 <code>22</code> <code>LOLLIPOP_MR1</code> Android 5.0 <code>21</code> <code>LOLLIPOP</code> Android 4.4W <code>20</code> <code>KITKAT_WATCH</code> Android 4.4 <code>19</code> <code>KITKAT</code> Android 4.3 <code>18</code> <code>JELLY_BEAN_MR2</code> Android 4.2Android 4.2.2 <code>17</code> <code>JELLY_BEAN_MR1</code> Android 4.1.1Android 4.1 <code>16</code> <code>JELLY_BEAN</code> Android 4.0.4Android 4.0.3 <code>15</code> <code>ICE_CREAM_SANDWICH_MR1</code> Android 4.0.2Android 4.0.1Android 4.0 <code>14</code> <code>ICE_CREAM_SANDWICH</code> Android 3.2 <code>13</code> <code>HONEYCOMB_MR2</code> Android 3.1.x <code>12</code> <code>HONEYCOMB_MR1</code> Android 3.0.x <code>11</code> <code>HONEYCOMB</code> Android 2.3.4Android 2.3.3 <code>10</code> <code>GINGERBREAD_MR1</code> Android 2.3.2Android 2.3.1Android 2.3 <code>9</code> <code>GINGERBREAD</code> Android 2.2.x <code>8</code> <code>FROYO</code> Android 2.1.x <code>7</code> <code>ECLAIR_MR1</code> Android 2.0.1 <code>6</code> <code>ECLAIR_0_1</code> Android 2.0 <code>5</code> <code>ECLAIR</code> Android 1.6 <code>4</code> <code>DONUT</code> Android 1.5 <code>3</code> <code>CUPCAKE</code> Android 1.1 <code>2</code> <code>BASE_1_1</code> Android 1.0 <code>1</code> <code>BASE</code>"},{"location":"os/android/#comparison-macros","title":"Comparison Macros","text":"Code Name Comparison Macro Value Gingerbread <code>__ANDROID_API_G__</code> <code>9</code> IceCreamSandwich <code>__ANDROID_API_I__</code> <code>14</code> Jellybean <code>__ANDROID_API_J__</code> <code>16</code> Jellybean MR1 <code>__ANDROID_API_J_MR1__</code> <code>17</code> Jellybean MR2 <code>__ANDROID_API_J_MR2__</code> <code>18</code> KitKat <code>__ANDROID_API_K__</code> <code>19</code> Lollipop <code>__ANDROID_API_L__</code> <code>21</code> Lollipop MR1 <code>__ANDROID_API_L_MR1__</code> <code>22</code> Marshmallow <code>__ANDROID_API_M__</code> <code>23</code> Nougat <code>__ANDROID_API_N__</code> <code>24</code> Nougat MR1 <code>__ANDROID_API_N_MR1__</code> <code>25</code> Oreo <code>__ANDROID_API_O__</code> <code>26</code> Oreo MR1 <code>__ANDROID_API_O_MR1__</code> <code>27</code> Pie <code>__ANDROID_API_P__</code> <code>28</code> QuinceTart <code>__ANDROID_API_Q__</code> <code>29</code> RedVelvetCake <code>__ANDROID_API_R__</code> <code>30</code> Snowcone <code>__ANDROID_API_S__</code> <code>31</code> Tiramisu <code>__ANDROID_API_T__</code> <code>33</code> UpsideDownCake <code>__ANDROID_API_U__</code> <code>34</code> VanillaIceCream <code>__ANDROID_API_V__</code> <code>35</code> <p>Info</p> <p>The comparison macros are defined in <code>&lt;android/api-level.h&gt;</code>.</p>"},{"location":"os/android/#references","title":"References","text":"<ul> <li>Android - Wikipedia</li> <li>Android Version History - Wikipedia</li> <li>android/api-level.h</li> <li>Android API Levels</li> </ul>"},{"location":"os/apollo-aegis/","title":"Apollo AEGIS","text":""},{"location":"os/apollo-aegis/#identification","title":"Identification","text":"<code>aegis</code> <p>Identifies the operating system as Apollo AEGIS.</p>"},{"location":"os/apollo-aegis/#references","title":"References","text":"<ul> <li>Apollo Domain - Wikipedia</li> <li>Apollo Domain/OS - Wikipedia</li> </ul>"},{"location":"os/apollo-domainos/","title":"Apollo Domain/OS","text":""},{"location":"os/apollo-domainos/#identification","title":"Identification","text":"<code>apollo</code> <p>Identifies the operating system as Apollo Domain/OS.</p>"},{"location":"os/apollo-domainos/#references","title":"References","text":"<ul> <li>Apollo Domain - Wikipedia</li> <li>Apollo Domain/OS - Wikipedia</li> </ul>"},{"location":"os/aros/","title":"AROS","text":"","tags":["AROS","AROS Research Operating System","Amiga Research Operating System"]},{"location":"os/aros/#identification","title":"Identification","text":"<code>__AROS__</code> <p>Identifies the operating system as AROS.</p>","tags":["AROS","AROS Research Operating System","Amiga Research Operating System"]},{"location":"os/aros/#references","title":"References","text":"<ul> <li>AROS - Wikipedia</li> </ul>","tags":["AROS","AROS Research Operating System","Amiga Research Operating System"]},{"location":"os/bada/","title":"Bada","text":"<p>Based on Nucleus RTOS.</p>"},{"location":"os/bada/#references","title":"References","text":"<ul> <li>Bada - Wikipedia</li> </ul>"},{"location":"os/beos/","title":"BeOS","text":""},{"location":"os/beos/#identification","title":"Identification","text":"<code>__BEOS__</code> <p>Identifies the operating system as BeOS.</p>"},{"location":"os/beos/#versioning","title":"Versioning","text":"<code>B_BEOS_VERSION</code> <p>An integer for the version of BeOS, encoded as a hexadecimal integer with the general form of &lt;AABB&gt;<sub>16</sub>, where:</p> <ul> <li>&lt;AA&gt;<sub>16</sub> is the major version; and</li> <li>&lt;BB&gt;<sub>16</sub> is the minor version.</li> </ul> <p>Defined in <code>&lt;BeBuild.h&gt;</code>.</p>"},{"location":"os/beos/#references","title":"References","text":"<ul> <li>BeOS - Wikipedia</li> <li>BeBuild.h</li> </ul>"},{"location":"os/blue-gene/","title":"Blue Gene","text":""},{"location":"os/blue-gene/#identification","title":"Identification","text":"<code>__bg__</code> <p>Identifies the target platform as Blue Gene.</p> <code>__bgq__</code> <p>Identifies the target operating system as Blue Gene Q.</p> <code>__THW_BLUEGENE__</code> <p>Identifies the target platform as Blue Gene.</p> <code>__TOS_BGQ__</code> <p>Identifies the target operating system as Blue Gene Q.</p>"},{"location":"os/blue-gene/#references","title":"References","text":"<ul> <li>Blue Gene - Wikipedia</li> </ul>"},{"location":"os/bsd/","title":"BSD Environment","text":""},{"location":"os/bsd/#identification","title":"Identification","text":"<code>BSD</code> <p>Identifies the environment as BSD.</p> <p>Defined in <code>&lt;sys/param.h&gt;</code>.</p> <code>_SYSTYPE_BSD</code> <p>Identifies the environment as BSD.</p> <p>For the sake of portability, predefined macros for identifying BSDi, DragonFly, FreeBSD, MidnightBSD, NetBSD, OpenBSD, and/or other variants of BSD can potentially be used prior to including <code>&lt;sys/param.h&gt;</code>.</p>"},{"location":"os/bsd/#versioning","title":"Versioning","text":"<code>BSD</code> <p>An integer for the version of BSD, which is encoded as a decimal integer with the general form of &lt;yyyymm&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;yyyy&gt;<sub>10</sub> is a year; and</li> <li>&lt;mm&gt;<sub>10</sub> is a month;</li> </ul> <p>corresponding to the release date for a given version of BSD.</p>"},{"location":"os/bsdi/","title":"BSDi","text":"","tags":["BSDi","BSD/OS"]},{"location":"os/bsdi/#identification","title":"Identification","text":"<code>bsdi</code> <code>__bsdi</code> <code>__bsdi__</code> <p>Identifies the target operating system as BSDi.</p>","tags":["BSDi","BSD/OS"]},{"location":"os/bsdi/#references","title":"References","text":"<ul> <li>BSDi - Wikipedia</li> </ul>","tags":["BSDi","BSD/OS"]},{"location":"os/convex/","title":"Convex","text":""},{"location":"os/convex/#identification","title":"Identification","text":"<code>__convex__</code> <p>Identifies the operating system as ConvexOS.</p>"},{"location":"os/convex/#references","title":"References","text":"<ul> <li>Convex - Wikipedia</li> </ul>"},{"location":"os/cpm/","title":"CP/M","text":""},{"location":"os/cpm/#identification","title":"Identification","text":"<code>CPM</code> <code>__CPM</code> <p>Identifies the target operating system as CP/M.</p>"},{"location":"os/cpm/#references","title":"References","text":"<ul> <li>CP/M Wikipedia</li> </ul>"},{"location":"os/cygwin/","title":"Cygwin Environment","text":""},{"location":"os/cygwin/#identification","title":"Identification","text":"<code>__CYGWIN__</code> <p>Identifies the environment as Cygwin.</p> <code>__CYGWIN32__</code> <p>Identifies the environment as Cygwin in 32-bit mode.</p>"},{"location":"os/cygwin/#versioning","title":"Versioning","text":"<code>CYGWIN_VERSION_API_MAJOR</code>: <p>An integer for the major version of Cygwin.</p> <p>Defined in <code>&lt;cygwin/version.h&gt;</code>.</p> <code>CYGWIN_VERSION_API_MINOR</code>: <p>An integer for the minor version of Cygwin.</p> <p>Defined in <code>&lt;cygwin/version.h&gt;</code>.</p>"},{"location":"os/cygwin/#references","title":"References","text":"<ul> <li>Cygwin</li> <li>Cygwin - Wikipedia</li> <li>Cygwin - GitHub</li> <li>cygwin/version.h</li> </ul>"},{"location":"os/darwin/","title":"Darwin Kernel","text":""},{"location":"os/darwin/#identification","title":"Identification","text":"<p><code>__APPLE__</code> <code>__APPLE_CC__</code> <code>__MACH__</code></p>"},{"location":"os/darwin/#references","title":"References","text":"<ul> <li>Darwin - Wikipedia</li> <li>gcc/config/darwin-c.cc</li> <li>Darwin XNU - GitHub</li> </ul>"},{"location":"os/dgux/","title":"DG/UX","text":""},{"location":"os/dgux/#identification","title":"Identification","text":"<code>__DATA_GENERAL__</code> <p>Identifies the target operating system as DG/UX.</p> <code>DGUX</code> <code>__DGUX__</code> <p>Identifies the target operating system as DG/UX.</p> <code>__dgux__</code> <p>Identifies the target operating system as DG/UX.</p>"},{"location":"os/dgux/#references","title":"References","text":"<ul> <li>DG/UX - Wikipedia</li> </ul>"},{"location":"os/dos/","title":"DOS","text":""},{"location":"os/dos/#identification","title":"Identification","text":"<code>__DOS__</code> <p>Identifies the operating system as DOS.</p> <code>MSDOS</code> <code>_MSDOS</code> <code>__MSDOS__</code> <p>Identifies the operating system as DOS.</p>"},{"location":"os/dos/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/MS-DOS</li> </ul>"},{"location":"os/dragonfly/","title":"DragonFly","text":""},{"location":"os/dragonfly/#identification","title":"Identification","text":"<code>__DragonFly__</code> <p>Identifies the target operating system as DragonFly.</p>"},{"location":"os/dragonfly/#versioning","title":"Versioning","text":"<code>__DragonFly_version</code> <p>An integer for the version of DragonFly, which is encoded as a decimal integer with the general form of &lt;ABBBCC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version;</li> <li>&lt;BBB&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;CC&gt;<sub>10</sub> is the patch version.</li> </ul> <p>Defined in <code>&lt;sys/param.h&gt;</code>.</p>"},{"location":"os/dragonfly/#references","title":"References","text":"<ul> <li>DragonFly - GitHub</li> <li>sys/sys/param.h</li> <li>gcc/config/dragonfly.h</li> </ul>"},{"location":"os/dynix/","title":"DYNIX/ptx","text":""},{"location":"os/dynix/#identification","title":"Identification","text":"<code>sequent</code> <p>Identifies the operating system as DYNIX/ptx.</p> <code>_SEQUENT_</code> <p>Identifies the operating system as DYNIX/ptx.</p>"},{"location":"os/dynix/#references","title":"References","text":"<ul> <li>Dynix - Wikipedia</li> </ul>"},{"location":"os/ecos/","title":"eCos","text":""},{"location":"os/ecos/#identification","title":"Identification","text":"<code>__ECOS</code> <p>Identifies the operating system as eCos.</p>"},{"location":"os/ecos/#references","title":"References","text":"<ul> <li>eCos - Wikipedia</li> </ul>"},{"location":"os/embedded/","title":"Embedded","text":""},{"location":"os/emscripten/","title":"Emscripten Environment","text":"<code>EMSCRIPTEN</code> <code>__EMSCRIPTEN__</code> <p>Identifies the target environment as Emscripten.</p>"},{"location":"os/emscripten/#versioning","title":"Versioning","text":"<code>__EMSCRIPTEN_major__</code> <p>An integer for the major version of Emscripten.</p> <p>Defined in <code>&lt;emscripten/version.h&gt;</code>.</p> <code>__EMSCRIPTEN_minor__</code> <p>An integer for the major version of Emscripten.</p> <p>Defined in <code>&lt;emscripten/version.h&gt;</code>.</p> <code>__EMSCRIPTEN_tiny__</code> <p>An integer for the major version of Emscripten.</p> <p>Defined in <code>&lt;emscripten/version.h&gt;</code>.</p>"},{"location":"os/emscripten/#references","title":"References","text":"<ul> <li>Emscripten</li> <li>Emscripten - Wikipedia</li> <li>Emscripten - GitHub</li> <li>Detecting Emscripten in Preprocessor</li> </ul>"},{"location":"os/emx/","title":"EMX Environment","text":""},{"location":"os/emx/#identification","title":"Identification","text":"<code>__EMX__</code> <p>Identifies the environment as EMX.</p>"},{"location":"os/emx/#references","title":"References","text":"<ul> <li>EMX - Wikipedia</li> </ul>"},{"location":"os/freebsd-kernel/","title":"FreeBSD Kernel","text":""},{"location":"os/freebsd-kernel/#identification","title":"Identification","text":"<code>__FreeBSD_kernel__</code> <p>Identifies the target operating system as the FreeBSD kernel.</p>"},{"location":"os/freebsd/","title":"FreeBSD","text":""},{"location":"os/freebsd/#identification","title":"Identification","text":"<code>__FreeBSD__</code> <p>Identifies the target operating system as FreeBSD.</p>"},{"location":"os/freebsd/#versioning","title":"Versioning","text":"<code>__FreeBSD__</code> <p>An integer for the major version of FreeBSD.</p> <code>__FreeBSD_version</code> <p>An integer for the version of FreeBSD, which is encoded as a decimal integer with the general form of &lt;AABBCDD&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;AA&gt;<sub>10</sub> is the major version;</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version;</li> <li>&lt;C&gt;<sub>10</sub> indicates the release type; and</li> <li>&lt;DD&gt;<sub>10</sub> is a build version.</li> </ul> <p>The value of &lt;C&gt;<sub>10</sub> is between 0 and 4, inclusive, for releases; otherwise, the value of &lt;C&gt;<sub>10</sub> is between 5 and 9, inclusive.</p> <p>Defined in <code>&lt;sys/param.h&gt;</code>.</p>"},{"location":"os/freebsd/#references","title":"References","text":"<ul> <li>https://cgit.freebsd.org/src/tree/sys/sys/param.h#n47</li> <li>https://docs.freebsd.org/en/books/porters-handbook/versions/</li> <li>https://github.com/gcc-mirror/gcc/blob/bca515ff1893fe4ca1a9042364af3c43f93a397c/gcc/config/freebsd-spec.h#L36</li> </ul>"},{"location":"os/fuchsia/","title":"Fuchsia","text":"","tags":["Fuchsia","Zircon","Zircon Kernel"]},{"location":"os/fuchsia/#identification","title":"Identification","text":"<code>__fuchsia__</code> <p>Identifies the target operating system as Fuchsia.</p> <code>__Fuchsia__</code> <p>Identifies the target operating system as Fuchsia.</p>","tags":["Fuchsia","Zircon","Zircon Kernel"]},{"location":"os/fuchsia/#versioning","title":"Versioning","text":"<code>__Fuchsia_API_level__</code> <p>An integer for the Fuchsia API level.</p>","tags":["Fuchsia","Zircon","Zircon Kernel"]},{"location":"os/fuchsia/#references","title":"References","text":"<ul> <li>Fuchsia - Wikipedia</li> <li>clang/lib/Basic/Targets/OSTargets.h</li> <li>gcc/config/fuchsia.h</li> <li>Fuchsia - Platform Versioning</li> </ul>","tags":["Fuchsia","Zircon","Zircon Kernel"]},{"location":"os/gnu-hurd/","title":"GNU/Hurd","text":""},{"location":"os/gnu-hurd/#identification","title":"Identification","text":"<code>__GNU__</code> <p>Identifies the target operating system as GNU/Hurd.</p> <code>__gnu_hurd__</code> <p>Identifies the target operating system as GNU/Hurd.</p>"},{"location":"os/gnu-hurd/#references","title":"References","text":""},{"location":"os/gnu-linux/","title":"GNU/Linux","text":""},{"location":"os/gnu-linux/#identification","title":"Identification","text":"<code>__gnu_linux</code> <code>__gnu_linux__</code> <p>Identifies the target operating system as GNU/Linux.</p>"},{"location":"os/gnu-linux/#references","title":"References","text":""},{"location":"os/haiku/","title":"Haiku","text":""},{"location":"os/haiku/#identification","title":"Identification","text":"<code>__HAIKU__</code> <p>Identifies the target operating system as Haiku.</p>"},{"location":"os/haiku/#versioning","title":"Versioning","text":"<code>B_HAIKU_VERSION</code> <p>An integer for the Haiku version, which is encoded as a hexadecimal integer with the general form of &lt;AABBCC&gt;<sub>16</sub>, where:</p> <ul> <li>&lt;AA&gt;<sub>16</sub> is the major version;</li> <li>&lt;BB&gt;<sub>16</sub> is the minor version; and</li> <li>&lt;CC&gt;<sub>16</sub> is the patch version.</li> </ul>"},{"location":"os/haiku/#references","title":"References","text":"<ul> <li>BeBuild.h</li> </ul>"},{"location":"os/hiuxmpp/","title":"HI-UX MPP","text":""},{"location":"os/hiuxmpp/#identification","title":"Identification","text":"<code>__hiuxmpp</code> <p>Identifies the operating system as HI-UX MPP.</p>"},{"location":"os/hiuxmpp/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/HI-UX</li> </ul>"},{"location":"os/hpux/","title":"HP/UX","text":""},{"location":"os/hpux/#identification","title":"Identification","text":"<code>hpux</code> <code>__hpux</code> <code>__hpux__</code> <p>Identifies the target operating system as HP/UX.</p>"},{"location":"os/hpux/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/HP-UX</li> </ul>"},{"location":"os/illumos/","title":"illumOS","text":""},{"location":"os/illumos/#identification","title":"Identification","text":"<code>__illumos__</code> <p>Identifies the operating system as illumOS.</p>"},{"location":"os/illumos/#references","title":"References","text":"<ul> <li>https://illumos.org/</li> <li>https://www.illumos.org/issues/13726</li> </ul>"},{"location":"os/integrity/","title":"INTEGRITY","text":""},{"location":"os/integrity/#identification","title":"Identification","text":"<code>__INTEGRITY</code> <p>Identifies the operating system as INTEGRITY.</p>"},{"location":"os/integrity/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Integrity_(operating_system)</li> </ul>"},{"location":"os/interix/","title":"Interix","text":""},{"location":"os/interix/#identification","title":"Identification","text":"<code>__INTERIX</code> <p>Identifies the operating system as Interix.</p>"},{"location":"os/interix/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Interix</li> </ul>"},{"location":"os/ios/","title":"iOS","text":""},{"location":"os/ios/#references","title":"References","text":"<ul> <li>https://stackoverflow.com/questions/12132933/preprocessor-macro-for-os-x-targets</li> </ul>"},{"location":"os/irix/","title":"Irix","text":""},{"location":"os/irix/#identification","title":"Identification","text":"<code>sgi</code> <code>__sgi__</code> <p>Identifies the target operating system as Irix.</p>"},{"location":"os/irix/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Irix</li> </ul>"},{"location":"os/kfreebsd/","title":"k/FreeBSD","text":""},{"location":"os/kfreebsd/#identification","title":"Identification","text":"<code>__GLIBC__</code> and <code>__FreeBSD_kernel__</code> <p>Identifies the target operating system as k/FreeBSD.</p>"},{"location":"os/kfreebsd/#references","title":"References","text":"<ul> <li>https://github.com/gcc-mirror/gcc/blob/bca515ff1893fe4ca1a9042364af3c43f93a397c/gcc/config/kfreebsd-gnu.h</li> </ul>"},{"location":"os/kopensolaris/","title":"k/OpenSolaris","text":""},{"location":"os/kopensolaris/#identification","title":"Identification","text":"<code>__GLIBC__</code> and <code>__OpenSolaris_kernel__</code> <p>Identifies the target operating system as k/OpenSolaris.</p>"},{"location":"os/kopensolaris/#references","title":"References","text":""},{"location":"os/linux/","title":"Linux Kernel","text":""},{"location":"os/linux/#identification","title":"Identification","text":"<code>linux</code> <code>__linux</code> <code>__linux__</code> <p>Identifies the target operating system as the Linux kernel.</p>"},{"location":"os/linux/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Linux_kernel</li> <li>http://www.faqs.org/docs/Linux-HOWTO/GCC-HOWTO.html#INDEX.25</li> </ul>"},{"location":"os/lynx/","title":"LynxOS","text":""},{"location":"os/lynx/#identification","title":"Identification","text":"<code>__Lynx__</code> <p>Identifies the target operating system as LynxOS.</p>"},{"location":"os/lynx/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/LynxOS</li> </ul>"},{"location":"os/macos/","title":"macOS","text":""},{"location":"os/midnightbsd-kernel/","title":"MidnightBSD Kernel","text":""},{"location":"os/midnightbsd-kernel/#identification","title":"Identification","text":"<code>__MidnightBSD_kernel__</code> <p>Identifies the target operating system as the MidnightBSD kernel.</p>"},{"location":"os/midnightbsd/","title":"MidnightBSD","text":""},{"location":"os/midnightbsd/#identification","title":"Identification","text":"<code>__MidnightBSD__</code> <p>Identifies the target operating system as MidnightBSD.</p>"},{"location":"os/midnightbsd/#versioning","title":"Versioning","text":"<code>__MidnightBSD_version</code> <p>An integer for the version of MidnightBSD, which is encoded as a decimal integer with the general form of &lt;AABBCDD&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;AA&gt;<sub>10</sub> is the major version;</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version;</li> <li>&lt;C&gt;<sub>10</sub> indicates the release type; and</li> <li>&lt;DD&gt;<sub>10</sub> is the build version.</li> </ul> <p>The value of &lt;C&gt;<sub>10</sub> is between 0 and 4 for releases; otherwise, the value of &lt;C&gt;<sub>10</sub> is between 5 and 9, inclusive.</p>"},{"location":"os/midnightbsd/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/MidnightBSD</li> <li>https://github.com/MidnightBSD/src</li> <li>https://github.com/MidnightBSD/src/blob/43e574daadc5011ff1f5f258bbcb82c68e9e1cae/sys/sys/param.h#L55</li> </ul>"},{"location":"os/mingw/","title":"MinGW Environment","text":""},{"location":"os/mingw/#identification","title":"Identification","text":"<code>__MINGW32__</code> <p>Identifies the environment as MinGW.</p>"},{"location":"os/mingw/#references","title":"References","text":""},{"location":"os/minix/","title":"MINIX","text":""},{"location":"os/minix/#identification","title":"Identification","text":"<code>__minix</code> <p>Identifies the operating system as MINIX.</p>"},{"location":"os/minix/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Minix</li> </ul>"},{"location":"os/mint/","title":"MiNT","text":"","tags":["MiNT is Not TOS","MiNT is Now TOS"]},{"location":"os/mint/#identification","title":"Identification","text":"<code>__MINT__</code> <p>Identifies the operating system as MiNT.</p>","tags":["MiNT is Not TOS","MiNT is Now TOS"]},{"location":"os/mint/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/MiNT</li> </ul>","tags":["MiNT is Not TOS","MiNT is Now TOS"]},{"location":"os/morphos/","title":"MorphOS","text":""},{"location":"os/morphos/#identification","title":"Identification","text":"<code>__MORPHOS__</code> <p>Identifies the operating system as MorphOS.</p>"},{"location":"os/morphos/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Morphos</li> </ul>"},{"location":"os/moxiebox/","title":"moxiebox Environment","text":""},{"location":"os/moxiebox/#identification","title":"Identification","text":"<code>__moxiebox__</code> <p>Identifies the target environment as moxiebox.</p>"},{"location":"os/moxiebox/#references","title":"References","text":""},{"location":"os/mpeix/","title":"MPE/iX","text":""},{"location":"os/mpeix/#identification","title":"Identification","text":"<code>mpeix</code> <p>Identifies the operating system as MPE/iX.</p> <code>__mpexl</code> <p>Identifies the operating system as MPE/iX.</p>"},{"location":"os/mpeix/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/MPE</li> </ul>"},{"location":"os/msx/","title":"MSX","text":""},{"location":"os/msx/#identification","title":"Identification","text":"<code>MSX</code> <code>__MSX</code> <p>Identifies the operating system as MSX.</p>"},{"location":"os/msx/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/MSX</li> </ul>"},{"location":"os/native-client/","title":"Native Client","text":""},{"location":"os/native-client/#identification","title":"Identification","text":"<code>__native_client__</code> <p>Identifies the target operating system as Native Client.</p>"},{"location":"os/native-client/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Google_Native_Client</li> </ul>"},{"location":"os/netbsd/","title":"NetBSD","text":""},{"location":"os/netbsd/#identification","title":"Identification","text":"<code>__NetBSD__</code> <p>Identifies the target operating system as NetBSD.</p>"},{"location":"os/netbsd/#versioning","title":"Versioning","text":"<p><code>__NetBSD_Version__</code></p> <p><code>NetBSD</code></p> <p><code>NetBSD&lt;major&gt;_&lt;minor&gt;</code></p> <ul> <li>https://github.com/NetBSD/src</li> <li>https://github.com/NetBSD/src/blob/trunk/sys/sys/param.h#L70</li> <li>https://github.com/gcc-mirror/gcc/blob/master/gcc/config/netbsd.h#L24</li> </ul>"},{"location":"os/nextstep/","title":"NeXTSTEP","text":""},{"location":"os/nextstep/#identification","title":"Identification","text":"<code>NeXT</code> <p>Identifies the operating system as NeXTSTEP.</p>"},{"location":"os/nextstep/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/NeXTSTEP</li> </ul>"},{"location":"os/nonstop/","title":"NonStop","text":""},{"location":"os/nonstop/#identification","title":"Identification","text":"<code>__TANDEM</code> <p>Identifies the operating system as NonStop.</p>"},{"location":"os/nonstop/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/NonStop</li> </ul>"},{"location":"os/nucleus-rtos/","title":"Nucleus RTOS","text":""},{"location":"os/nucleus-rtos/#identification","title":"Identification","text":"<code>__nucleus__</code> <p>Identifies the operating system as Nucleus RTOS.</p>"},{"location":"os/nucleus-rtos/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Nucleus_RTOS</li> </ul>"},{"location":"os/ohos/","title":"OHOS","text":"<code>__OHOS__</code> <p>Identifies the target operating system as OHOS.</p> <code>__OHOS_FAMILY__</code> <p>Identifies the target operating system as OHOS.</p>","tags":["OHOS","Open HOS"]},{"location":"os/ohos/#versioning","title":"Versioning","text":"<code>__OHOS_Major__</code> <p>An integer for the major version of OHOS.</p> <code>__OHOS_Minor__</code> <p>An integer for the minor version of OHOS.</p> <code>__OHOS_Micro__</code> <p>An integer for the patch version of OHOS.</p>","tags":["OHOS","Open HOS"]},{"location":"os/ohos/#references","title":"References","text":"","tags":["OHOS","Open HOS"]},{"location":"os/openbsd/","title":"OpenBSD","text":""},{"location":"os/openbsd/#identification","title":"Identification","text":"<code>__OpenBSD__</code> <p>Identifies the target operating system as OpenBSD.</p>"},{"location":"os/openbsd/#versioning","title":"Versioning","text":"<p><code>OpenBSD</code></p> <p><code>OpenBSD&lt;major&gt;_&lt;minor&gt;</code></p> Macro Version <code>OpenBSD7_5</code> 7.5.0 <code>OpenBSD7_4</code> 7.4.0 <code>OpenBSD7_3</code> 7.3.0 <code>OpenBSD7_2</code> 7.2.0 <code>OpenBSD7_1</code> 7.1.0 <code>OpenBSD7_0</code> 7.0.0 <code>OpenBSD6_9</code> 6.9.0 <code>OpenBSD6_8</code> 6.8.0 <code>OpenBSD6_7</code> 6.7.0 <code>OpenBSD6_6</code> 6.6.0 <code>OpenBSD6_5</code> 6.5.0 <code>OpenBSD6_4</code> 6.4.0 <code>OpenBSD6_3</code> 6.3.0 <code>OpenBSD6_2</code> 6.2.0 <code>OpenBSD6_1</code> 6.1.0 <code>OpenBSD6_0</code> 6.0.0 <code>OpenBSD5_9</code> 5.9.0 <code>OpenBSD5_8</code> 5.8.0 <code>OpenBSD5_7</code> 5.7.0 <code>OpenBSD5_6</code> 5.6.0 <code>OpenBSD5_5</code> 5.5.0 <code>OpenBSD5_4</code> 5.4.0 <code>OpenBSD5_3</code> 5.3.0 <code>OpenBSD5_2</code> 5.2.0 <code>OpenBSD5_1</code> 5.1.0 <code>OpenBSD5_0</code> 5.0.0 <code>OpenBSD4_9</code> 4.9.0 <code>OpenBSD4_8</code> 4.8.0 <code>OpenBSD4_7</code> 4.7.0 <code>OpenBSD4_6</code> 4.6.0 <code>OpenBSD4_5</code> 4.5.0 <code>OpenBSD4_4</code> 4.4.0 <code>OpenBSD4_3</code> 4.3.0 <code>OpenBSD4_2</code> 4.2.0 <code>OpenBSD4_1</code> 4.1.0 <code>OpenBSD4_0</code> 4.0.0 <code>OpenBSD3_9</code> 3.9.0 <code>OpenBSD3_8</code> 3.8.0 <code>OpenBSD3_7</code> 3.7.0 <code>OpenBSD3_6</code> 3.6.0 <code>OpenBSD3_5</code> 3.5.0 <code>OpenBSD3_4</code> 3.4.0 <code>OpenBSD3_3</code> 3.3.0 <code>OpenBSD3_2</code> 3.2.0 <code>OpenBSD3_1</code> 3.1.0 <code>OpenBSD3_0</code> 3.0.0 <code>OpenBSD2_9</code> 2.9.0 <code>OpenBSD2_8</code> 2.8.0 <code>OpenBSD2_7</code> 2.7.0 <code>OpenBSD2_6</code> 2.6.0 <code>OpenBSD2_5</code> 2.5.0 <code>OpenBSD2_4</code> 2.4.0 <code>OpenBSD2_3</code> 2.3.0 <code>OpenBSD2_2</code> 2.2.0 <code>OpenBSD2_1</code> 2.1.0 <code>OpenBSD2_0</code> 2.0.0 <code>NetBSD1_2</code> 1.2.0 <code>NetBSD1_1</code> 1.1.0"},{"location":"os/openbsd/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/OpenBSD</li> <li>https://github.com/openbsd/src/blob/master/sys/sys/param.h#L44</li> </ul>"},{"location":"os/opensolaris-kernel/","title":"OpenSolaris Kernel","text":""},{"location":"os/opensolaris-kernel/#identification","title":"Identification","text":"<code>__OpenSolaris_kernel__</code> <p>Identifies the target operating system as the OpenSolaris kernel.</p>"},{"location":"os/opensolaris-kernel/#references","title":"References","text":""},{"location":"os/orbis/","title":"Orbis","text":"","tags":["Orbis","PS4","Playstation 4"]},{"location":"os/orbis/#identification","title":"Identification","text":"<code>__ORBIS__</code> <p>Identifies the target operating system as Orbis.</p>","tags":["Orbis","PS4","Playstation 4"]},{"location":"os/orbis/#references","title":"References","text":"","tags":["Orbis","PS4","Playstation 4"]},{"location":"os/os2/","title":"OS/2","text":""},{"location":"os/os2/#identification","title":"Identification","text":"<code>OS2</code> <code>__OS2</code> <code>__OS2__</code> <p>Identifies the target operating system as OS/2.</p> <code>__TOS_OS2__</code> <p>Identifies the target operating system as OS/2.</p>"},{"location":"os/os2/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/OS/2</li> </ul>"},{"location":"os/os400/","title":"OS/400","text":"","tags":["IBM i","IBM integrated","IBMi","OS/400","OS400","i5/OS"]},{"location":"os/os400/#identification","title":"Identification","text":"<code>__OS400__</code> <p>Identifies the target operating system as OS/400.</p>","tags":["IBM i","IBM integrated","IBMi","OS/400","OS400","i5/OS"]},{"location":"os/os400/#versioning","title":"Versioning","text":"<code>__OS400_TGTVRM__</code> <p>An integer for the version of OS/400, encoded as a decimal integer with the general form of &lt;ABC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version;</li> <li>&lt;B&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;C&gt;<sub>10</sub> is the patch version.</li> </ul>","tags":["IBM i","IBM integrated","IBMi","OS/400","OS400","i5/OS"]},{"location":"os/os400/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/IBM_i</li> </ul>","tags":["IBM i","IBM integrated","IBMi","OS/400","OS400","i5/OS"]},{"location":"os/os9/","title":"Microware OS-9","text":""},{"location":"os/os9/#identification","title":"Identification","text":"<code>__OS9000</code> <p>Identifies the operating system as Microware OS-9.</p> <code>_OSK</code> <p>Identifies the operating system as Microware OS-9.</p>"},{"location":"os/os9/#references","title":"References","text":""},{"location":"os/osf1/","title":"OSF/1","text":"","tags":["DEC OSF/1 AXP","Digital UNIX","OSF/1","OSF1","Tru64","Tru64 UNIX"]},{"location":"os/osf1/#identification","title":"Identification","text":"<code>__osf</code> <code>__osf__</code> <p>Identifies the operating system as OSF/1.</p>","tags":["DEC OSF/1 AXP","Digital UNIX","OSF/1","OSF1","Tru64","Tru64 UNIX"]},{"location":"os/osf1/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Digital_UNIX</li> </ul>","tags":["DEC OSF/1 AXP","Digital UNIX","OSF/1","OSF1","Tru64","Tru64 UNIX"]},{"location":"os/palmos/","title":"PalmOS","text":""},{"location":"os/palmos/#identification","title":"Identification","text":"<code>__palmos__</code> <p>Identifies the operating system as PalmOS.</p>"},{"location":"os/palmos/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Palmos</li> </ul>"},{"location":"os/phoenix/","title":"Phoenix RTOS","text":""},{"location":"os/phoenix/#identification","title":"Identification","text":"<code>phoenix</code> <code>__phoenix</code> <code>__phoenix__</code> <p>Identifies the target operating system as Phoenix RTOS.</p>"},{"location":"os/phoenix/#references","title":"References","text":""},{"location":"os/plan9/","title":"Plan9","text":""},{"location":"os/plan9/#identification","title":"Identification","text":"<code>EPLAN9</code> <p>Identifies the operating system as Plan9.</p>"},{"location":"os/plan9/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Plan_9_from_Bell_Labs</li> </ul>"},{"location":"os/ppu/","title":"PPU","text":"","tags":["PPU","PS3","Playstation 3"]},{"location":"os/ppu/#identification","title":"Identification","text":"<p><code>__PPU__</code> <code>__CELLOS_LV2__</code></p>","tags":["PPU","PS3","Playstation 3"]},{"location":"os/ppu/#references","title":"References","text":"","tags":["PPU","PS3","Playstation 3"]},{"location":"os/prospero/","title":"Prospero","text":"","tags":["Prospero","PS5","Playstation 5"]},{"location":"os/prospero/#identification","title":"Identification","text":"<code>__PROSPERO__</code> <p>Identifies the target operating system as Prospero.</p>","tags":["Prospero","PS5","Playstation 5"]},{"location":"os/prospero/#references","title":"References","text":"","tags":["Prospero","PS5","Playstation 5"]},{"location":"os/pyramid/","title":"Pyramid DC/OSx","text":""},{"location":"os/pyramid/#identification","title":"Identification","text":"<code>pyr</code> <p>Identifies the operating system as DC/OSx.</p>"},{"location":"os/pyramid/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/DC/OSx</li> </ul>"},{"location":"os/qnx/","title":"QNX","text":""},{"location":"os/qnx/#identification","title":"Identification","text":"<code>__QNX__</code> <p>Identifies the operating system as QNX.</p> <code>__QNXNTO__</code> <p>Identifies the operating system as QNX NTO.</p>"},{"location":"os/qnx/#versioning","title":"Versioning","text":"<code>_NTO_VERSION</code> <p>An integer for the version of QNX NTO, which is encoded as a decimal integer with the general form of &lt;ABB&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version; and</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version.</li> </ul> <p>Only available if <code>__QNXNTO__</code> is defined.</p> <p>Defined in <code>&lt;sys/neutrino.h&gt;</code>.</p> <code>BBNDK_VERSION_CURRENT</code> <p>An integer for the version of the Blackberry NDK, which is encoded as a decimal integer with the general form of &lt;AABBBBCCCC&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;AA&gt;<sub>10</sub> is the major version;</li> <li>&lt;BBBB&gt;<sub>10</sub> is the minor version; and</li> <li>&lt;CCCC&gt;<sub>10</sub> is the patch version.</li> </ul> <p>Defined in <code>&lt;bbndk.h&gt;</code>.</p>"},{"location":"os/qnx/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/QNX</li> </ul>"},{"location":"os/rdos/","title":"RDOS","text":""},{"location":"os/rdos/#identification","title":"Identification","text":"<code>__RDOS__</code> <p>Identifies the target operating system as RDOS.</p>"},{"location":"os/rdos/#references","title":"References","text":""},{"location":"os/reliant/","title":"Reliant UNIX","text":""},{"location":"os/reliant/#identification","title":"Identification","text":"<code>sinux</code> <p>Identifies the operating system as Reliant UNIX.</p>"},{"location":"os/reliant/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Reliant_UNIX</li> </ul>"},{"location":"os/rtems/","title":"RTEMS","text":""},{"location":"os/rtems/#identification","title":"Identification","text":"<code>__rtems__</code> <p>Identifies the target operating system as RTEMS.</p>"},{"location":"os/rtems/#references","title":"References","text":""},{"location":"os/sco-openserver/","title":"SCO OpenServer","text":""},{"location":"os/sco-openserver/#identification","title":"Identification","text":"<code>_SCO_DS</code> <p>Identifies the target operating system as SCO OpenServer.</p>"},{"location":"os/sco-openserver/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/SCO_OpenServer</li> </ul>"},{"location":"os/sdemtk/","title":"SDE MTK","text":""},{"location":"os/serenityos/","title":"SerenityOS","text":""},{"location":"os/serenityos/#identification","title":"Identification","text":"<code>__serenity__</code> <p>Identifies the target operating system as SerenityOS.</p>"},{"location":"os/serenityos/#references","title":"References","text":"<ul> <li>https://serenityos.org/</li> </ul>"},{"location":"os/solaris/","title":"Solaris","text":""},{"location":"os/solaris/#identification","title":"Identification","text":"<p><code>sun</code> <code>__sun</code> <code>__sun__</code></p> <p><code>__svr4__</code> <code>__SVR4</code></p>"},{"location":"os/solaris/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Solaris_Operating_Environment</li> </ul>"},{"location":"os/stratus-vos/","title":"Stratus VOS","text":""},{"location":"os/stratus-vos/#identification","title":"Identification","text":"<code>__VOS__</code> <p>Identifies the operating system as Stratus VOS.</p>"},{"location":"os/stratus-vos/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Stratus_VOS</li> </ul>"},{"location":"os/sunos/","title":"SunOS","text":""},{"location":"os/svr4/","title":"SVR4 Environment","text":""},{"location":"os/svr4/#identification","title":"Identification","text":"<p><code>__sysv__</code> <code>__svr4__</code> <code>__SVR4</code> <code>_SYSTYPE_SVR4</code></p>"},{"location":"os/svr4/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/UNIX_System_V</li> </ul>"},{"location":"os/syllable/","title":"Syllable","text":""},{"location":"os/syllable/#identification","title":"Identification","text":"<code>__SYLLABLE__</code> <p>Identifies the operating system as Syllable.</p>"},{"location":"os/syllable/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Syllable_Desktop</li> </ul>"},{"location":"os/symbian/","title":"Symbian OS","text":""},{"location":"os/symbian/#identification","title":"Identification","text":"<code>__SYMBIAN32__</code> <p>Identifies the operating system as Symbian OS.</p>"},{"location":"os/symbian/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Symbian_OS</li> </ul>"},{"location":"os/tpf/","title":"TPF","text":""},{"location":"os/tpf/#identification","title":"Identification","text":"<code>tpf</code> <code>__tpf</code> <code>__tpf__</code> <p>Identifies the target operating system as TPF.</p>"},{"location":"os/tpf/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Transaction_Processing_Facility</li> </ul>"},{"location":"os/uclinux/","title":"uCLinux","text":""},{"location":"os/uclinux/#identification","title":"Identification","text":"<code>__uClinux__</code> <p>Identifies the target operating system as uCLinux.</p>"},{"location":"os/uclinux/#references","title":"References","text":""},{"location":"os/ultrix/","title":"Ultrix","text":""},{"location":"os/ultrix/#identification","title":"Identification","text":"<code>ultrix</code> <code>__ultrix</code> <code>__ultrix__</code> <p>Identifies the operating system as Ultrix.</p>"},{"location":"os/ultrix/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Ultrix</li> </ul>"},{"location":"os/unicos-mp/","title":"UNICOS/mp","text":""},{"location":"os/unicos-mp/#identification","title":"Identification","text":"<code>_CRAY</code> <code>__crayx1</code> <p>Identifies the operating system as UNICOS/mp.</p>"},{"location":"os/unicos-mp/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Unicos</li> </ul>"},{"location":"os/unicos/","title":"UNICOS","text":""},{"location":"os/unicos/#identification","title":"Identification","text":"<code>_UNICOS</code> <p>Identifies the operating system as UNICOS.</p>"},{"location":"os/unicos/#versioning","title":"Versioning","text":"<code>_UNICOS</code> <p>An integer for the major version of UNICOS.</p>"},{"location":"os/unicos/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/UNICOS</li> </ul>"},{"location":"os/unix/","title":"UNIX Environment","text":""},{"location":"os/unix/#identification","title":"Identification","text":"<code>unix</code> <code>__unix</code> <code>__unix__</code> <p>Identifies the target environment as UNIX.</p> <code>__UNIX__</code> <p>Identifies the target environment as UNIX.</p>"},{"location":"os/unix/#references","title":"References","text":"<ul> <li>https://en.wikipedia.org/wiki/Unix</li> </ul>"},{"location":"os/unixware/","title":"UnixWare","text":""},{"location":"os/unixware/#identification","title":"Identification","text":"<code>sco</code> <p>Identifies the operating system as UnixWare.</p> <code>_UNIXWARE7</code> <p>Identifies the operating system as UnixWare.</p>"},{"location":"os/unixware/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/UnixWare</li> </ul>"},{"location":"os/uwin/","title":"U/Win Environment","text":""},{"location":"os/uwin/#identification","title":"Identification","text":"<code>_UWIN</code> <p>Identifies the environment as U/Win.</p>"},{"location":"os/uwin/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/UWIN</li> </ul>"},{"location":"os/vms/","title":"VMS","text":""},{"location":"os/vms/#identification","title":"Identification","text":"<code>vms</code> <code>__vms</code> <code>__vms__</code> <p>Identifies the target operating system as VMS.</p> <code>VMS</code> <code>__VMS</code> <code>__VMS__</code> <p>Identifies the target operating system as VMS.</p>"},{"location":"os/vms/#versioning","title":"Versioning","text":"<code>__VMS_VER</code> <p>An integer for the version of VMS, which is encoded as a decimal integer with the general form of &lt;AABBCDDEE&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;AA&gt;<sub>10</sub> is the major version;</li> <li>&lt;BB&gt;<sub>10</sub> is the minor version;</li> <li>&lt;C&gt;<sub>10</sub> is the edit number;</li> <li>&lt;DD&gt;<sub>10</sub> is the patch version; and</li> <li>&lt;EE&gt;<sub>10</sub> indicates the release type.</li> </ul>"},{"location":"os/vms/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Vms</li> </ul>"},{"location":"os/vxworks/","title":"VxWorks","text":""},{"location":"os/vxworks/#identification","title":"Identification","text":"<code>__vxworks</code> <p>Identifies the target operating system as VxWorks.</p> <code>__VXWORKS__</code> <p>Identifies the target operating system as VxWorks.</p>"},{"location":"os/vxworks/#versioning","title":"Versioning","text":"<code>_WRS_VXWORKS_MAJOR</code> <p>An integer for the major version of VxWorks.</p> <code>_WRS_VXWORKS_MINOR</code> <p>An integer for the minor version of VxWorks.</p> <code>_WRS_VXWORKS_MAINT</code> <p>An integer for the patch version of VxWorks.</p>"},{"location":"os/vxworks/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/VxWorks</li> </ul>"},{"location":"os/wasi/","title":"wasi","text":""},{"location":"os/wasi/#identification","title":"Identification","text":"<p><code>__wasi__</code></p>"},{"location":"os/wasi/#references","title":"References","text":""},{"location":"os/webos/","title":"WebOS","text":""},{"location":"os/windows/","title":"Windows Environment","text":""},{"location":"os/windows/#identification","title":"Identification","text":"<code>__TOS_WIN__</code> <p>Identifies the target environment as Windows.</p> <code>_WIN16</code> <p>Identifies the target environment as Windows 16-bit.</p> <code>WIN32</code> <code>_WIN32</code> <code>__WIN32</code> <code>__WIN32__</code> <p>Identifies the target environment as Windows.</p> <code>_WIN64</code> <p>Identifies the target environment as Windows 64-bit.</p> <code>WINNT</code> <code>__WINNT</code> <code>__WINNT__</code> <p>Identifies the target environment as Windows.</p> <code>_WINDOWS</code> <code>__WINDOWS__</code> <p>Identifies the target environment as Windows.</p> <code>_WIN32_WCE</code> <p>Identifies the target environment as Windows CE.</p>"},{"location":"os/windows/#references","title":"References","text":"<ul> <li>http://msdn.microsoft.com/en-us/library/ff540443.aspx</li> <li>http://en.wikipedia.org/wiki/Category:Microsoft_Windows</li> <li>https://github.com/open-watcom/open-watcom-v2/blob/e71622efc810f8cdfd538a85a97eccee8c4feece/bld/cc/c/coptions.c#L357-L360</li> </ul>"},{"location":"os/windu/","title":"Wind/U Environment","text":""},{"location":"os/windu/#identification","title":"Identification","text":"<code>_WINDU_SOURCE</code> <p>Identifies the environment as Wind/U.</p>"},{"location":"os/windu/#versioning","title":"Versioning","text":"<code>_WINDU_SOURCE</code> <p>An integer for the version of Wind/U, which is encoded as a hexadecimal integer with the general form of &lt;AABBCC&gt;<sub>16</sub>, where:</p> <ul> <li>&lt;AABBCC&gt;<sub>16</sub> is the major version;</li> <li>&lt;AABBCC&gt;<sub>16</sub> is the minor version; and</li> <li>&lt;AABBCC&gt;<sub>16</sub> is the patch version.</li> </ul>"},{"location":"os/windu/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Bristol_Technology_Inc.</li> </ul>"},{"location":"os/zephyr/","title":"Zephyr","text":""},{"location":"os/zephyr/#identification","title":"Identification","text":"<code>__ZEPHYR__</code> <p>Identifies the target operating system as Zephyr.</p>"},{"location":"os/zephyr/#references","title":"References","text":"<ul> <li>https://github.com/zephyrproject-rtos/zephyr/blob/d79cf205c6f64ffcf92c24ea401d29f8b5b5c9b4/CMakeLists.txt#L148</li> </ul>"},{"location":"os/zos/","title":"z/OS","text":"<code>__HOS_MVS__</code> <p>Identifies the host operating system as z/OS.</p> <code>__MVS__</code> <p>Identifies the operating system as z/OS.</p> <code>__TOS_MVS__</code> <p>Identifies the target operating system as z/OS.</p>"},{"location":"os/zos/#references","title":"References","text":"<ul> <li>http://en.wikipedia.org/wiki/Z/OS</li> </ul>"},{"location":"platform/3ds/","title":"Nintendo 3DS","text":""},{"location":"platform/3ds/#identification","title":"Identification","text":"<code>__3DS__</code> <p>Identifies the target platform as the Nintendo 3DS.</p>"},{"location":"platform/dreamcast/","title":"Dreamcast","text":""},{"location":"platform/dreamcast/#identification","title":"Identification","text":"<code>_arch_dreamcast</code> <p>Identifies the target platform as Dreamcast.</p>"},{"location":"platform/ngage/","title":"N-Gage","text":""},{"location":"platform/ngage/#identification","title":"Identification","text":"<code>__NGAGE__</code> <p>Identifies the target platform as N-Gage.</p>"},{"location":"platform/ps2/","title":"PS2","text":""},{"location":"platform/ps2/#identification","title":"Identification","text":"<code>PS2</code> <code>__PS2__</code> <p>Identifies the target platform as the PS2.</p>"},{"location":"platform/psp/","title":"PSP","text":""},{"location":"platform/psp/#identification","title":"Identification","text":"<code>__psp__</code> <p>Identifies the target platform as PSP.</p> <code>__PSP__</code> <p>Identifies the target platform as PSP.</p>"},{"location":"platform/vita/","title":"PS Vita","text":""},{"location":"platform/vita/#identification","title":"Identification","text":"<code>__psp2__</code> <p>Identifies the target platform as the PS Vita.</p> <code>__vita__</code> <p>Identifies the target platform as the PS Vita.</p>"},{"location":"platform/windows-gdk/","title":"Windows GDK","text":""},{"location":"platform/windows-gdk/#identification","title":"Identification","text":"<code>_GAMING_DESKTOP</code> <p>Identifies the target platform as Windows GDK.</p> <p>Defined in <code>&lt;winapifamily.h&gt;</code>.</p>"},{"location":"platform/xbox-one/","title":"Xbox One","text":""},{"location":"platform/xbox-one/#identification","title":"Identification","text":"<code>_GAMING_XBOX_XBOXONE</code> <p>Identifies the target platform as Xbox One.</p> <p>Defined in <code>&lt;winapifamily.h&gt;</code>.</p>"},{"location":"platform/xbox-scarlett/","title":"Xbox Scarlett","text":""},{"location":"platform/xbox-scarlett/#identification","title":"Identification","text":"<code>_GAMING_XBOX_SCARLETT</code> <p>Identifies the target platform as Xbox Scarlett.</p> <p>Defined in <code>&lt;winapifamily.h&gt;</code>.</p>"},{"location":"standard/lsb/","title":"Linux Standard Base","text":""},{"location":"standard/lsb/#identification","title":"Identification","text":"<code>__LSB_VERSION__</code> <p>Identifies the Linux Standard Base.</p>"},{"location":"standard/lsb/#versioning","title":"Versioning","text":"<code>__LSB_VERSION__</code> <p>An integer for the version of the Linux Standard Base, encoded as a decimal integer with the general form of &lt;AB&gt;<sub>10</sub>, where:</p> <ul> <li>&lt;A&gt;<sub>10</sub> is the major version; and</li> <li>&lt;B&gt;<sub>10</sub> is the minor version.</li> </ul> <pre><code>__LSB_VERSION__ := ((&lt;major&gt; * 10) + &lt;minor&gt;)\n</code></pre>"},{"location":"standard/lsb/#references","title":"References","text":"<ul> <li>LSB - Wikipedia</li> </ul>"},{"location":"standard/openacc/","title":"OpenACC","text":""},{"location":"standard/openmp/","title":"OpenMP","text":""},{"location":"standard/xopen/","title":"X/Open","text":""}]}